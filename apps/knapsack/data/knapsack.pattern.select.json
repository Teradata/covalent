{
  "id": "select",
  "title": "Select",
  "description": "Interactive menu allowing users to choose from a list of options.",
  "statuses": {
    "main": "needsReview",
    "XQn0s6hkh9": "UPHFPB1cG"
  },
  "templates": [
    {
      "id": "web-components-qWXTtv81jY",
      "title": "Web components",
      "path": "../../../dist/libs/components/select.mjs",
      "alias": "cv-select",
      "templateLanguageId": "web-components",
      "spec": {
        "slots": {
          "default": {
            "allowedPatternIds": ["list-item"],
            "title": "default",
            "disallowText": true,
            "description": "Content to display in the selects internal <cv-menu> element."
          }
        },
        "props": {
          "$schema": "http://json-schema.org/draft-07/schema",
          "description": "",
          "type": "object",
          "required": ["required", "outlined"],
          "properties": {
            "label": {
              "type": "string",
              "description": "Sets floating label value. NOTE: The label will not float if the selected item has a falsey value property."
            },
            "value": {
              "type": "string",
              "description": "The select control's value determined by the value property of the currently selected list item. Setting value will attempt to select a list-item with the same value. If one does not match, it will set itself to \"\" and the index to -1. Setting value before the list item is attached will not select the item."
            },
            "validationMessage": {
              "type": "string",
              "description": "Message to show in the error color when the select is invalid. (Helper text will not be visible)"
            },
            "helper": {
              "type": "string",
              "description": "Helper text to display below the select. Always displays by default."
            },
            "icon": {
              "type": "string",
              "description": "Leading icon to display in select. See mwc-icon. Note: for proper list spacing, each list item must have graphic=\"icon\" or graphic=\"avatar\" to be set."
            },
            "required": {
              "description": "Displays error state if value is empty and select is blurred.",
              "type": "boolean"
            },
            "outlined": {
              "type": "boolean",
              "default": true,
              "description": "Whether or not to show the material outlined variant."
            },
            "naturalMenuWidth": {
              "description": "Sets the dropdown menu's width to auto.",
              "type": "boolean"
            },
            "fixedMenuPosition": {
              "description": "Sets the dropdown menu's position to fixed. This is useful when the select is inside of a stacking context e.g. inside of an mwc-dialog. Note, that --mdc-menu-min-width or --mdc-menu-max-width may have to be set to resize the menu to the width anchor.",
              "type": "boolean"
            },
            "disabled": {
              "description": "Whether or not the select should be disabled.",
              "type": "boolean"
            },
            "validateOnInitialRender": {
              "description": "Runs validation check on initial render.",
              "type": "boolean"
            }
          }
        }
      },
      "demoIds": ["sWH6jqeBc"],
      "blockIds": [
        "xfxc6pm6wB",
        "292rRzQTEj",
        "3lwZAwzyfx",
        "7IIE4f0aOE",
        "hUe8lWLcIB",
        "DzQO5KihiM",
        "LL9jRKkGGl"
      ]
    },
    {
      "id": "angular-n9X1RJ2v5c",
      "title": "Angular",
      "path": "@angular/material/select",
      "alias": "MatSelect",
      "templateLanguageId": "angular",
      "spec": {
        "slots": {
          "default": {
            "title": "default"
          }
        },
        "props": {
          "$schema": "http://json-schema.org/draft-07/schema",
          "description": "Interactive menu allowing users to choose from a list of options.",
          "type": "object",
          "required": [],
          "properties": {
            "ariaLabel": {
              "type": "string",
              "description": "Aria label of the select."
            },
            "ariaLabelledby": {
              "type": "string",
              "description": "Input that can be used to specify the aria-labelledby attribute."
            },
            "compareWith": {
              "description": "Function to compare the option values with the selected values. The first argument is a value from an option. The second is a value from the selection. A boolean should be returned.",
              "type": "object",
              "required": [],
              "properties": {}
            },
            "disableOptionCentering": {
              "description": "Whether to center the active option over the trigger.",
              "type": "boolean"
            },
            "disableRipple": {
              "description": "Whether ripples in the select are disabled.",
              "type": "boolean"
            },
            "disabled": {
              "description": "Whether the select is disabled.",
              "type": "boolean"
            },
            "errorStateMatcher": {
              "description": "Object used to control when error messages are shown.",
              "type": "object",
              "required": [],
              "properties": {}
            },
            "hideSingleSelectionIndicator": {
              "description": "Whether checkmark indicator for single-selection options is hidden.",
              "type": "boolean"
            },
            "id": {
              "type": "string",
              "description": "Unique id of the element."
            },
            "multiple": {
              "description": "Whether the user should be allowed to select multiple options.",
              "type": "boolean"
            },
            "panelClass": {
              "description": "Classes to be passed to the select panel. Supports the same syntax as ngClass.",
              "type": "string"
            },
            "panelWidth": {
              "type": "string",
              "description": "Width of the panel. If set to auto, the panel will match the trigger width. If set to null or an empty string, the panel will grow to match the longest option's text."
            },
            "placeholder": {
              "type": "string",
              "description": "Placeholder to be shown if no value has been selected."
            },
            "required": {
              "description": "Whether the component is required.",
              "type": "boolean"
            },
            "sortComparator": {
              "description": "Function used to sort the values in a select in multiple mode. Follows the same logic as Array.prototype.sort.",
              "type": "object",
              "required": [],
              "properties": {}
            },
            "typeaheadDebounceInterval": {
              "description": "Time to wait in milliseconds after the last keystroke before moving focus to an item.",
              "type": "number"
            },
            "value": {
              "description": "Value of the select control.",
              "type": "string"
            }
          }
        }
      },
      "demoIds": ["Go4ZYiw5NE"],
      "blockIds": [
        "IyZ6Dx0xLW",
        "tq3Bxybiyt",
        "BpOOOV4CJM",
        "HplWZS4e",
        "vlfP0PBZn"
      ]
    }
  ],
  "tabs": [
    {
      "id": "overview",
      "type": "subPage"
    },
    {
      "id": "web-components-qWXTtv81jY",
      "type": "template"
    },
    {
      "type": "template",
      "id": "angular-n9X1RJ2v5c"
    }
  ],
  "subPages": [
    {
      "id": "overview",
      "title": "Overview",
      "blockIds": []
    }
  ]
}
