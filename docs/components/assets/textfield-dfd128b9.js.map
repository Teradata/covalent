{"version":3,"file":"textfield-dfd128b9.js","sources":["../../../../node_modules/@material/mwc-textfield/node_modules/@material/base/foundation.js","../../../../node_modules/@material/mwc-textfield/node_modules/@material/textfield/constants.js","../../../../node_modules/@material/mwc-textfield/node_modules/@material/textfield/foundation.js","../../../../node_modules/lit-html/directives/live.js","../../../../node_modules/@material/mwc-textfield/mwc-textfield-base.js"],"sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar MDCFoundation = /** @class */ (function () {\n    function MDCFoundation(adapter) {\n        if (adapter === void 0) { adapter = {}; }\n        this.adapter = adapter;\n    }\n    Object.defineProperty(MDCFoundation, \"cssClasses\", {\n        get: function () {\n            // Classes extending MDCFoundation should implement this method to return an object which exports every\n            // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n            return {};\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"strings\", {\n        get: function () {\n            // Classes extending MDCFoundation should implement this method to return an object which exports all\n            // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n            return {};\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"numbers\", {\n        get: function () {\n            // Classes extending MDCFoundation should implement this method to return an object which exports all\n            // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n            return {};\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"defaultAdapter\", {\n        get: function () {\n            // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n            // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n            // validation.\n            return {};\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCFoundation.prototype.init = function () {\n        // Subclasses should override this method to perform initialization routines (registering events, etc.)\n    };\n    MDCFoundation.prototype.destroy = function () {\n        // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n    };\n    return MDCFoundation;\n}());\nexport { MDCFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar strings = {\n    ARIA_CONTROLS: 'aria-controls',\n    ARIA_DESCRIBEDBY: 'aria-describedby',\n    INPUT_SELECTOR: '.mdc-text-field__input',\n    LABEL_SELECTOR: '.mdc-floating-label',\n    LEADING_ICON_SELECTOR: '.mdc-text-field__icon--leading',\n    LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',\n    OUTLINE_SELECTOR: '.mdc-notched-outline',\n    PREFIX_SELECTOR: '.mdc-text-field__affix--prefix',\n    SUFFIX_SELECTOR: '.mdc-text-field__affix--suffix',\n    TRAILING_ICON_SELECTOR: '.mdc-text-field__icon--trailing'\n};\nvar cssClasses = {\n    DISABLED: 'mdc-text-field--disabled',\n    FOCUSED: 'mdc-text-field--focused',\n    HELPER_LINE: 'mdc-text-field-helper-line',\n    INVALID: 'mdc-text-field--invalid',\n    LABEL_FLOATING: 'mdc-text-field--label-floating',\n    NO_LABEL: 'mdc-text-field--no-label',\n    OUTLINED: 'mdc-text-field--outlined',\n    ROOT: 'mdc-text-field',\n    TEXTAREA: 'mdc-text-field--textarea',\n    WITH_LEADING_ICON: 'mdc-text-field--with-leading-icon',\n    WITH_TRAILING_ICON: 'mdc-text-field--with-trailing-icon',\n    WITH_INTERNAL_COUNTER: 'mdc-text-field--with-internal-counter',\n};\nvar numbers = {\n    LABEL_SCALE: 0.75,\n};\n/**\n * Whitelist based off of\n * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\n * under the \"Validation-related attributes\" section.\n */\nvar VALIDATION_ATTR_WHITELIST = [\n    'pattern',\n    'min',\n    'max',\n    'required',\n    'step',\n    'minlength',\n    'maxlength',\n];\n/**\n * Label should always float for these types as they show some UI even if value\n * is empty.\n */\nvar ALWAYS_FLOAT_TYPES = [\n    'color',\n    'date',\n    'datetime-local',\n    'month',\n    'range',\n    'time',\n    'week',\n];\nexport { cssClasses, strings, numbers, VALIDATION_ATTR_WHITELIST, ALWAYS_FLOAT_TYPES };\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends, __values } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { ALWAYS_FLOAT_TYPES, cssClasses, numbers, strings, VALIDATION_ATTR_WHITELIST } from './constants';\nvar POINTERDOWN_EVENTS = ['mousedown', 'touchstart'];\nvar INTERACTION_EVENTS = ['click', 'keydown'];\nvar MDCTextFieldFoundation = /** @class */ (function (_super) {\n    __extends(MDCTextFieldFoundation, _super);\n    /**\n     * @param adapter\n     * @param foundationMap Map from subcomponent names to their subfoundations.\n     */\n    function MDCTextFieldFoundation(adapter, foundationMap) {\n        if (foundationMap === void 0) { foundationMap = {}; }\n        var _this = _super.call(this, __assign(__assign({}, MDCTextFieldFoundation.defaultAdapter), adapter)) || this;\n        _this.isFocused = false;\n        _this.receivedUserInput = false;\n        _this.valid = true;\n        _this.useNativeValidation = true;\n        _this.validateOnValueChange = true;\n        _this.helperText = foundationMap.helperText;\n        _this.characterCounter = foundationMap.characterCounter;\n        _this.leadingIcon = foundationMap.leadingIcon;\n        _this.trailingIcon = foundationMap.trailingIcon;\n        _this.inputFocusHandler = function () {\n            _this.activateFocus();\n        };\n        _this.inputBlurHandler = function () {\n            _this.deactivateFocus();\n        };\n        _this.inputInputHandler = function () {\n            _this.handleInput();\n        };\n        _this.setPointerXOffset = function (evt) {\n            _this.setTransformOrigin(evt);\n        };\n        _this.textFieldInteractionHandler = function () {\n            _this.handleTextFieldInteraction();\n        };\n        _this.validationAttributeChangeHandler = function (attributesList) {\n            _this.handleValidationAttributeChange(attributesList);\n        };\n        return _this;\n    }\n    Object.defineProperty(MDCTextFieldFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldFoundation, \"numbers\", {\n        get: function () {\n            return numbers;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldFoundation.prototype, \"shouldAlwaysFloat\", {\n        get: function () {\n            var type = this.getNativeInput().type;\n            return ALWAYS_FLOAT_TYPES.indexOf(type) >= 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldFoundation.prototype, \"shouldFloat\", {\n        get: function () {\n            return this.shouldAlwaysFloat || this.isFocused || !!this.getValue() ||\n                this.isBadInput();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldFoundation.prototype, \"shouldShake\", {\n        get: function () {\n            return !this.isFocused && !this.isValid() && !!this.getValue();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldFoundation, \"defaultAdapter\", {\n        /**\n         * See {@link MDCTextFieldAdapter} for typing information on parameters and\n         * return types.\n         */\n        get: function () {\n            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n            return {\n                addClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                hasClass: function () { return true; },\n                setInputAttr: function () { return undefined; },\n                removeInputAttr: function () { return undefined; },\n                registerTextFieldInteractionHandler: function () { return undefined; },\n                deregisterTextFieldInteractionHandler: function () { return undefined; },\n                registerInputInteractionHandler: function () { return undefined; },\n                deregisterInputInteractionHandler: function () { return undefined; },\n                registerValidationAttributeChangeHandler: function () {\n                    return new MutationObserver(function () { return undefined; });\n                },\n                deregisterValidationAttributeChangeHandler: function () { return undefined; },\n                getNativeInput: function () { return null; },\n                isFocused: function () { return false; },\n                activateLineRipple: function () { return undefined; },\n                deactivateLineRipple: function () { return undefined; },\n                setLineRippleTransformOrigin: function () { return undefined; },\n                shakeLabel: function () { return undefined; },\n                floatLabel: function () { return undefined; },\n                setLabelRequired: function () { return undefined; },\n                hasLabel: function () { return false; },\n                getLabelWidth: function () { return 0; },\n                hasOutline: function () { return false; },\n                notchOutline: function () { return undefined; },\n                closeOutline: function () { return undefined; },\n            };\n            // tslint:enable:object-literal-sort-keys\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCTextFieldFoundation.prototype.init = function () {\n        var e_1, _a, e_2, _b;\n        if (this.adapter.hasLabel() && this.getNativeInput().required) {\n            this.adapter.setLabelRequired(true);\n        }\n        if (this.adapter.isFocused()) {\n            this.inputFocusHandler();\n        }\n        else if (this.adapter.hasLabel() && this.shouldFloat) {\n            this.notchOutline(true);\n            this.adapter.floatLabel(true);\n            this.styleFloating(true);\n        }\n        this.adapter.registerInputInteractionHandler('focus', this.inputFocusHandler);\n        this.adapter.registerInputInteractionHandler('blur', this.inputBlurHandler);\n        this.adapter.registerInputInteractionHandler('input', this.inputInputHandler);\n        try {\n            for (var POINTERDOWN_EVENTS_1 = __values(POINTERDOWN_EVENTS), POINTERDOWN_EVENTS_1_1 = POINTERDOWN_EVENTS_1.next(); !POINTERDOWN_EVENTS_1_1.done; POINTERDOWN_EVENTS_1_1 = POINTERDOWN_EVENTS_1.next()) {\n                var evtType = POINTERDOWN_EVENTS_1_1.value;\n                this.adapter.registerInputInteractionHandler(evtType, this.setPointerXOffset);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (POINTERDOWN_EVENTS_1_1 && !POINTERDOWN_EVENTS_1_1.done && (_a = POINTERDOWN_EVENTS_1.return)) _a.call(POINTERDOWN_EVENTS_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        try {\n            for (var INTERACTION_EVENTS_1 = __values(INTERACTION_EVENTS), INTERACTION_EVENTS_1_1 = INTERACTION_EVENTS_1.next(); !INTERACTION_EVENTS_1_1.done; INTERACTION_EVENTS_1_1 = INTERACTION_EVENTS_1.next()) {\n                var evtType = INTERACTION_EVENTS_1_1.value;\n                this.adapter.registerTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (INTERACTION_EVENTS_1_1 && !INTERACTION_EVENTS_1_1.done && (_b = INTERACTION_EVENTS_1.return)) _b.call(INTERACTION_EVENTS_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        this.validationObserver =\n            this.adapter.registerValidationAttributeChangeHandler(this.validationAttributeChangeHandler);\n        this.setcharacterCounter(this.getValue().length);\n    };\n    MDCTextFieldFoundation.prototype.destroy = function () {\n        var e_3, _a, e_4, _b;\n        this.adapter.deregisterInputInteractionHandler('focus', this.inputFocusHandler);\n        this.adapter.deregisterInputInteractionHandler('blur', this.inputBlurHandler);\n        this.adapter.deregisterInputInteractionHandler('input', this.inputInputHandler);\n        try {\n            for (var POINTERDOWN_EVENTS_2 = __values(POINTERDOWN_EVENTS), POINTERDOWN_EVENTS_2_1 = POINTERDOWN_EVENTS_2.next(); !POINTERDOWN_EVENTS_2_1.done; POINTERDOWN_EVENTS_2_1 = POINTERDOWN_EVENTS_2.next()) {\n                var evtType = POINTERDOWN_EVENTS_2_1.value;\n                this.adapter.deregisterInputInteractionHandler(evtType, this.setPointerXOffset);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (POINTERDOWN_EVENTS_2_1 && !POINTERDOWN_EVENTS_2_1.done && (_a = POINTERDOWN_EVENTS_2.return)) _a.call(POINTERDOWN_EVENTS_2);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        try {\n            for (var INTERACTION_EVENTS_2 = __values(INTERACTION_EVENTS), INTERACTION_EVENTS_2_1 = INTERACTION_EVENTS_2.next(); !INTERACTION_EVENTS_2_1.done; INTERACTION_EVENTS_2_1 = INTERACTION_EVENTS_2.next()) {\n                var evtType = INTERACTION_EVENTS_2_1.value;\n                this.adapter.deregisterTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler);\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (INTERACTION_EVENTS_2_1 && !INTERACTION_EVENTS_2_1.done && (_b = INTERACTION_EVENTS_2.return)) _b.call(INTERACTION_EVENTS_2);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        this.adapter.deregisterValidationAttributeChangeHandler(this.validationObserver);\n    };\n    /**\n     * Handles user interactions with the Text Field.\n     */\n    MDCTextFieldFoundation.prototype.handleTextFieldInteraction = function () {\n        var nativeInput = this.adapter.getNativeInput();\n        if (nativeInput && nativeInput.disabled) {\n            return;\n        }\n        this.receivedUserInput = true;\n    };\n    /**\n     * Handles validation attribute changes\n     */\n    MDCTextFieldFoundation.prototype.handleValidationAttributeChange = function (attributesList) {\n        var _this = this;\n        attributesList.some(function (attributeName) {\n            if (VALIDATION_ATTR_WHITELIST.indexOf(attributeName) > -1) {\n                _this.styleValidity(true);\n                _this.adapter.setLabelRequired(_this.getNativeInput().required);\n                return true;\n            }\n            return false;\n        });\n        if (attributesList.indexOf('maxlength') > -1) {\n            this.setcharacterCounter(this.getValue().length);\n        }\n    };\n    /**\n     * Opens/closes the notched outline.\n     */\n    MDCTextFieldFoundation.prototype.notchOutline = function (openNotch) {\n        if (!this.adapter.hasOutline() || !this.adapter.hasLabel()) {\n            return;\n        }\n        if (openNotch) {\n            var labelWidth = this.adapter.getLabelWidth() * numbers.LABEL_SCALE;\n            this.adapter.notchOutline(labelWidth);\n        }\n        else {\n            this.adapter.closeOutline();\n        }\n    };\n    /**\n     * Activates the text field focus state.\n     */\n    MDCTextFieldFoundation.prototype.activateFocus = function () {\n        this.isFocused = true;\n        this.styleFocused(this.isFocused);\n        this.adapter.activateLineRipple();\n        if (this.adapter.hasLabel()) {\n            this.notchOutline(this.shouldFloat);\n            this.adapter.floatLabel(this.shouldFloat);\n            this.styleFloating(this.shouldFloat);\n            this.adapter.shakeLabel(this.shouldShake);\n        }\n        if (this.helperText &&\n            (this.helperText.isPersistent() || !this.helperText.isValidation() ||\n                !this.valid)) {\n            this.helperText.showToScreenReader();\n        }\n    };\n    /**\n     * Sets the line ripple's transform origin, so that the line ripple activate\n     * animation will animate out from the user's click location.\n     */\n    MDCTextFieldFoundation.prototype.setTransformOrigin = function (evt) {\n        if (this.isDisabled() || this.adapter.hasOutline()) {\n            return;\n        }\n        var touches = evt.touches;\n        var targetEvent = touches ? touches[0] : evt;\n        var targetClientRect = targetEvent.target.getBoundingClientRect();\n        var normalizedX = targetEvent.clientX - targetClientRect.left;\n        this.adapter.setLineRippleTransformOrigin(normalizedX);\n    };\n    /**\n     * Handles input change of text input and text area.\n     */\n    MDCTextFieldFoundation.prototype.handleInput = function () {\n        this.autoCompleteFocus();\n        this.setcharacterCounter(this.getValue().length);\n    };\n    /**\n     * Activates the Text Field's focus state in cases when the input value\n     * changes without user input (e.g. programmatically).\n     */\n    MDCTextFieldFoundation.prototype.autoCompleteFocus = function () {\n        if (!this.receivedUserInput) {\n            this.activateFocus();\n        }\n    };\n    /**\n     * Deactivates the Text Field's focus state.\n     */\n    MDCTextFieldFoundation.prototype.deactivateFocus = function () {\n        this.isFocused = false;\n        this.adapter.deactivateLineRipple();\n        var isValid = this.isValid();\n        this.styleValidity(isValid);\n        this.styleFocused(this.isFocused);\n        if (this.adapter.hasLabel()) {\n            this.notchOutline(this.shouldFloat);\n            this.adapter.floatLabel(this.shouldFloat);\n            this.styleFloating(this.shouldFloat);\n            this.adapter.shakeLabel(this.shouldShake);\n        }\n        if (!this.shouldFloat) {\n            this.receivedUserInput = false;\n        }\n    };\n    MDCTextFieldFoundation.prototype.getValue = function () {\n        return this.getNativeInput().value;\n    };\n    /**\n     * @param value The value to set on the input Element.\n     */\n    MDCTextFieldFoundation.prototype.setValue = function (value) {\n        // Prevent Safari from moving the caret to the end of the input when the\n        // value has not changed.\n        if (this.getValue() !== value) {\n            this.getNativeInput().value = value;\n        }\n        this.setcharacterCounter(value.length);\n        if (this.validateOnValueChange) {\n            var isValid = this.isValid();\n            this.styleValidity(isValid);\n        }\n        if (this.adapter.hasLabel()) {\n            this.notchOutline(this.shouldFloat);\n            this.adapter.floatLabel(this.shouldFloat);\n            this.styleFloating(this.shouldFloat);\n            if (this.validateOnValueChange) {\n                this.adapter.shakeLabel(this.shouldShake);\n            }\n        }\n    };\n    /**\n     * @return The custom validity state, if set; otherwise, the result of a\n     *     native validity check.\n     */\n    MDCTextFieldFoundation.prototype.isValid = function () {\n        return this.useNativeValidation ? this.isNativeInputValid() : this.valid;\n    };\n    /**\n     * @param isValid Sets the custom validity state of the Text Field.\n     */\n    MDCTextFieldFoundation.prototype.setValid = function (isValid) {\n        this.valid = isValid;\n        this.styleValidity(isValid);\n        var shouldShake = !isValid && !this.isFocused && !!this.getValue();\n        if (this.adapter.hasLabel()) {\n            this.adapter.shakeLabel(shouldShake);\n        }\n    };\n    /**\n     * @param shouldValidate Whether or not validity should be updated on\n     *     value change.\n     */\n    MDCTextFieldFoundation.prototype.setValidateOnValueChange = function (shouldValidate) {\n        this.validateOnValueChange = shouldValidate;\n    };\n    /**\n     * @return Whether or not validity should be updated on value change. `true`\n     *     by default.\n     */\n    MDCTextFieldFoundation.prototype.getValidateOnValueChange = function () {\n        return this.validateOnValueChange;\n    };\n    /**\n     * Enables or disables the use of native validation. Use this for custom\n     * validation.\n     * @param useNativeValidation Set this to false to ignore native input\n     *     validation.\n     */\n    MDCTextFieldFoundation.prototype.setUseNativeValidation = function (useNativeValidation) {\n        this.useNativeValidation = useNativeValidation;\n    };\n    MDCTextFieldFoundation.prototype.isDisabled = function () {\n        return this.getNativeInput().disabled;\n    };\n    /**\n     * @param disabled Sets the text-field disabled or enabled.\n     */\n    MDCTextFieldFoundation.prototype.setDisabled = function (disabled) {\n        this.getNativeInput().disabled = disabled;\n        this.styleDisabled(disabled);\n    };\n    /**\n     * @param content Sets the content of the helper text.\n     */\n    MDCTextFieldFoundation.prototype.setHelperTextContent = function (content) {\n        if (this.helperText) {\n            this.helperText.setContent(content);\n        }\n    };\n    /**\n     * Sets the aria label of the leading icon.\n     */\n    MDCTextFieldFoundation.prototype.setLeadingIconAriaLabel = function (label) {\n        if (this.leadingIcon) {\n            this.leadingIcon.setAriaLabel(label);\n        }\n    };\n    /**\n     * Sets the text content of the leading icon.\n     */\n    MDCTextFieldFoundation.prototype.setLeadingIconContent = function (content) {\n        if (this.leadingIcon) {\n            this.leadingIcon.setContent(content);\n        }\n    };\n    /**\n     * Sets the aria label of the trailing icon.\n     */\n    MDCTextFieldFoundation.prototype.setTrailingIconAriaLabel = function (label) {\n        if (this.trailingIcon) {\n            this.trailingIcon.setAriaLabel(label);\n        }\n    };\n    /**\n     * Sets the text content of the trailing icon.\n     */\n    MDCTextFieldFoundation.prototype.setTrailingIconContent = function (content) {\n        if (this.trailingIcon) {\n            this.trailingIcon.setContent(content);\n        }\n    };\n    /**\n     * Sets character counter values that shows characters used and the total\n     * character limit.\n     */\n    MDCTextFieldFoundation.prototype.setcharacterCounter = function (currentLength) {\n        if (!this.characterCounter) {\n            return;\n        }\n        var maxLength = this.getNativeInput().maxLength;\n        if (maxLength === -1) {\n            throw new Error('MDCTextFieldFoundation: Expected maxlength html property on text input or textarea.');\n        }\n        this.characterCounter.setCounterValue(currentLength, maxLength);\n    };\n    /**\n     * @return True if the Text Field input fails in converting the user-supplied\n     *     value.\n     */\n    MDCTextFieldFoundation.prototype.isBadInput = function () {\n        // The badInput property is not supported in IE 11 💩.\n        return this.getNativeInput().validity.badInput || false;\n    };\n    /**\n     * @return The result of native validity checking (ValidityState.valid).\n     */\n    MDCTextFieldFoundation.prototype.isNativeInputValid = function () {\n        return this.getNativeInput().validity.valid;\n    };\n    /**\n     * Styles the component based on the validity state.\n     */\n    MDCTextFieldFoundation.prototype.styleValidity = function (isValid) {\n        var INVALID = MDCTextFieldFoundation.cssClasses.INVALID;\n        if (isValid) {\n            this.adapter.removeClass(INVALID);\n        }\n        else {\n            this.adapter.addClass(INVALID);\n        }\n        if (this.helperText) {\n            this.helperText.setValidity(isValid);\n            // We dynamically set or unset aria-describedby for validation helper text\n            // only, based on whether the field is valid\n            var helperTextValidation = this.helperText.isValidation();\n            if (!helperTextValidation) {\n                return;\n            }\n            var helperTextVisible = this.helperText.isVisible();\n            var helperTextId = this.helperText.getId();\n            if (helperTextVisible && helperTextId) {\n                this.adapter.setInputAttr(strings.ARIA_DESCRIBEDBY, helperTextId);\n            }\n            else {\n                this.adapter.removeInputAttr(strings.ARIA_DESCRIBEDBY);\n            }\n        }\n    };\n    /**\n     * Styles the component based on the focused state.\n     */\n    MDCTextFieldFoundation.prototype.styleFocused = function (isFocused) {\n        var FOCUSED = MDCTextFieldFoundation.cssClasses.FOCUSED;\n        if (isFocused) {\n            this.adapter.addClass(FOCUSED);\n        }\n        else {\n            this.adapter.removeClass(FOCUSED);\n        }\n    };\n    /**\n     * Styles the component based on the disabled state.\n     */\n    MDCTextFieldFoundation.prototype.styleDisabled = function (isDisabled) {\n        var _a = MDCTextFieldFoundation.cssClasses, DISABLED = _a.DISABLED, INVALID = _a.INVALID;\n        if (isDisabled) {\n            this.adapter.addClass(DISABLED);\n            this.adapter.removeClass(INVALID);\n        }\n        else {\n            this.adapter.removeClass(DISABLED);\n        }\n        if (this.leadingIcon) {\n            this.leadingIcon.setDisabled(isDisabled);\n        }\n        if (this.trailingIcon) {\n            this.trailingIcon.setDisabled(isDisabled);\n        }\n    };\n    /**\n     * Styles the component based on the label floating state.\n     */\n    MDCTextFieldFoundation.prototype.styleFloating = function (isFloating) {\n        var LABEL_FLOATING = MDCTextFieldFoundation.cssClasses.LABEL_FLOATING;\n        if (isFloating) {\n            this.adapter.addClass(LABEL_FLOATING);\n        }\n        else {\n            this.adapter.removeClass(LABEL_FLOATING);\n        }\n    };\n    /**\n     * @return The native text input element from the host environment, or an\n     *     object with the same shape for unit tests.\n     */\n    MDCTextFieldFoundation.prototype.getNativeInput = function () {\n        // this.adapter may be undefined in foundation unit tests. This happens when\n        // testdouble is creating a mock object and invokes the\n        // shouldShake/shouldFloat getters (which in turn call getValue(), which\n        // calls this method) before init() has been called from the MDCTextField\n        // constructor. To work around that issue, we return a dummy object.\n        var nativeInput = this.adapter ? this.adapter.getNativeInput() : null;\n        return nativeInput || {\n            disabled: false,\n            maxLength: -1,\n            required: false,\n            type: 'input',\n            validity: {\n                badInput: false,\n                valid: true,\n            },\n            value: '',\n        };\n    };\n    return MDCTextFieldFoundation;\n}(MDCFoundation));\nexport { MDCTextFieldFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCTextFieldFoundation;\n//# sourceMappingURL=foundation.js.map","import{noChange as r,nothing as e}from\"../lit-html.js\";import{directive as i,Directive as t,PartType as n}from\"../directive.js\";import{isSingleExpression as o,setCommittedValue as s}from\"../directive-helpers.js\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const l=i(class extends t{constructor(r){if(super(r),r.type!==n.PROPERTY&&r.type!==n.ATTRIBUTE&&r.type!==n.BOOLEAN_ATTRIBUTE)throw Error(\"The `live` directive is not allowed on child or event bindings\");if(!o(r))throw Error(\"`live` bindings can only contain a single expression\")}render(r){return r}update(i,[t]){if(t===r||t===e)return t;const o=i.element,l=i.name;if(i.type===n.PROPERTY){if(t===o[l])return r}else if(i.type===n.BOOLEAN_ATTRIBUTE){if(!!t===o.hasAttribute(l))return r}else if(i.type===n.ATTRIBUTE&&o.getAttribute(l)===t+\"\")return r;return s(i),t}});export{l as live};\n//# sourceMappingURL=live.js.map\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport '@material/mwc-notched-outline/mwc-notched-outline.js';\nimport { addHasRemoveClass, FormElement } from '@material/mwc-base/form-element.js';\nimport { observer } from '@material/mwc-base/observer.js';\nimport { floatingLabel } from '@material/mwc-floating-label/mwc-floating-label-directive.js';\nimport { lineRipple } from '@material/mwc-line-ripple/mwc-line-ripple-directive.js';\nimport MDCTextFieldFoundation from '@material/textfield/foundation.js';\nimport { html } from 'lit';\nimport { eventOptions, property, query, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { live } from 'lit/directives/live.js';\nconst passiveEvents = ['touchstart', 'touchmove', 'scroll', 'mousewheel'];\nconst createValidityObj = (customValidity = {}) => {\n    /*\n     * We need to make ValidityState an object because it is readonly and\n     * we cannot use the spread operator. Also, we don't export\n     * `CustomValidityState` because it is a leaky implementation and the user\n     * already has access to `ValidityState` in lib.dom.ts. Also an interface\n     * {a: Type} can be casted to {readonly a: Type} so passing any object\n     * should be fine.\n     */\n    const objectifiedCustomValidity = {};\n    // eslint-disable-next-line guard-for-in\n    for (const propName in customValidity) {\n        /*\n         * Casting is needed because ValidityState's props are all readonly and\n         * thus cannot be set on `onjectifiedCustomValidity`. In the end, the\n         * interface is the same as ValidityState (but not readonly), but the\n         * function signature casts the output to ValidityState (thus readonly).\n         */\n        objectifiedCustomValidity[propName] =\n            customValidity[propName];\n    }\n    return Object.assign({ badInput: false, customError: false, patternMismatch: false, rangeOverflow: false, rangeUnderflow: false, stepMismatch: false, tooLong: false, tooShort: false, typeMismatch: false, valid: true, valueMissing: false }, objectifiedCustomValidity);\n};\n/** @soyCompatible */\nexport class TextFieldBase extends FormElement {\n    constructor() {\n        super(...arguments);\n        this.mdcFoundationClass = MDCTextFieldFoundation;\n        this.value = '';\n        this.type = 'text';\n        this.placeholder = '';\n        this.label = '';\n        this.icon = '';\n        this.iconTrailing = '';\n        this.disabled = false;\n        this.required = false;\n        this.minLength = -1;\n        this.maxLength = -1;\n        this.outlined = false;\n        this.helper = '';\n        this.validateOnInitialRender = false;\n        this.validationMessage = '';\n        this.autoValidate = false;\n        this.pattern = '';\n        this.min = '';\n        this.max = '';\n        /**\n         * step can be a number or the keyword \"any\".\n         *\n         * Use `String` typing to pass down the value as a string and let the native\n         * input cast internally as needed.\n         */\n        this.step = null;\n        this.size = null;\n        this.helperPersistent = false;\n        this.charCounter = false;\n        this.endAligned = false;\n        this.prefix = '';\n        this.suffix = '';\n        this.name = '';\n        this.readOnly = false;\n        this.autocapitalize = '';\n        this.outlineOpen = false;\n        this.outlineWidth = 0;\n        this.isUiValid = true;\n        this.focused = false;\n        this._validity = createValidityObj();\n        this.validityTransform = null;\n    }\n    get validity() {\n        this._checkValidity(this.value);\n        return this._validity;\n    }\n    get willValidate() {\n        return this.formElement.willValidate;\n    }\n    get selectionStart() {\n        return this.formElement.selectionStart;\n    }\n    get selectionEnd() {\n        return this.formElement.selectionEnd;\n    }\n    focus() {\n        const focusEvt = new CustomEvent('focus');\n        this.formElement.dispatchEvent(focusEvt);\n        this.formElement.focus();\n    }\n    blur() {\n        const blurEvt = new CustomEvent('blur');\n        this.formElement.dispatchEvent(blurEvt);\n        this.formElement.blur();\n    }\n    select() {\n        this.formElement.select();\n    }\n    setSelectionRange(selectionStart, selectionEnd, selectionDirection) {\n        this.formElement.setSelectionRange(selectionStart, selectionEnd, selectionDirection);\n    }\n    update(changedProperties) {\n        if (changedProperties.has('autoValidate') && this.mdcFoundation) {\n            this.mdcFoundation.setValidateOnValueChange(this.autoValidate);\n        }\n        if (changedProperties.has('value') && typeof this.value !== 'string') {\n            this.value = `${this.value}`;\n        }\n        super.update(changedProperties);\n    }\n    setFormData(formData) {\n        if (this.name) {\n            formData.append(this.name, this.value);\n        }\n    }\n    /** @soyTemplate */\n    render() {\n        const shouldRenderCharCounter = this.charCounter && this.maxLength !== -1;\n        const shouldRenderHelperText = !!this.helper || !!this.validationMessage || shouldRenderCharCounter;\n        /** @classMap */\n        const classes = {\n            'mdc-text-field--disabled': this.disabled,\n            'mdc-text-field--no-label': !this.label,\n            'mdc-text-field--filled': !this.outlined,\n            'mdc-text-field--outlined': this.outlined,\n            'mdc-text-field--with-leading-icon': this.icon,\n            'mdc-text-field--with-trailing-icon': this.iconTrailing,\n            'mdc-text-field--end-aligned': this.endAligned,\n        };\n        return html `\n      <label class=\"mdc-text-field ${classMap(classes)}\">\n        ${this.renderRipple()}\n        ${this.outlined ? this.renderOutline() : this.renderLabel()}\n        ${this.renderLeadingIcon()}\n        ${this.renderPrefix()}\n        ${this.renderInput(shouldRenderHelperText)}\n        ${this.renderSuffix()}\n        ${this.renderTrailingIcon()}\n        ${this.renderLineRipple()}\n      </label>\n      ${this.renderHelperText(shouldRenderHelperText, shouldRenderCharCounter)}\n    `;\n    }\n    updated(changedProperties) {\n        if (changedProperties.has('value') &&\n            changedProperties.get('value') !== undefined) {\n            this.mdcFoundation.setValue(this.value);\n            if (this.autoValidate) {\n                this.reportValidity();\n            }\n        }\n    }\n    /** @soyTemplate */\n    renderRipple() {\n        return this.outlined ? '' : html `\n      <span class=\"mdc-text-field__ripple\"></span>\n    `;\n    }\n    /** @soyTemplate */\n    renderOutline() {\n        return !this.outlined ? '' : html `\n      <mwc-notched-outline\n          .width=${this.outlineWidth}\n          .open=${this.outlineOpen}\n          class=\"mdc-notched-outline\">\n        ${this.renderLabel()}\n      </mwc-notched-outline>`;\n    }\n    /** @soyTemplate */\n    renderLabel() {\n        return !this.label ?\n            '' :\n            html `\n      <span\n          .floatingLabelFoundation=${floatingLabel(this.label)}\n          id=\"label\">${this.label}</span>\n    `;\n    }\n    /** @soyTemplate */\n    renderLeadingIcon() {\n        return this.icon ? this.renderIcon(this.icon) : '';\n    }\n    /** @soyTemplate */\n    renderTrailingIcon() {\n        return this.iconTrailing ? this.renderIcon(this.iconTrailing, true) : '';\n    }\n    /** @soyTemplate */\n    renderIcon(icon, isTrailingIcon = false) {\n        /** @classMap */\n        const classes = {\n            'mdc-text-field__icon--leading': !isTrailingIcon,\n            'mdc-text-field__icon--trailing': isTrailingIcon\n        };\n        return html `<i class=\"material-icons mdc-text-field__icon ${classMap(classes)}\">${icon}</i>`;\n    }\n    /** @soyTemplate */\n    renderPrefix() {\n        return this.prefix ? this.renderAffix(this.prefix) : '';\n    }\n    /** @soyTemplate */\n    renderSuffix() {\n        return this.suffix ? this.renderAffix(this.suffix, true) : '';\n    }\n    /** @soyTemplate */\n    renderAffix(content, isSuffix = false) {\n        /** @classMap */\n        const classes = {\n            'mdc-text-field__affix--prefix': !isSuffix,\n            'mdc-text-field__affix--suffix': isSuffix\n        };\n        return html `<span class=\"mdc-text-field__affix ${classMap(classes)}\">\n        ${content}</span>`;\n    }\n    /** @soyTemplate */\n    renderInput(shouldRenderHelperText) {\n        const minOrUndef = this.minLength === -1 ? undefined : this.minLength;\n        const maxOrUndef = this.maxLength === -1 ? undefined : this.maxLength;\n        const autocapitalizeOrUndef = this.autocapitalize ?\n            this.autocapitalize :\n            undefined;\n        const showValidationMessage = this.validationMessage && !this.isUiValid;\n        const ariaLabelledbyOrUndef = !!this.label ? 'label' : undefined;\n        const ariaControlsOrUndef = shouldRenderHelperText ? 'helper-text' : undefined;\n        const ariaDescribedbyOrUndef = this.focused || this.helperPersistent || showValidationMessage ?\n            'helper-text' :\n            undefined;\n        // TODO: live() directive needs casting for lit-analyzer\n        // https://github.com/runem/lit-analyzer/pull/91/files\n        // TODO: lit-analyzer labels min/max as (number|string) instead of string\n        return html `\n      <input\n          aria-labelledby=${ifDefined(ariaLabelledbyOrUndef)}\n          aria-controls=\"${ifDefined(ariaControlsOrUndef)}\"\n          aria-describedby=\"${ifDefined(ariaDescribedbyOrUndef)}\"\n          class=\"mdc-text-field__input\"\n          type=\"${this.type}\"\n          .value=\"${live(this.value)}\"\n          ?disabled=\"${this.disabled}\"\n          placeholder=\"${this.placeholder}\"\n          ?required=\"${this.required}\"\n          ?readonly=\"${this.readOnly}\"\n          minlength=\"${ifDefined(minOrUndef)}\"\n          maxlength=\"${ifDefined(maxOrUndef)}\"\n          pattern=\"${ifDefined(this.pattern ? this.pattern : undefined)}\"\n          min=\"${ifDefined(this.min === '' ? undefined : this.min)}\"\n          max=\"${ifDefined(this.max === '' ? undefined : this.max)}\"\n          step=\"${ifDefined(this.step === null ? undefined : this.step)}\"\n          size=\"${ifDefined(this.size === null ? undefined : this.size)}\"\n          name=\"${ifDefined(this.name === '' ? undefined : this.name)}\"\n          inputmode=\"${ifDefined(this.inputMode)}\"\n          autocapitalize=\"${ifDefined(autocapitalizeOrUndef)}\"\n          @input=\"${this.handleInputChange}\"\n          @focus=\"${this.onInputFocus}\"\n          @blur=\"${this.onInputBlur}\">`;\n    }\n    /** @soyTemplate */\n    renderLineRipple() {\n        return this.outlined ?\n            '' :\n            html `\n      <span .lineRippleFoundation=${lineRipple()}></span>\n    `;\n    }\n    /** @soyTemplate */\n    renderHelperText(shouldRenderHelperText, shouldRenderCharCounter) {\n        const showValidationMessage = this.validationMessage && !this.isUiValid;\n        /** @classMap */\n        const classes = {\n            'mdc-text-field-helper-text--persistent': this.helperPersistent,\n            'mdc-text-field-helper-text--validation-msg': showValidationMessage,\n        };\n        const ariaHiddenOrUndef = this.focused || this.helperPersistent || showValidationMessage ?\n            undefined :\n            'true';\n        const helperText = showValidationMessage ? this.validationMessage : this.helper;\n        return !shouldRenderHelperText ? '' : html `\n      <div class=\"mdc-text-field-helper-line\">\n        <div id=\"helper-text\"\n             aria-hidden=\"${ifDefined(ariaHiddenOrUndef)}\"\n             class=\"mdc-text-field-helper-text ${classMap(classes)}\"\n             >${helperText}</div>\n        ${this.renderCharCounter(shouldRenderCharCounter)}\n      </div>`;\n    }\n    /** @soyTemplate */\n    renderCharCounter(shouldRenderCharCounter) {\n        const length = Math.min(this.value.length, this.maxLength);\n        return !shouldRenderCharCounter ? '' : html `\n      <span class=\"mdc-text-field-character-counter\"\n            >${length} / ${this.maxLength}</span>`;\n    }\n    onInputFocus() {\n        this.focused = true;\n    }\n    onInputBlur() {\n        this.focused = false;\n        this.reportValidity();\n    }\n    checkValidity() {\n        const isValid = this._checkValidity(this.value);\n        if (!isValid) {\n            const invalidEvent = new Event('invalid', { bubbles: false, cancelable: true });\n            this.dispatchEvent(invalidEvent);\n        }\n        return isValid;\n    }\n    reportValidity() {\n        const isValid = this.checkValidity();\n        this.mdcFoundation.setValid(isValid);\n        this.isUiValid = isValid;\n        return isValid;\n    }\n    _checkValidity(value) {\n        const nativeValidity = this.formElement.validity;\n        let validity = createValidityObj(nativeValidity);\n        if (this.validityTransform) {\n            const customValidity = this.validityTransform(value, validity);\n            validity = Object.assign(Object.assign({}, validity), customValidity);\n            this.mdcFoundation.setUseNativeValidation(false);\n        }\n        else {\n            this.mdcFoundation.setUseNativeValidation(true);\n        }\n        this._validity = validity;\n        return this._validity.valid;\n    }\n    setCustomValidity(message) {\n        this.validationMessage = message;\n        this.formElement.setCustomValidity(message);\n    }\n    handleInputChange() {\n        this.value = this.formElement.value;\n    }\n    createAdapter() {\n        return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, this.getRootAdapterMethods()), this.getInputAdapterMethods()), this.getLabelAdapterMethods()), this.getLineRippleAdapterMethods()), this.getOutlineAdapterMethods());\n    }\n    getRootAdapterMethods() {\n        return Object.assign({ registerTextFieldInteractionHandler: (evtType, handler) => this.addEventListener(evtType, handler), deregisterTextFieldInteractionHandler: (evtType, handler) => this.removeEventListener(evtType, handler), registerValidationAttributeChangeHandler: (handler) => {\n                const getAttributesList = (mutationsList) => {\n                    return mutationsList.map((mutation) => mutation.attributeName)\n                        .filter((attributeName) => attributeName);\n                };\n                const observer = new MutationObserver((mutationsList) => {\n                    handler(getAttributesList(mutationsList));\n                });\n                const config = { attributes: true };\n                observer.observe(this.formElement, config);\n                return observer;\n            }, deregisterValidationAttributeChangeHandler: (observer) => observer.disconnect() }, addHasRemoveClass(this.mdcRoot));\n    }\n    getInputAdapterMethods() {\n        return {\n            getNativeInput: () => this.formElement,\n            // since HelperTextFoundation is not used, aria-describedby a11y logic\n            // is implemented in render method instead of these adapter methods\n            setInputAttr: () => undefined,\n            removeInputAttr: () => undefined,\n            isFocused: () => this.shadowRoot ?\n                this.shadowRoot.activeElement === this.formElement :\n                false,\n            registerInputInteractionHandler: (evtType, handler) => this.formElement.addEventListener(evtType, handler, { passive: evtType in passiveEvents }),\n            deregisterInputInteractionHandler: (evtType, handler) => this.formElement.removeEventListener(evtType, handler),\n        };\n    }\n    getLabelAdapterMethods() {\n        return {\n            floatLabel: (shouldFloat) => this.labelElement &&\n                this.labelElement.floatingLabelFoundation.float(shouldFloat),\n            getLabelWidth: () => {\n                return this.labelElement ?\n                    this.labelElement.floatingLabelFoundation.getWidth() :\n                    0;\n            },\n            hasLabel: () => Boolean(this.labelElement),\n            shakeLabel: (shouldShake) => this.labelElement &&\n                this.labelElement.floatingLabelFoundation.shake(shouldShake),\n            setLabelRequired: (isRequired) => {\n                if (this.labelElement) {\n                    this.labelElement.floatingLabelFoundation.setRequired(isRequired);\n                }\n            },\n        };\n    }\n    getLineRippleAdapterMethods() {\n        return {\n            activateLineRipple: () => {\n                if (this.lineRippleElement) {\n                    this.lineRippleElement.lineRippleFoundation.activate();\n                }\n            },\n            deactivateLineRipple: () => {\n                if (this.lineRippleElement) {\n                    this.lineRippleElement.lineRippleFoundation.deactivate();\n                }\n            },\n            setLineRippleTransformOrigin: (normalizedX) => {\n                if (this.lineRippleElement) {\n                    this.lineRippleElement.lineRippleFoundation.setRippleCenter(normalizedX);\n                }\n            },\n        };\n    }\n    // tslint:disable:ban-ts-ignore\n    async getUpdateComplete() {\n        var _a;\n        // @ts-ignore\n        const result = await super.getUpdateComplete();\n        await ((_a = this.outlineElement) === null || _a === void 0 ? void 0 : _a.updateComplete);\n        return result;\n    }\n    // tslint:enable:ban-ts-ignore\n    firstUpdated() {\n        var _a;\n        super.firstUpdated();\n        this.mdcFoundation.setValidateOnValueChange(this.autoValidate);\n        if (this.validateOnInitialRender) {\n            this.reportValidity();\n        }\n        // wait for the outline element to render to update the notch width\n        (_a = this.outlineElement) === null || _a === void 0 ? void 0 : _a.updateComplete.then(() => {\n            var _a;\n            // `foundation.notchOutline()` assumes the label isn't floating and\n            // multiplies by a constant, but the label is already is floating at this\n            // stage, therefore directly set the outline width to the label width\n            this.outlineWidth =\n                ((_a = this.labelElement) === null || _a === void 0 ? void 0 : _a.floatingLabelFoundation.getWidth()) || 0;\n        });\n    }\n    getOutlineAdapterMethods() {\n        return {\n            closeOutline: () => this.outlineElement && (this.outlineOpen = false),\n            hasOutline: () => Boolean(this.outlineElement),\n            notchOutline: (labelWidth) => {\n                const outlineElement = this.outlineElement;\n                if (outlineElement && !this.outlineOpen) {\n                    this.outlineWidth = labelWidth;\n                    this.outlineOpen = true;\n                }\n            }\n        };\n    }\n    async layout() {\n        await this.updateComplete;\n        const labelElement = this.labelElement;\n        if (!labelElement) {\n            this.outlineOpen = false;\n            return;\n        }\n        const shouldFloat = !!this.label && !!this.value;\n        labelElement.floatingLabelFoundation.float(shouldFloat);\n        if (!this.outlined) {\n            return;\n        }\n        this.outlineOpen = shouldFloat;\n        await this.updateComplete;\n        /* When the textfield automatically notches due to a value and label\n         * being defined, the textfield may be set to `display: none` by the user.\n         * this means that the notch is of size 0px. We provide this function so\n         * that the user may manually resize the notch to the floated label's\n         * width.\n         */\n        const labelWidth = labelElement.floatingLabelFoundation.getWidth();\n        if (this.outlineOpen) {\n            this.outlineWidth = labelWidth;\n            await this.updateComplete;\n        }\n    }\n}\n__decorate([\n    query('.mdc-text-field')\n], TextFieldBase.prototype, \"mdcRoot\", void 0);\n__decorate([\n    query('input')\n], TextFieldBase.prototype, \"formElement\", void 0);\n__decorate([\n    query('.mdc-floating-label')\n], TextFieldBase.prototype, \"labelElement\", void 0);\n__decorate([\n    query('.mdc-line-ripple')\n], TextFieldBase.prototype, \"lineRippleElement\", void 0);\n__decorate([\n    query('mwc-notched-outline')\n], TextFieldBase.prototype, \"outlineElement\", void 0);\n__decorate([\n    query('.mdc-notched-outline__notch')\n], TextFieldBase.prototype, \"notchElement\", void 0);\n__decorate([\n    property({ type: String })\n], TextFieldBase.prototype, \"value\", void 0);\n__decorate([\n    property({ type: String })\n], TextFieldBase.prototype, \"type\", void 0);\n__decorate([\n    property({ type: String })\n], TextFieldBase.prototype, \"placeholder\", void 0);\n__decorate([\n    property({ type: String }),\n    observer(function (_newVal, oldVal) {\n        if (oldVal !== undefined && this.label !== oldVal) {\n            this.layout();\n        }\n    })\n], TextFieldBase.prototype, \"label\", void 0);\n__decorate([\n    property({ type: String })\n], TextFieldBase.prototype, \"icon\", void 0);\n__decorate([\n    property({ type: String })\n], TextFieldBase.prototype, \"iconTrailing\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], TextFieldBase.prototype, \"disabled\", void 0);\n__decorate([\n    property({ type: Boolean })\n], TextFieldBase.prototype, \"required\", void 0);\n__decorate([\n    property({ type: Number })\n], TextFieldBase.prototype, \"minLength\", void 0);\n__decorate([\n    property({ type: Number })\n], TextFieldBase.prototype, \"maxLength\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true }),\n    observer(function (_newVal, oldVal) {\n        if (oldVal !== undefined && this.outlined !== oldVal) {\n            this.layout();\n        }\n    })\n], TextFieldBase.prototype, \"outlined\", void 0);\n__decorate([\n    property({ type: String })\n], TextFieldBase.prototype, \"helper\", void 0);\n__decorate([\n    property({ type: Boolean })\n], TextFieldBase.prototype, \"validateOnInitialRender\", void 0);\n__decorate([\n    property({ type: String })\n], TextFieldBase.prototype, \"validationMessage\", void 0);\n__decorate([\n    property({ type: Boolean })\n], TextFieldBase.prototype, \"autoValidate\", void 0);\n__decorate([\n    property({ type: String })\n], TextFieldBase.prototype, \"pattern\", void 0);\n__decorate([\n    property({ type: String })\n], TextFieldBase.prototype, \"min\", void 0);\n__decorate([\n    property({ type: String })\n], TextFieldBase.prototype, \"max\", void 0);\n__decorate([\n    property({ type: String })\n], TextFieldBase.prototype, \"step\", void 0);\n__decorate([\n    property({ type: Number })\n], TextFieldBase.prototype, \"size\", void 0);\n__decorate([\n    property({ type: Boolean })\n], TextFieldBase.prototype, \"helperPersistent\", void 0);\n__decorate([\n    property({ type: Boolean })\n], TextFieldBase.prototype, \"charCounter\", void 0);\n__decorate([\n    property({ type: Boolean })\n], TextFieldBase.prototype, \"endAligned\", void 0);\n__decorate([\n    property({ type: String })\n], TextFieldBase.prototype, \"prefix\", void 0);\n__decorate([\n    property({ type: String })\n], TextFieldBase.prototype, \"suffix\", void 0);\n__decorate([\n    property({ type: String })\n], TextFieldBase.prototype, \"name\", void 0);\n__decorate([\n    property({ type: String })\n], TextFieldBase.prototype, \"inputMode\", void 0);\n__decorate([\n    property({ type: Boolean })\n], TextFieldBase.prototype, \"readOnly\", void 0);\n__decorate([\n    property({ type: String })\n], TextFieldBase.prototype, \"autocapitalize\", void 0);\n__decorate([\n    state()\n], TextFieldBase.prototype, \"outlineOpen\", void 0);\n__decorate([\n    state()\n], TextFieldBase.prototype, \"outlineWidth\", void 0);\n__decorate([\n    state()\n], TextFieldBase.prototype, \"isUiValid\", void 0);\n__decorate([\n    state()\n], TextFieldBase.prototype, \"focused\", void 0);\n__decorate([\n    eventOptions({ passive: true })\n], TextFieldBase.prototype, \"handleInputChange\", null);\n//# sourceMappingURL=mwc-textfield-base.js.map"],"names":["MDCFoundation","adapter","strings","cssClasses","numbers","VALIDATION_ATTR_WHITELIST","ALWAYS_FLOAT_TYPES","POINTERDOWN_EVENTS","INTERACTION_EVENTS","MDCTextFieldFoundation","_super","__extends","foundationMap","_this","__assign","evt","attributesList","type","e_1","_a","e_2","_b","POINTERDOWN_EVENTS_1","__values","POINTERDOWN_EVENTS_1_1","evtType","e_1_1","INTERACTION_EVENTS_1","INTERACTION_EVENTS_1_1","e_2_1","e_3","e_4","POINTERDOWN_EVENTS_2","POINTERDOWN_EVENTS_2_1","e_3_1","INTERACTION_EVENTS_2","INTERACTION_EVENTS_2_1","e_4_1","nativeInput","attributeName","openNotch","labelWidth","touches","targetEvent","targetClientRect","normalizedX","isValid","value","shouldShake","shouldValidate","useNativeValidation","disabled","content","label","currentLength","maxLength","INVALID","helperTextValidation","helperTextVisible","helperTextId","isFocused","FOCUSED","isDisabled","DISABLED","isFloating","LABEL_FLOATING","MDCTextFieldFoundation$1","l","i","t","r","n","o","e","s","passiveEvents","createValidityObj","customValidity","objectifiedCustomValidity","propName","TextFieldBase","FormElement","focusEvt","blurEvt","selectionStart","selectionEnd","selectionDirection","changedProperties","formData","shouldRenderCharCounter","shouldRenderHelperText","classes","html","classMap","floatingLabel","icon","isTrailingIcon","isSuffix","minOrUndef","maxOrUndef","autocapitalizeOrUndef","showValidationMessage","ariaLabelledbyOrUndef","ariaControlsOrUndef","ariaDescribedbyOrUndef","ifDefined","live","lineRipple","ariaHiddenOrUndef","helperText","length","invalidEvent","nativeValidity","validity","message","handler","getAttributesList","mutationsList","mutation","observer","config","addHasRemoveClass","shouldFloat","isRequired","result","labelElement","__decorate","query","property","_newVal","oldVal","state","eventOptions"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}