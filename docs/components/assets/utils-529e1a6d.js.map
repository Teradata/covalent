{"version":3,"file":"utils-529e1a6d.js","sources":["../../../../node_modules/@material/mwc-base/utils.js"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n/**\n * Determines whether a node is an element.\n *\n * @param node Node to check\n */\nexport const isNodeElement = (node) => {\n    return node.nodeType === Node.ELEMENT_NODE;\n};\nexport function addHasRemoveClass(element) {\n    return {\n        addClass: (className) => {\n            element.classList.add(className);\n        },\n        removeClass: (className) => {\n            element.classList.remove(className);\n        },\n        hasClass: (className) => element.classList.contains(className),\n    };\n}\nlet supportsPassive = false;\nconst fn = () => { };\nconst optionsBlock = {\n    get passive() {\n        supportsPassive = true;\n        return false;\n    }\n};\ndocument.addEventListener('x', fn, optionsBlock);\ndocument.removeEventListener('x', fn);\n/**\n * Do event listeners suport the `passive` option?\n */\nexport const supportsPassiveEventListener = supportsPassive;\nexport const deepActiveElementPath = (doc = window.document) => {\n    let activeElement = doc.activeElement;\n    const path = [];\n    if (!activeElement) {\n        return path;\n    }\n    while (activeElement) {\n        path.push(activeElement);\n        if (activeElement.shadowRoot) {\n            activeElement = activeElement.shadowRoot.activeElement;\n        }\n        else {\n            break;\n        }\n    }\n    return path;\n};\nexport const doesElementContainFocus = (element) => {\n    const activePath = deepActiveElementPath();\n    if (!activePath.length) {\n        return false;\n    }\n    const deepActiveElement = activePath[activePath.length - 1];\n    const focusEv = new Event('check-if-focused', { bubbles: true, composed: true });\n    let composedPath = [];\n    const listener = (ev) => {\n        composedPath = ev.composedPath();\n    };\n    document.body.addEventListener('check-if-focused', listener);\n    deepActiveElement.dispatchEvent(focusEv);\n    document.body.removeEventListener('check-if-focused', listener);\n    return composedPath.indexOf(element) !== -1;\n};\n//# sourceMappingURL=utils.js.map"],"names":["isNodeElement","node","addHasRemoveClass","element","className","supportsPassive","fn","optionsBlock","supportsPassiveEventListener","deepActiveElementPath","doc","activeElement","path","doesElementContainFocus","activePath","deepActiveElement","focusEv","composedPath","listener","ev"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA,GAYY,MAACA,EAAiBC,GACnBA,EAAK,WAAa,KAAK,aAE3B,SAASC,EAAkBC,EAAS,CACvC,MAAO,CACH,SAAWC,GAAc,CACrBD,EAAQ,UAAU,IAAIC,CAAS,CAClC,EACD,YAAcA,GAAc,CACxBD,EAAQ,UAAU,OAAOC,CAAS,CACrC,EACD,SAAWA,GAAcD,EAAQ,UAAU,SAASC,CAAS,CACrE,CACA,CACA,IAAIC,EAAkB,GACtB,MAAMC,EAAK,IAAM,CAAA,EACXC,EAAe,CACjB,IAAI,SAAU,CACV,OAAAF,EAAkB,GACX,EACV,CACL,EACA,SAAS,iBAAiB,IAAKC,EAAIC,CAAY,EAC/C,SAAS,oBAAoB,IAAKD,CAAE,EAIxB,MAACE,EAA+BH,EAC/BI,EAAwB,CAACC,EAAM,OAAO,WAAa,CAC5D,IAAIC,EAAgBD,EAAI,cACxB,MAAME,EAAO,CAAA,EACb,GAAI,CAACD,EACD,OAAOC,EAEX,KAAOD,IACHC,EAAK,KAAKD,CAAa,EACnBA,EAAc,aACdA,EAAgBA,EAAc,WAAW,cAMjD,OAAOC,CACX,EACaC,EAA2BV,GAAY,CAChD,MAAMW,EAAaL,IACnB,GAAI,CAACK,EAAW,OACZ,MAAO,GAEX,MAAMC,EAAoBD,EAAWA,EAAW,OAAS,CAAC,EACpDE,EAAU,IAAI,MAAM,mBAAoB,CAAE,QAAS,GAAM,SAAU,EAAI,CAAE,EAC/E,IAAIC,EAAe,CAAA,EACnB,MAAMC,EAAYC,GAAO,CACrBF,EAAeE,EAAG,cAC1B,EACI,gBAAS,KAAK,iBAAiB,mBAAoBD,CAAQ,EAC3DH,EAAkB,cAAcC,CAAO,EACvC,SAAS,KAAK,oBAAoB,mBAAoBE,CAAQ,EACvDD,EAAa,QAAQd,CAAO,IAAM,EAC7C","x_google_ignoreList":[0]}