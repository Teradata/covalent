{"version":3,"file":"mwc-radio-base-f0d74a1d.js","sources":["../../../../node_modules/@material/mwc-radio/single-selection-controller.js","../../../../node_modules/@material/mwc-radio/node_modules/@material/base/foundation.js","../../../../node_modules/@material/mwc-radio/node_modules/@material/radio/constants.js","../../../../node_modules/@material/mwc-radio/node_modules/@material/radio/foundation.js","../../../../node_modules/@material/mwc-radio/mwc-radio-base.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n/**\n * Unique symbol for marking roots\n */\nconst selectionController = Symbol('selection controller');\n/**\n * Set of checkable elements with added metadata\n */\nexport class SingleSelectionSet {\n    constructor() {\n        this.selected = null;\n        this.ordered = null;\n        this.set = new Set();\n    }\n}\n/**\n * Controller that provides behavior similar to a native `<input type=\"radio\">`\n * group.\n *\n * Behaviors:\n *\n * - Selection via key navigation (currently LTR is supported)\n * - Deselection of other grouped, checkable controls upon selection\n * - Grouping of checkable elements by name\n *   - Defaults grouping scope to host shadow root\n *   - Document-wide scoping enabled\n * - Land focus only on checked element. Focuses leading element when none\n *   checked.\n *\n * Intended Usage:\n *\n * ```ts\n * class MyElement extends HTMLElement {\n *   private selectionController: SingleSelectionController | null = null;\n *   name = \"\";\n *   global = false;\n *\n *   private _checked = false;\n *   set checked(checked: boolean) {\n *     const oldVal = this._checked;\n *     if (checked === oldVal) return;\n *\n *     this._checked = checked;\n *\n *     if (this.selectionController) {\n *       this.selectionController.update(this)\n *     }\n *   }\n *\n *   get checked() {\n *     return this._checked;\n *   }\n *\n *   connectedCallback() {\n *     this.selectionController = SelectionController.getController(this);\n *     this.selectionController.register(this);\n *     this.selectionController.update(this);\n *   }\n *\n *   disconnectedCallback() {\n *     this.selectionController!.unregister(this);\n *     this.selectionController = null;\n *   }\n * }\n * ```\n */\nexport class SingleSelectionController {\n    constructor(element) {\n        this.sets = {};\n        this.focusedSet = null;\n        this.mouseIsDown = false;\n        this.updating = false;\n        element.addEventListener('keydown', (e) => {\n            this.keyDownHandler(e);\n        });\n        element.addEventListener('mousedown', () => {\n            this.mousedownHandler();\n        });\n        element.addEventListener('mouseup', () => {\n            this.mouseupHandler();\n        });\n    }\n    /**\n     * Get a controller for the given element. If no controller exists, one will\n     * be created. Defaults to getting the controller scoped to the element's root\n     * node shadow root unless `element.global` is true. Then, it will get a\n     * `window.document`-scoped controller.\n     *\n     * @param element Element from which to get / create a SelectionController. If\n     *     `element.global` is true, it gets a selection controller scoped to\n     *     `window.document`.\n     */\n    static getController(element) {\n        const useGlobal = !('global' in element) || ('global' in element && element.global);\n        const root = useGlobal ? document :\n            element.getRootNode();\n        let controller = root[selectionController];\n        if (controller === undefined) {\n            controller = new SingleSelectionController(root);\n            root[selectionController] = controller;\n        }\n        return controller;\n    }\n    keyDownHandler(e) {\n        const element = e.target;\n        if (!('checked' in element)) {\n            return;\n        }\n        if (!this.has(element)) {\n            return;\n        }\n        if (e.key == 'ArrowRight' || e.key == 'ArrowDown') {\n            this.selectNext(element);\n        }\n        else if (e.key == 'ArrowLeft' || e.key == 'ArrowUp') {\n            this.selectPrevious(element);\n        }\n    }\n    mousedownHandler() {\n        this.mouseIsDown = true;\n    }\n    mouseupHandler() {\n        this.mouseIsDown = false;\n    }\n    /**\n     * Whether or not the controller controls  the given element.\n     *\n     * @param element element to check\n     */\n    has(element) {\n        const set = this.getSet(element.name);\n        return set.set.has(element);\n    }\n    /**\n     * Selects and returns the controlled element previous to the given element in\n     * document position order. See\n     * [Node.compareDocumentPosition](https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition).\n     *\n     * @param element element relative from which preceding element is fetched\n     */\n    selectPrevious(element) {\n        const order = this.getOrdered(element);\n        const i = order.indexOf(element);\n        const previous = order[i - 1] || order[order.length - 1];\n        this.select(previous);\n        return previous;\n    }\n    /**\n     * Selects and returns the controlled element next to the given element in\n     * document position order. See\n     * [Node.compareDocumentPosition](https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition).\n     *\n     * @param element element relative from which following element is fetched\n     */\n    selectNext(element) {\n        const order = this.getOrdered(element);\n        const i = order.indexOf(element);\n        const next = order[i + 1] || order[0];\n        this.select(next);\n        return next;\n    }\n    select(element) {\n        element.click();\n    }\n    /**\n     * Focuses the selected element in the given element's selection set. User's\n     * mouse selection will override this focus.\n     *\n     * @param element Element from which selection set is derived and subsequently\n     *     focused.\n     * @deprecated update() method now handles focus management by setting\n     *     appropriate tabindex to form element.\n     */\n    focus(element) {\n        // Only manage focus state when using keyboard\n        if (this.mouseIsDown) {\n            return;\n        }\n        const set = this.getSet(element.name);\n        const currentFocusedSet = this.focusedSet;\n        this.focusedSet = set;\n        if (currentFocusedSet != set && set.selected && set.selected != element) {\n            set.selected.focus();\n        }\n    }\n    /**\n     * @return Returns true if atleast one radio is selected in the radio group.\n     */\n    isAnySelected(element) {\n        const set = this.getSet(element.name);\n        for (const e of set.set) {\n            if (e.checked) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Returns the elements in the given element's selection set in document\n     * position order.\n     * [Node.compareDocumentPosition](https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition).\n     *\n     * @param element Element from which selection set is derived and subsequently\n     *     ordered.\n     */\n    getOrdered(element) {\n        const set = this.getSet(element.name);\n        if (!set.ordered) {\n            set.ordered = Array.from(set.set);\n            set.ordered.sort((a, b) => a.compareDocumentPosition(b) == Node.DOCUMENT_POSITION_PRECEDING ?\n                1 :\n                0);\n        }\n        return set.ordered;\n    }\n    /**\n     * Gets the selection set of the given name and creates one if it does not yet\n     * exist.\n     *\n     * @param name Name of set\n     */\n    getSet(name) {\n        if (!this.sets[name]) {\n            this.sets[name] = new SingleSelectionSet();\n        }\n        return this.sets[name];\n    }\n    /**\n     * Register the element in the selection controller.\n     *\n     * @param element Element to register. Registers in set of `element.name`.\n     */\n    register(element) {\n        // TODO(b/168546148): Remove accessing 'name' via getAttribute() when new\n        // base class is created without single selection controller. Component\n        // maybe booted up after it is connected to DOM in which case properties\n        // (including `name`) are not updated yet.\n        const name = element.name || element.getAttribute('name') || '';\n        const set = this.getSet(name);\n        set.set.add(element);\n        set.ordered = null;\n    }\n    /**\n     * Unregister the element from selection controller.\n     *\n     * @param element Element to register. Registers in set of `element.name`.\n     */\n    unregister(element) {\n        const set = this.getSet(element.name);\n        set.set.delete(element);\n        set.ordered = null;\n        if (set.selected == element) {\n            set.selected = null;\n        }\n    }\n    /**\n     * Unselects other elements in element's set if element is checked. Noop\n     * otherwise.\n     *\n     * @param element Element from which to calculate selection controller update.\n     */\n    update(element) {\n        if (this.updating) {\n            return;\n        }\n        this.updating = true;\n        const set = this.getSet(element.name);\n        if (element.checked) {\n            for (const e of set.set) {\n                if (e == element) {\n                    continue;\n                }\n                e.checked = false;\n            }\n            set.selected = element;\n        }\n        // When tabbing through land focus on the checked radio in the group.\n        if (this.isAnySelected(element)) {\n            for (const e of set.set) {\n                if (e.formElementTabIndex === undefined) {\n                    break;\n                }\n                e.formElementTabIndex = e.checked ? 0 : -1;\n            }\n        }\n        this.updating = false;\n    }\n}\n//# sourceMappingURL=single-selection-controller.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar MDCFoundation = /** @class */ (function () {\n    function MDCFoundation(adapter) {\n        if (adapter === void 0) { adapter = {}; }\n        this.adapter = adapter;\n    }\n    Object.defineProperty(MDCFoundation, \"cssClasses\", {\n        get: function () {\n            // Classes extending MDCFoundation should implement this method to return an object which exports every\n            // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n            return {};\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"strings\", {\n        get: function () {\n            // Classes extending MDCFoundation should implement this method to return an object which exports all\n            // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n            return {};\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"numbers\", {\n        get: function () {\n            // Classes extending MDCFoundation should implement this method to return an object which exports all\n            // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n            return {};\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"defaultAdapter\", {\n        get: function () {\n            // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n            // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n            // validation.\n            return {};\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCFoundation.prototype.init = function () {\n        // Subclasses should override this method to perform initialization routines (registering events, etc.)\n    };\n    MDCFoundation.prototype.destroy = function () {\n        // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n    };\n    return MDCFoundation;\n}());\nexport { MDCFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar strings = {\n    NATIVE_CONTROL_SELECTOR: '.mdc-radio__native-control',\n};\nvar cssClasses = {\n    DISABLED: 'mdc-radio--disabled',\n    ROOT: 'mdc-radio',\n};\nexport { strings, cssClasses };\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, strings } from './constants';\nvar MDCRadioFoundation = /** @class */ (function (_super) {\n    __extends(MDCRadioFoundation, _super);\n    function MDCRadioFoundation(adapter) {\n        return _super.call(this, __assign(__assign({}, MDCRadioFoundation.defaultAdapter), adapter)) || this;\n    }\n    Object.defineProperty(MDCRadioFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCRadioFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCRadioFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                addClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                setNativeControlDisabled: function () { return undefined; },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCRadioFoundation.prototype.setDisabled = function (disabled) {\n        var DISABLED = MDCRadioFoundation.cssClasses.DISABLED;\n        this.adapter.setNativeControlDisabled(disabled);\n        if (disabled) {\n            this.adapter.addClass(DISABLED);\n        }\n        else {\n            this.adapter.removeClass(DISABLED);\n        }\n    };\n    return MDCRadioFoundation;\n}(MDCFoundation));\nexport { MDCRadioFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCRadioFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport '@material/mwc-ripple/mwc-ripple.js';\nimport { ariaProperty } from '@material/mwc-base/aria-property.js';\nimport { addHasRemoveClass, FormElement } from '@material/mwc-base/form-element.js';\nimport { observer } from '@material/mwc-base/observer.js';\nimport { SingleSelectionController } from '@material/mwc-radio/single-selection-controller.js';\nimport { RippleHandlers } from '@material/mwc-ripple/ripple-handlers.js';\nimport MDCRadioFoundation from '@material/radio/foundation.js';\nimport { html } from 'lit';\nimport { eventOptions, property, query, queryAsync, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\n/**\n * @fires checked\n * @soyCompatible\n */\nexport class RadioBase extends FormElement {\n    constructor() {\n        super(...arguments);\n        this._checked = false;\n        this.useStateLayerCustomProperties = false;\n        this.global = false;\n        this.disabled = false;\n        this.value = 'on';\n        this.name = '';\n        /**\n         * Touch target extends beyond visual boundary of a component by default.\n         * Set to `true` to remove touch target added to the component.\n         * @see https://material.io/design/usability/accessibility.html\n         */\n        this.reducedTouchTarget = false;\n        this.mdcFoundationClass = MDCRadioFoundation;\n        /**\n         * input's tabindex is updated based on checked status.\n         * Tab navigation will be removed from unchecked radios.\n         */\n        this.formElementTabIndex = 0;\n        this.focused = false;\n        this.shouldRenderRipple = false;\n        this.rippleElement = null;\n        this.rippleHandlers = new RippleHandlers(() => {\n            this.shouldRenderRipple = true;\n            this.ripple.then((v) => {\n                this.rippleElement = v;\n            });\n            return this.ripple;\n        });\n    }\n    get checked() {\n        return this._checked;\n    }\n    /**\n     * We define our own getter/setter for `checked` because we need to track\n     * changes to it synchronously.\n     *\n     * The order in which the `checked` property is set across radio buttons\n     * within the same group is very important. However, we can't rely on\n     * UpdatingElement's `updated` callback to observe these changes (which is\n     * also what the `@observer` decorator uses), because it batches changes to\n     * all properties.\n     *\n     * Consider:\n     *\n     *   radio1.disabled = true;\n     *   radio2.checked = true;\n     *   radio1.checked = true;\n     *\n     * In this case we'd first see all changes for radio1, and then for radio2,\n     * and we couldn't tell that radio1 was the most recently checked.\n     */\n    set checked(isChecked) {\n        var _a, _b;\n        const oldValue = this._checked;\n        if (isChecked === oldValue) {\n            return;\n        }\n        this._checked = isChecked;\n        if (this.formElement) {\n            this.formElement.checked = isChecked;\n        }\n        (_a = this._selectionController) === null || _a === void 0 ? void 0 : _a.update(this);\n        if (isChecked === false) {\n            // Remove focus ring when unchecked on other radio programmatically.\n            // Blur on input since this determines the focus style.\n            (_b = this.formElement) === null || _b === void 0 ? void 0 : _b.blur();\n        }\n        this.requestUpdate('checked', oldValue);\n        // useful when unchecks self and wrapping element needs to synchronize\n        // TODO(b/168543810): Remove triggering event on programmatic API call.\n        this.dispatchEvent(new Event('checked', { bubbles: true, composed: true }));\n    }\n    _handleUpdatedValue(newValue) {\n        // the observer function can't access protected fields (according to\n        // closure compiler) because it's not a method on the class, so we need this\n        // wrapper.\n        this.formElement.value = newValue;\n    }\n    /** @soyTemplate */\n    renderRipple() {\n        return this.shouldRenderRipple ? html `<mwc-ripple unbounded accent\n        .internalUseStateLayerCustomProperties=\"${this.useStateLayerCustomProperties}\"\n        .disabled=\"${this.disabled}\"></mwc-ripple>` :\n            '';\n    }\n    get isRippleActive() {\n        var _a;\n        return ((_a = this.rippleElement) === null || _a === void 0 ? void 0 : _a.isActive) || false;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note that we must defer creating the selection controller until the\n        // element has connected, because selection controllers are keyed by the\n        // radio's shadow root. For example, if we're stamping in a lit map\n        // or repeat, then we'll be constructed before we're added to a root node.\n        //\n        // Also note if we aren't using native shadow DOM, we still need a\n        // SelectionController, because we should update checked status of other\n        // radios in the group when selection changes. It also simplifies\n        // implementation and testing to use one in all cases.\n        //\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        this._selectionController = SingleSelectionController.getController(this);\n        this._selectionController.register(this);\n        // Radios maybe checked before connected, update selection as soon it is\n        // connected to DOM. Last checked radio button in the DOM will be selected.\n        //\n        // NOTE: If we update selection only after firstUpdate() we might mistakenly\n        // update checked status before other radios are rendered.\n        this._selectionController.update(this);\n    }\n    disconnectedCallback() {\n        // The controller is initialized in connectedCallback, so if we are in\n        // disconnectedCallback then it must be initialized.\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this._selectionController.unregister(this);\n        this._selectionController = undefined;\n    }\n    focus() {\n        this.formElement.focus();\n    }\n    createAdapter() {\n        return Object.assign(Object.assign({}, addHasRemoveClass(this.mdcRoot)), { setNativeControlDisabled: (disabled) => {\n                this.formElement.disabled = disabled;\n            } });\n    }\n    handleFocus() {\n        this.focused = true;\n        this.handleRippleFocus();\n    }\n    handleClick() {\n        // Firefox has weird behavior with radios if they are not focused\n        this.formElement.focus();\n    }\n    handleBlur() {\n        this.focused = false;\n        this.formElement.blur();\n        this.rippleHandlers.endFocus();\n    }\n    setFormData(formData) {\n        if (this.name && this.checked) {\n            formData.append(this.name, this.value);\n        }\n    }\n    /**\n     * @soyTemplate\n     * @soyAttributes radioAttributes: input\n     * @soyClasses radioClasses: .mdc-radio\n     */\n    render() {\n        /** @classMap */\n        const classes = {\n            'mdc-radio--touch': !this.reducedTouchTarget,\n            'mdc-ripple-upgraded--background-focused': this.focused,\n            'mdc-radio--disabled': this.disabled,\n        };\n        return html `\n      <div class=\"mdc-radio ${classMap(classes)}\">\n        <input\n          tabindex=\"${this.formElementTabIndex}\"\n          class=\"mdc-radio__native-control\"\n          type=\"radio\"\n          name=\"${this.name}\"\n          aria-label=\"${ifDefined(this.ariaLabel)}\"\n          aria-labelledby=\"${ifDefined(this.ariaLabelledBy)}\"\n          .checked=\"${this.checked}\"\n          .value=\"${this.value}\"\n          ?disabled=\"${this.disabled}\"\n          @change=\"${this.changeHandler}\"\n          @focus=\"${this.handleFocus}\"\n          @click=\"${this.handleClick}\"\n          @blur=\"${this.handleBlur}\"\n          @mousedown=\"${this.handleRippleMouseDown}\"\n          @mouseenter=\"${this.handleRippleMouseEnter}\"\n          @mouseleave=\"${this.handleRippleMouseLeave}\"\n          @touchstart=\"${this.handleRippleTouchStart}\"\n          @touchend=\"${this.handleRippleDeactivate}\"\n          @touchcancel=\"${this.handleRippleDeactivate}\">\n        <div class=\"mdc-radio__background\">\n          <div class=\"mdc-radio__outer-circle\"></div>\n          <div class=\"mdc-radio__inner-circle\"></div>\n        </div>\n        ${this.renderRipple()}\n      </div>`;\n    }\n    handleRippleMouseDown(event) {\n        const onUp = () => {\n            window.removeEventListener('mouseup', onUp);\n            this.handleRippleDeactivate();\n        };\n        window.addEventListener('mouseup', onUp);\n        this.rippleHandlers.startPress(event);\n    }\n    handleRippleTouchStart(event) {\n        this.rippleHandlers.startPress(event);\n    }\n    handleRippleDeactivate() {\n        this.rippleHandlers.endPress();\n    }\n    handleRippleMouseEnter() {\n        this.rippleHandlers.startHover();\n    }\n    handleRippleMouseLeave() {\n        this.rippleHandlers.endHover();\n    }\n    handleRippleFocus() {\n        this.rippleHandlers.startFocus();\n    }\n    changeHandler() {\n        this.checked = this.formElement.checked;\n    }\n}\n__decorate([\n    query('.mdc-radio')\n], RadioBase.prototype, \"mdcRoot\", void 0);\n__decorate([\n    query('input')\n], RadioBase.prototype, \"formElement\", void 0);\n__decorate([\n    state()\n], RadioBase.prototype, \"useStateLayerCustomProperties\", void 0);\n__decorate([\n    property({ type: Boolean })\n], RadioBase.prototype, \"global\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], RadioBase.prototype, \"checked\", null);\n__decorate([\n    property({ type: Boolean }),\n    observer(function (disabled) {\n        this.mdcFoundation.setDisabled(disabled);\n    })\n], RadioBase.prototype, \"disabled\", void 0);\n__decorate([\n    property({ type: String }),\n    observer(function (value) {\n        this._handleUpdatedValue(value);\n    })\n], RadioBase.prototype, \"value\", void 0);\n__decorate([\n    property({ type: String })\n], RadioBase.prototype, \"name\", void 0);\n__decorate([\n    property({ type: Boolean })\n], RadioBase.prototype, \"reducedTouchTarget\", void 0);\n__decorate([\n    property({ type: Number })\n], RadioBase.prototype, \"formElementTabIndex\", void 0);\n__decorate([\n    state()\n], RadioBase.prototype, \"focused\", void 0);\n__decorate([\n    state()\n], RadioBase.prototype, \"shouldRenderRipple\", void 0);\n__decorate([\n    queryAsync('mwc-ripple')\n], RadioBase.prototype, \"ripple\", void 0);\n__decorate([\n    ariaProperty,\n    property({ attribute: 'aria-label' })\n], RadioBase.prototype, \"ariaLabel\", void 0);\n__decorate([\n    ariaProperty,\n    property({ attribute: 'aria-labelledby' })\n], RadioBase.prototype, \"ariaLabelledBy\", void 0);\n__decorate([\n    eventOptions({ passive: true })\n], RadioBase.prototype, \"handleRippleTouchStart\", null);\n//# sourceMappingURL=mwc-radio-base.js.map"],"names":["selectionController","SingleSelectionSet","SingleSelectionController","element","e","root","controller","order","i","previous","next","set","currentFocusedSet","a","b","name","MDCFoundation","adapter","strings","cssClasses","MDCRadioFoundation","_super","__extends","__assign","disabled","DISABLED","MDCRadioFoundation$1","RadioBase","FormElement","RippleHandlers","v","isChecked","_a","_b","oldValue","newValue","html","addHasRemoveClass","formData","classes","classMap","ifDefined","event","onUp","__decorate","query","state","property","observer","value","queryAsync","ariaProperty","eventOptions"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}