{"version":3,"file":"tree-list.stories-39b59a01.js","sources":["../../../../libs/components/src/tree-list/tree-list.ts","../../../../libs/components/src/tree-list/tree-list-item.ts"],"sourcesContent":["import { css, html, LitElement, unsafeCSS } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport styles from './tree-list.scss?inline';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'cv-tree-list': CovalentTreeList;\n  }\n}\n// Wraps cv-tree-list-item components\n@customElement('cv-tree-list')\nexport class CovalentTreeList extends LitElement {\n  static override styles = [\n    css`\n      ${unsafeCSS(styles)}\n    `,\n  ];\n  override render() {\n    return html`\n      <div class=\"container\">\n        <div class=\"content\">\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n}\n// Create event listener for cv-tree-list-item's select event.\ndocument.addEventListener('select', (e: Event) => {\n  handleSelect(e);\n});\nconst handleSelect = (e: Event): void => {\n  // All cv-tree-list-item components.\n  const items: any[] = Array.from(\n    document?.querySelectorAll('cv-tree-list-item')\n  );\n\n  // Currently selected item.\n  const target: HTMLElement = e.target as HTMLElement;\n  const current = target.shadowRoot?.querySelector('div.itemContent');\n\n  // Find previously selected element and remove the styling.\n  items.forEach((item) => {\n    item\n      .shadowRoot?.querySelector('div.itemContent')\n      ?.classList.remove('selected');\n  });\n\n  // Add the selected styling to the currently selected item.\n  current?.classList.add('selected');\n};\n\nexport default CovalentTreeList;","import { css, html, LitElement, unsafeCSS } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport styles from './tree-list-item.scss?inline';\n\nimport '../icon/icon';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'cv-tree-list-item': CovalentTreeListItem;\n  }\n}\n\n@customElement('cv-tree-list-item')\nexport class CovalentTreeListItem extends LitElement {\n  static override styles = [\n    css`\n      ${unsafeCSS(styles)}\n    `,\n  ];\n  // Check if a list item is open.\n  @property({ type: Boolean }) isOpen = false;\n  // Optional icon for each list item.\n  @property({ type: String }) icon = '';\n  // Indicates which nest level a list item is at.\n  @property({ type: Number }) indentLevel = 0;\n  // How much left padding (px) to add for nested elements.\n  @property({ type: Number }) indentMultiple = 16;\n  override render() {\n    // Class map for showing/hiding an item's content.\n    const classes = {\n      hidden: !this.isOpen,\n      visible: this.isOpen,\n    };\n    // Class map for animating the arrows.\n    const animation = {\n      open: this.isOpen,\n      close: !this.isOpen,\n    };\n    const arrowIcon = 'arrow_right';\n    const icon = html`<cv-icon>${this.icon}</cv-icon>`;\n    const arrow = html`<cv-icon class=\"${classMap(animation)} arrowIcon\"\n      >${arrowIcon}</cv-icon\n    >`;\n\n    // The nest slot should only take cv-tree-list-item components. Otherwise use default value and display \"No results\".\n    return html`\n      <div\n        class=\"itemContent mdc-ripple-surface\"\n        @click=\"${this._handleClick}\"\n        style=\"--indent:${this.indentLevel * this.indentMultiple + 8}px\"\n      >\n        <div class=\"mainContent\">\n          ${arrow} ${icon}\n          <slot name=\"label\"></slot>\n        </div>\n        <slot name=\"extraContent\"></slot>\n      </div>\n      <slot name=\"nest\" class=\"${classMap(classes)}\">\n        <div\n          class=\"endOfNest\"\n          style=\"--indent:${this.indentLevel * this.indentMultiple +\n          this.indentMultiple}px\"\n        >\n          No results\n        </div>\n      </slot>\n    `;\n  }\n  private _handleClick() {\n    // Toggles the dropdown for a list item.\n    this.isOpen = !this.isOpen;\n\n    // Create and emit the select event; the tree-list component is listening for this.\n    const event = new CustomEvent('select', {\n      detail: {\n        message: `Emitting an event from ${this}`,\n      },\n      // bubbles and composed are required in order to allow custom event to pass through shadow DOM boundary to cv-tree-list.\n      bubbles: true,\n      composed: true,\n    });\n    this.dispatchEvent(event);\n  }\n}\n\nexport default CovalentTreeListItem;\n"],"names":["CovalentTreeList","LitElement","html","css","unsafeCSS","styles","__decorateClass","customElement","handleSelect","items","current","_a","item","_b","CovalentTreeListItem","classes","animation","arrowIcon","icon","arrow","classMap","event","property"],"mappings":";kMAWa,IAAAA,EAAN,cAA+BC,CAAW,CAMtC,QAAS,CACT,OAAAC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,KAOT,CACF,EAfaF,EACK,OAAS,CACvBG;AAAAA,QACIC,EAAUC,CAAM,CAAC;AAAA,KAEvB,EALWL,EAANM,EAAA,CADNC,EAAc,cAAc,CAAA,EAChBP,CAAA,EAiBb,SAAS,iBAAiB,SAAW,GAAa,CAChDQ,EAAa,CAAC,CAChB,CAAC,EACD,MAAMA,EAAgB,GAAmB,OAEvC,MAAMC,EAAe,MAAM,KACzB,+BAAU,iBAAiB,oBAAmB,EAK1CC,GAAUC,EADY,EAAE,OACP,aAAP,YAAAA,EAAmB,cAAc,mBAG3CF,EAAA,QAASG,GAAS,UACtBC,GAAAF,EAAAC,EACG,aADH,YAAAD,EACe,cAAc,qBAD7B,MAAAE,EAEI,UAAU,OAAO,WAAU,CAChC,EAGQH,GAAA,MAAAA,EAAA,UAAU,IAAI,WACzB;kMCpCa,IAAAI,EAAN,cAAmCb,CAAW,CAA9C,aAAA,CAAA,MAAA,GAAA,SAAA,EAOiC,KAAA,OAAA,GAEH,KAAA,KAAA,GAEO,KAAA,YAAA,EAEG,KAAA,eAAA,EAAA,CACpC,QAAS,CAEhB,MAAMc,EAAU,CACd,OAAQ,CAAC,KAAK,OACd,QAAS,KAAK,MAAA,EAGVC,EAAY,CAChB,KAAM,KAAK,OACX,MAAO,CAAC,KAAK,MAAA,EAETC,EAAY,cACZC,EAAOhB,aAAgB,KAAK,IAAI,aAChCiB,EAAQjB,oBAAuBkB,EAASJ,CAAS,CAAC;AAAA,SACnDC,CAAS;AAAA,OAIP,OAAAf;AAAAA;AAAAA;AAAAA,kBAGO,KAAK,YAAY;AAAA,0BACT,KAAK,YAAc,KAAK,eAAiB,CAAC;AAAA;AAAA;AAAA,YAGxDiB,CAAK,IAAID,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,iCAKQE,EAASL,CAAO,CAAC;AAAA;AAAA;AAAA,4BAGtB,KAAK,YAAc,KAAK,eAC1C,KAAK,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,KAM3B,CACQ,cAAe,CAEhB,KAAA,OAAS,CAAC,KAAK,OAGd,MAAAM,EAAQ,IAAI,YAAY,SAAU,CACtC,OAAQ,CACN,QAAS,0BAA0B,IAAI,EACzC,EAEA,QAAS,GACT,SAAU,EAAA,CACX,EACD,KAAK,cAAcA,CAAK,CAC1B,CACF,EAtEaP,EACK,OAAS,CACvBX;AAAAA,QACIC,EAAUC,CAAM,CAAC;AAAA,KAEvB,EAE6BC,EAAA,CAA5BgB,EAAS,CAAE,KAAM,QAAS,CAAA,EAPhBR,EAOkB,UAAA,SAAA,CAAA,EAEDR,EAAA,CAA3BgB,EAAS,CAAE,KAAM,OAAQ,CAAA,EATfR,EASiB,UAAA,OAAA,CAAA,EAEAR,EAAA,CAA3BgB,EAAS,CAAE,KAAM,OAAQ,CAAA,EAXfR,EAWiB,UAAA,cAAA,CAAA,EAEAR,EAAA,CAA3BgB,EAAS,CAAE,KAAM,OAAQ,CAAA,EAbfR,EAaiB,UAAA,iBAAA,CAAA,EAbjBA,EAANR,EAAA,CADNC,EAAc,mBAAmB,CAAA,EACrBO,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}