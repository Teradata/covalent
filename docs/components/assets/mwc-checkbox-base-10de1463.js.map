{"version":3,"file":"mwc-checkbox-base-10de1463.js","sources":["../../../../node_modules/@material/mwc-checkbox/mwc-checkbox-base.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\nimport '@material/mwc-ripple/mwc-ripple.js';\nimport { ariaProperty } from '@material/mwc-base/aria-property.js';\nimport { FormElement } from '@material/mwc-base/form-element.js';\nimport { RippleHandlers } from '@material/mwc-ripple/ripple-handlers.js';\nimport { html } from 'lit';\nimport { eventOptions, property, query, queryAsync, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\n/** @soyCompatible */\nexport class CheckboxBase extends FormElement {\n    constructor() {\n        super(...arguments);\n        this.checked = false;\n        this.indeterminate = false;\n        this.disabled = false;\n        this.name = '';\n        this.value = 'on';\n        /**\n         * Touch target extends beyond visual boundary of a component by default.\n         * Set to `true` to remove touch target added to the component.\n         * @see https://material.io/design/usability/accessibility.html\n         */\n        this.reducedTouchTarget = false;\n        this.animationClass = '';\n        this.shouldRenderRipple = false;\n        this.focused = false;\n        // MDC Foundation is unused\n        this.mdcFoundationClass = undefined;\n        this.mdcFoundation = undefined;\n        this.rippleElement = null;\n        this.rippleHandlers = new RippleHandlers(() => {\n            this.shouldRenderRipple = true;\n            this.ripple.then((v) => this.rippleElement = v);\n            return this.ripple;\n        });\n    }\n    createAdapter() {\n        return {};\n    }\n    update(changedProperties) {\n        const oldIndeterminate = changedProperties.get('indeterminate');\n        const oldChecked = changedProperties.get('checked');\n        const oldDisabled = changedProperties.get('disabled');\n        if (oldIndeterminate !== undefined || oldChecked !== undefined ||\n            oldDisabled !== undefined) {\n            const oldState = this.calculateAnimationStateName(!!oldChecked, !!oldIndeterminate, !!oldDisabled);\n            const newState = this.calculateAnimationStateName(this.checked, this.indeterminate, this.disabled);\n            this.animationClass = `${oldState}-${newState}`;\n        }\n        super.update(changedProperties);\n    }\n    calculateAnimationStateName(checked, indeterminate, disabled) {\n        if (disabled) {\n            return 'disabled';\n        }\n        else if (indeterminate) {\n            return 'indeterminate';\n        }\n        else if (checked) {\n            return 'checked';\n        }\n        else {\n            return 'unchecked';\n        }\n    }\n    // TODO(dfreedm): Make this use selected as a param after Polymer/internal#739\n    /** @soyTemplate */\n    renderRipple() {\n        return this.shouldRenderRipple ? this.renderRippleTemplate() : '';\n    }\n    /** @soyTemplate */\n    renderRippleTemplate() {\n        return html `<mwc-ripple\n        .disabled=\"${this.disabled}\"\n        unbounded></mwc-ripple>`;\n    }\n    /**\n     * @soyTemplate\n     * @soyAttributes checkboxAttributes: input\n     * @soyClasses checkboxClasses: .mdc-checkbox\n     */\n    render() {\n        const selected = this.indeterminate || this.checked;\n        /* eslint-disable eqeqeq */\n        // tslint:disable:triple-equals\n        /** @classMap */\n        const classes = {\n            'mdc-checkbox--disabled': this.disabled,\n            'mdc-checkbox--selected': selected,\n            'mdc-checkbox--touch': !this.reducedTouchTarget,\n            'mdc-ripple-upgraded--background-focused': this.focused,\n            // transition animiation classes\n            'mdc-checkbox--anim-checked-indeterminate': this.animationClass == 'checked-indeterminate',\n            'mdc-checkbox--anim-checked-unchecked': this.animationClass == 'checked-unchecked',\n            'mdc-checkbox--anim-indeterminate-checked': this.animationClass == 'indeterminate-checked',\n            'mdc-checkbox--anim-indeterminate-unchecked': this.animationClass == 'indeterminate-unchecked',\n            'mdc-checkbox--anim-unchecked-checked': this.animationClass == 'unchecked-checked',\n            'mdc-checkbox--anim-unchecked-indeterminate': this.animationClass == 'unchecked-indeterminate',\n        };\n        // tslint:enable:triple-equals\n        /* eslint-enable eqeqeq */\n        const ariaChecked = this.indeterminate ? 'mixed' : undefined;\n        return html `\n      <div class=\"mdc-checkbox mdc-checkbox--upgraded ${classMap(classes)}\">\n        <input type=\"checkbox\"\n              class=\"mdc-checkbox__native-control\"\n              name=\"${ifDefined(this.name)}\"\n              aria-checked=\"${ifDefined(ariaChecked)}\"\n              aria-label=\"${ifDefined(this.ariaLabel)}\"\n              aria-labelledby=\"${ifDefined(this.ariaLabelledBy)}\"\n              aria-describedby=\"${ifDefined(this.ariaDescribedBy)}\"\n              data-indeterminate=\"${this.indeterminate ? 'true' : 'false'}\"\n              ?disabled=\"${this.disabled}\"\n              .indeterminate=\"${this.indeterminate}\"\n              .checked=\"${this.checked}\"\n              .value=\"${this.value}\"\n              @change=\"${this.handleChange}\"\n              @focus=\"${this.handleFocus}\"\n              @blur=\"${this.handleBlur}\"\n              @mousedown=\"${this.handleRippleMouseDown}\"\n              @mouseenter=\"${this.handleRippleMouseEnter}\"\n              @mouseleave=\"${this.handleRippleMouseLeave}\"\n              @touchstart=\"${this.handleRippleTouchStart}\"\n              @touchend=\"${this.handleRippleDeactivate}\"\n              @touchcancel=\"${this.handleRippleDeactivate}\">\n        <div class=\"mdc-checkbox__background\"\n          @animationend=\"${this.resetAnimationClass}\">\n          <svg class=\"mdc-checkbox__checkmark\"\n              viewBox=\"0 0 24 24\">\n            <path class=\"mdc-checkbox__checkmark-path\"\n                  fill=\"none\"\n                  d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"></path>\n          </svg>\n          <div class=\"mdc-checkbox__mixedmark\"></div>\n        </div>\n        ${this.renderRipple()}\n      </div>`;\n    }\n    setFormData(formData) {\n        if (this.name && this.checked) {\n            formData.append(this.name, this.value);\n        }\n    }\n    handleFocus() {\n        this.focused = true;\n        this.handleRippleFocus();\n    }\n    handleBlur() {\n        this.focused = false;\n        this.handleRippleBlur();\n    }\n    handleRippleMouseDown(event) {\n        const onUp = () => {\n            window.removeEventListener('mouseup', onUp);\n            this.handleRippleDeactivate();\n        };\n        window.addEventListener('mouseup', onUp);\n        this.rippleHandlers.startPress(event);\n    }\n    handleRippleTouchStart(event) {\n        this.rippleHandlers.startPress(event);\n    }\n    handleRippleDeactivate() {\n        this.rippleHandlers.endPress();\n    }\n    handleRippleMouseEnter() {\n        this.rippleHandlers.startHover();\n    }\n    handleRippleMouseLeave() {\n        this.rippleHandlers.endHover();\n    }\n    handleRippleFocus() {\n        this.rippleHandlers.startFocus();\n    }\n    handleRippleBlur() {\n        this.rippleHandlers.endFocus();\n    }\n    handleChange() {\n        this.checked = this.formElement.checked;\n        this.indeterminate = this.formElement.indeterminate;\n    }\n    resetAnimationClass() {\n        this.animationClass = '';\n    }\n    get isRippleActive() {\n        var _a;\n        return ((_a = this.rippleElement) === null || _a === void 0 ? void 0 : _a.isActive) || false;\n    }\n}\n__decorate([\n    query('.mdc-checkbox')\n], CheckboxBase.prototype, \"mdcRoot\", void 0);\n__decorate([\n    query('input')\n], CheckboxBase.prototype, \"formElement\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], CheckboxBase.prototype, \"checked\", void 0);\n__decorate([\n    property({ type: Boolean })\n], CheckboxBase.prototype, \"indeterminate\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], CheckboxBase.prototype, \"disabled\", void 0);\n__decorate([\n    property({ type: String, reflect: true })\n], CheckboxBase.prototype, \"name\", void 0);\n__decorate([\n    property({ type: String })\n], CheckboxBase.prototype, \"value\", void 0);\n__decorate([\n    ariaProperty,\n    property({ type: String, attribute: 'aria-label' })\n], CheckboxBase.prototype, \"ariaLabel\", void 0);\n__decorate([\n    ariaProperty,\n    property({ type: String, attribute: 'aria-labelledby' })\n], CheckboxBase.prototype, \"ariaLabelledBy\", void 0);\n__decorate([\n    ariaProperty,\n    property({ type: String, attribute: 'aria-describedby' })\n], CheckboxBase.prototype, \"ariaDescribedBy\", void 0);\n__decorate([\n    property({ type: Boolean })\n], CheckboxBase.prototype, \"reducedTouchTarget\", void 0);\n__decorate([\n    state()\n], CheckboxBase.prototype, \"animationClass\", void 0);\n__decorate([\n    state()\n], CheckboxBase.prototype, \"shouldRenderRipple\", void 0);\n__decorate([\n    state()\n], CheckboxBase.prototype, \"focused\", void 0);\n__decorate([\n    queryAsync('mwc-ripple')\n], CheckboxBase.prototype, \"ripple\", void 0);\n__decorate([\n    eventOptions({ passive: true })\n], CheckboxBase.prototype, \"handleRippleTouchStart\", null);\n//# sourceMappingURL=mwc-checkbox-base.js.map"],"names":["CheckboxBase","FormElement","RippleHandlers","v","changedProperties","oldIndeterminate","oldChecked","oldDisabled","oldState","newState","checked","indeterminate","disabled","html","selected","classes","ariaChecked","classMap","ifDefined","formData","event","onUp","_a","__decorate","query","property","ariaProperty","state","queryAsync","eventOptions"],"mappings":"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","x_google_ignoreList":[0]}