{"version":3,"file":"OverlayScrollbars-1355f44c-26dd748d.js","sources":["../../../../node_modules/@storybook/components/dist/esm/OverlayScrollbars-1355f44c.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { c as commonjsGlobal, d as __rest } from './index-681e4b07.js';\nimport React__default, { useRef, useEffect } from 'react';\nimport '@storybook/theming';\nimport 'memoizerific';\nimport '@storybook/csf';\nimport 'qs';\nimport '@storybook/client-logger';\nvar OverlayScrollbars$1 = {\n  exports: {}\n};\n/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.0\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 02.08.2020\r\n */\n\n(function (module) {\n  (function (global, factory) {\n    module.exports = factory(global, global.document, undefined);\n  })(typeof window !== 'undefined' ? window : commonjsGlobal, function (window, document, undefined$1) {\n    var PLUGINNAME = 'OverlayScrollbars';\n    var TYPES = {\n      o: 'object',\n      f: 'function',\n      a: 'array',\n      s: 'string',\n      b: 'boolean',\n      n: 'number',\n      u: 'undefined',\n      z: 'null' //d : 'date',\n      //e : 'error',\n      //r : 'regexp',\n      //y : 'symbol'\n\n    };\n    var LEXICON = {\n      c: 'class',\n      s: 'style',\n      i: 'id',\n      l: 'length',\n      p: 'prototype',\n      ti: 'tabindex',\n      oH: 'offsetHeight',\n      cH: 'clientHeight',\n      sH: 'scrollHeight',\n      oW: 'offsetWidth',\n      cW: 'clientWidth',\n      sW: 'scrollWidth',\n      hOP: 'hasOwnProperty',\n      bCR: 'getBoundingClientRect'\n    };\n\n    var VENDORS = function () {\n      //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\n      var jsCache = {};\n      var cssCache = {};\n      var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\n      var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\n\n      function firstLetterToUpper(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n      }\n\n      return {\n        _cssPrefixes: cssPrefixes,\n        _jsPrefixes: jsPrefixes,\n        _cssProperty: function _cssProperty(name) {\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var uppercasedName = firstLetterToUpper(name);\n          var elmStyle = document.createElement('div')[LEXICON.s];\n          var resultPossibilities;\n          var i = 0;\n          var v;\n          var currVendorWithoutDashes;\n\n          for (; i < cssPrefixes.length; i++) {\n            currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\n            resultPossibilities = [name, //transition\n            cssPrefixes[i] + name, //-webkit-transition\n            currVendorWithoutDashes + uppercasedName, //webkitTransition\n            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\n            ];\n\n            for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\n              if (elmStyle[resultPossibilities[v]] !== undefined$1) {\n                result = resultPossibilities[v];\n                break;\n              }\n            }\n          }\n\n          cssCache[name] = result;\n          return result;\n        },\n        _cssPropertyValue: function _cssPropertyValue(property, values, suffix) {\n          var name = property + ' ' + values;\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var dummyStyle = document.createElement('div')[LEXICON.s];\n          var possbleValues = values.split(' ');\n          var preparedSuffix = suffix || '';\n          var i = 0;\n          var v = -1;\n          var prop;\n\n          for (; i < possbleValues[LEXICON.l]; i++) {\n            for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\n              prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\n              dummyStyle.cssText = property + ':' + prop + preparedSuffix;\n\n              if (dummyStyle[LEXICON.l]) {\n                result = prop;\n                break;\n              }\n            }\n          }\n\n          cssCache[name] = result;\n          return result;\n        },\n        _jsAPI: function _jsAPI(name, isInterface, fallback) {\n          var i = 0;\n          var result = jsCache[name];\n\n          if (!jsCache[LEXICON.hOP](name)) {\n            result = window[name];\n\n            for (; i < jsPrefixes[LEXICON.l]; i++) {\n              result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\n            }\n\n            jsCache[name] = result;\n          }\n\n          return result || fallback;\n        }\n      };\n    }();\n\n    var COMPATIBILITY = function () {\n      function windowSize(x) {\n        return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\n      }\n\n      function bind(func, thisObj) {\n        if (_typeof(func) != TYPES.f) {\n          throw \"Can't bind function!\"; // closest thing possible to the ECMAScript 5\n          // internal IsCallable function\n          //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n        }\n\n        var proto = LEXICON.p;\n        var aArgs = Array[proto].slice.call(arguments, 2);\n\n        var fNOP = function fNOP() {};\n\n        var fBound = function fBound() {\n          return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments)));\n        };\n\n        if (func[proto]) fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\n\n        fBound[proto] = new fNOP();\n        return fBound;\n      }\n\n      return {\n        /**\r\n         * Gets the current window width.\r\n         * @returns {Number|number} The current window width in pixel.\r\n         */\n        wW: bind(windowSize, 0, true),\n\n        /**\r\n         * Gets the current window height.\r\n         * @returns {Number|number} The current window height in pixel.\r\n         */\n        wH: bind(windowSize, 0),\n\n        /**\r\n         * Gets the MutationObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n         */\n        mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\n\n        /**\r\n         * Gets the ResizeObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n         */\n        rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\n\n        /**\r\n         * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n         */\n        rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) {\n          return window.setTimeout(func, 1000 / 60);\n        }),\n\n        /**\r\n         * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n         */\n        cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) {\n          return window.clearTimeout(id);\n        }),\n\n        /**\r\n         * Gets the current time.\r\n         * @returns {number} The current time.\r\n         */\n        now: function now() {\n          return Date.now && Date.now() || new Date().getTime();\n        },\n\n        /**\r\n         * Stops the propagation of the given event.\r\n         * @param event The event of which the propagation shall be stoped.\r\n         */\n        stpP: function stpP(event) {\n          if (event.stopPropagation) event.stopPropagation();else event.cancelBubble = true;\n        },\n\n        /**\r\n         * Prevents the default action of the given event.\r\n         * @param event The event of which the default action shall be prevented.\r\n         */\n        prvD: function prvD(event) {\n          if (event.preventDefault && event.cancelable) event.preventDefault();else event.returnValue = false;\n        },\n\n        /**\r\n         * Gets the pageX and pageY values of the given mouse event.\r\n         * @param event The mouse event of which the pageX and pageX shall be got.\r\n         * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n         */\n        page: function page(event) {\n          event = event.originalEvent || event;\n          var strPage = 'page';\n          var strClient = 'client';\n          var strX = 'X';\n          var strY = 'Y';\n          var target = event.target || event.srcElement || document;\n          var eventDoc = target.ownerDocument || document;\n          var doc = eventDoc.documentElement;\n          var body = eventDoc.body; //if touch event return return pageX/Y of it\n\n          if (event.touches !== undefined$1) {\n            var touch = event.touches[0];\n            return {\n              x: touch[strPage + strX],\n              y: touch[strPage + strY]\n            };\n          } // Calculate pageX/Y if not native supported\n\n\n          if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\n            return {\n              x: event[strClient + strX] + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0),\n              y: event[strClient + strY] + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)\n            };\n          }\n\n          return {\n            x: event[strPage + strX],\n            y: event[strPage + strY]\n          };\n        },\n\n        /**\r\n         * Gets the clicked mouse button of the given mouse event.\r\n         * @param event The mouse event of which the clicked button shal be got.\r\n         * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n         */\n        mBtn: function mBtn(event) {\n          var button = event.button;\n          if (!event.which && button !== undefined$1) return button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;else return event.which;\n        },\n\n        /**\r\n         * Checks whether a item is in the given array and returns its index.\r\n         * @param item The item of which the position in the array shall be determined.\r\n         * @param arr The array.\r\n         * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n         */\n        inA: function inA(item, arr) {\n          for (var i = 0; i < arr[LEXICON.l]; i++) {\n            //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\n            try {\n              if (arr[i] === item) return i;\n            } catch (e) {}\n          }\n\n          return -1;\n        },\n\n        /**\r\n         * Returns true if the given value is a array.\r\n         * @param arr The potential array.\r\n         * @returns {boolean} True if the given value is a array, false otherwise.\r\n         */\n        isA: function isA(arr) {\n          var def = Array.isArray;\n          return def ? def(arr) : this.type(arr) == TYPES.a;\n        },\n\n        /**\r\n         * Determine the internal JavaScript [[Class]] of the given object.\r\n         * @param obj The object of which the type shall be determined.\r\n         * @returns {string} The type of the given object.\r\n         */\n        type: function type(obj) {\n          if (obj === undefined$1) return obj + '';\n          if (obj === null) return obj + '';\n          return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\n        },\n        bind: bind\n        /**\r\n         * Gets the vendor-prefixed CSS property by the given name.\r\n         * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n         * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n         * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n         * @param propName The unprefixed CSS property name.\r\n         * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n          cssProp: function(propName) {\r\n            return VENDORS._cssProperty(propName);\r\n        }\r\n        */\n\n      };\n    }();\n\n    var MATH = Math;\n    var JQUERY = window.jQuery;\n\n    var EASING = function () {\n      var _easingsMath = {\n        p: MATH.PI,\n        c: MATH.cos,\n        s: MATH.sin,\n        w: MATH.pow,\n        t: MATH.sqrt,\n        n: MATH.asin,\n        a: MATH.abs,\n        o: 1.70158\n      };\n      /*\r\n       x : current percent (0 - 1),\r\n       t : current time (duration * percent),\r\n       b : start value (from),\r\n       c : end value (to),\r\n       d : duration\r\n         easingName : function(x, t, b, c, d) { return easedValue; }\r\n       */\n\n      return {\n        swing: function swing(x, t, b, c, d) {\n          return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\n        },\n        linear: function linear(x, t, b, c, d) {\n          return x;\n        },\n        easeInQuad: function easeInQuad(x, t, b, c, d) {\n          return c * (t /= d) * t + b;\n        },\n        easeOutQuad: function easeOutQuad(x, t, b, c, d) {\n          return -c * (t /= d) * (t - 2) + b;\n        },\n        easeInOutQuad: function easeInOutQuad(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t + b : -c / 2 * (--t * (t - 2) - 1) + b;\n        },\n        easeInCubic: function easeInCubic(x, t, b, c, d) {\n          return c * (t /= d) * t * t + b;\n        },\n        easeOutCubic: function easeOutCubic(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t + 1) + b;\n        },\n        easeInOutCubic: function easeInOutCubic(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\n        },\n        easeInQuart: function easeInQuart(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t + b;\n        },\n        easeOutQuart: function easeOutQuart(x, t, b, c, d) {\n          return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n        },\n        easeInOutQuart: function easeInOutQuart(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n        },\n        easeInQuint: function easeInQuint(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t * t + b;\n        },\n        easeOutQuint: function easeOutQuint(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n        },\n        easeInOutQuint: function easeInOutQuint(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n        },\n        easeInSine: function easeInSine(x, t, b, c, d) {\n          return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\n        },\n        easeOutSine: function easeOutSine(x, t, b, c, d) {\n          return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\n        },\n        easeInOutSine: function easeInOutSine(x, t, b, c, d) {\n          return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\n        },\n        easeInExpo: function easeInExpo(x, t, b, c, d) {\n          return t == 0 ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\n        },\n        easeOutExpo: function easeOutExpo(x, t, b, c, d) {\n          return t == d ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\n        },\n        easeInOutExpo: function easeInOutExpo(x, t, b, c, d) {\n          if (t == 0) return b;\n          if (t == d) return b + c;\n          if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\n          return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\n        },\n        easeInCirc: function easeInCirc(x, t, b, c, d) {\n          return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\n        },\n        easeOutCirc: function easeOutCirc(x, t, b, c, d) {\n          return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\n        },\n        easeInOutCirc: function easeInOutCirc(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\n        },\n        easeInElastic: function easeInElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n        },\n        easeOutElastic: function easeOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\n        },\n        easeInOutElastic: function easeInOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d / 2) == 2) return b + c;\n          if (!p) p = d * (.3 * 1.5);\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n          return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\n        },\n        easeInBack: function easeInBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * (t /= d) * t * ((s + 1) * t - s) + b;\n        },\n        easeOutBack: function easeOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n        },\n        easeInOutBack: function easeInOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return (t /= d / 2) < 1 ? c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n        },\n        easeInBounce: function easeInBounce(x, t, b, c, d) {\n          return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\n        },\n        easeOutBounce: function easeOutBounce(x, t, b, c, d) {\n          var o = 7.5625;\n\n          if ((t /= d) < 1 / 2.75) {\n            return c * (o * t * t) + b;\n          } else if (t < 2 / 2.75) {\n            return c * (o * (t -= 1.5 / 2.75) * t + .75) + b;\n          } else if (t < 2.5 / 2.75) {\n            return c * (o * (t -= 2.25 / 2.75) * t + .9375) + b;\n          } else {\n            return c * (o * (t -= 2.625 / 2.75) * t + .984375) + b;\n          }\n        },\n        easeInOutBounce: function easeInOutBounce(x, t, b, c, d) {\n          return t < d / 2 ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n        }\n      };\n      /*\r\n       *\r\n       * TERMS OF USE - EASING EQUATIONS\r\n       * \r\n       * Open source under the BSD License. \r\n       * \r\n       * Copyright Â© 2001 Robert Penner\r\n       * All rights reserved.\r\n       * \r\n       * Redistribution and use in source and binary forms, with or without modification, \r\n       * are permitted provided that the following conditions are met:\r\n       * \r\n       * Redistributions of source code must retain the above copyright notice, this list of \r\n       * conditions and the following disclaimer.\r\n       * Redistributions in binary form must reproduce the above copyright notice, this list \r\n       * of conditions and the following disclaimer in the documentation and/or other materials \r\n       * provided with the distribution.\r\n       * \r\n       * Neither the name of the author nor the names of contributors may be used to endorse \r\n       * or promote products derived from this software without specific prior written permission.\r\n       * \r\n       * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n       * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n       * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n       *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n       *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n       *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n       * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n       *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n       * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n       *\r\n       */\n    }();\n\n    var FRAMEWORK = function () {\n      var _rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n      var _strSpace = ' ';\n      var _strEmpty = '';\n      var _strScrollLeft = 'scrollLeft';\n      var _strScrollTop = 'scrollTop';\n      var _animations = [];\n      var _type = COMPATIBILITY.type;\n      var _cssNumber = {\n        animationIterationCount: true,\n        columnCount: true,\n        fillOpacity: true,\n        flexGrow: true,\n        flexShrink: true,\n        fontWeight: true,\n        lineHeight: true,\n        opacity: true,\n        order: true,\n        orphans: true,\n        widows: true,\n        zIndex: true,\n        zoom: true\n      };\n\n      function extend() {\n        var src,\n            copyIsArray,\n            copy,\n            name,\n            options,\n            clone,\n            target = arguments[0] || {},\n            i = 1,\n            length = arguments[LEXICON.l],\n            deep = false; // Handle a deep copy situation\n\n        if (_type(target) == TYPES.b) {\n          deep = target;\n          target = arguments[1] || {}; // skip the boolean and the target\n\n          i = 2;\n        } // Handle case when target is a string or something (possible in deep copy)\n\n\n        if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\n          target = {};\n        } // extend jQuery itself if only one argument is passed\n\n\n        if (length === i) {\n          target = FakejQuery;\n          --i;\n        }\n\n        for (; i < length; i++) {\n          // Only deal with non-null/undefined values\n          if ((options = arguments[i]) != null) {\n            // Extend the base object\n            for (name in options) {\n              src = target[name];\n              copy = options[name]; // Prevent never-ending loop\n\n              if (target === copy) {\n                continue;\n              } // Recurse if we're merging plain objects or arrays\n\n\n              if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\n                if (copyIsArray) {\n                  copyIsArray = false;\n                  clone = src && COMPATIBILITY.isA(src) ? src : [];\n                } else {\n                  clone = src && isPlainObject(src) ? src : {};\n                } // Never move original objects, clone them\n\n\n                target[name] = extend(deep, clone, copy); // Don't bring in undefined values\n              } else if (copy !== undefined$1) {\n                target[name] = copy;\n              }\n            }\n          }\n        } // Return the modified object\n\n\n        return target;\n      }\n\n      function inArray(item, arr, fromIndex) {\n        for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++) {\n          if (arr[i] === item) return i;\n        }\n\n        return -1;\n      }\n\n      function isFunction(obj) {\n        return _type(obj) == TYPES.f;\n      }\n\n      function isEmptyObject(obj) {\n        for (var name in obj) {\n          return false;\n        }\n\n        return true;\n      }\n\n      function isPlainObject(obj) {\n        if (!obj || _type(obj) != TYPES.o) return false;\n        var key;\n        var proto = LEXICON.p;\n        var hasOwnProperty = Object[proto].hasOwnProperty;\n        var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\n        var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\n\n        if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n          return false;\n        }\n\n        for (key in obj) {\n          /**/\n        }\n\n        return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\n      }\n\n      function _each(obj, callback) {\n        var i = 0;\n\n        if (isArrayLike(obj)) {\n          for (; i < obj[LEXICON.l]; i++) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        } else {\n          for (i in obj) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        }\n\n        return obj;\n      }\n\n      function isArrayLike(obj) {\n        var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\n\n        var t = _type(obj);\n\n        return isFunction(t) ? false : t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && length - 1 in obj;\n      }\n\n      function stripAndCollapse(value) {\n        var tokens = value.match(_rnothtmlwhite) || [];\n        return tokens.join(_strSpace);\n      }\n\n      function matches(elem, selector) {\n        var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\n        var i = nodeList[LEXICON.l];\n\n        while (i--) {\n          if (nodeList[i] == elem) return true;\n        }\n\n        return false;\n      }\n\n      function insertAdjacentElement(el, strategy, child) {\n        if (COMPATIBILITY.isA(child)) {\n          for (var i = 0; i < child[LEXICON.l]; i++) {\n            insertAdjacentElement(el, strategy, child[i]);\n          }\n        } else if (_type(child) == TYPES.s) el.insertAdjacentHTML(strategy, child);else el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\n      }\n\n      function setCSSVal(el, prop, val) {\n        try {\n          if (el[LEXICON.s][prop] !== undefined$1) el[LEXICON.s][prop] = parseCSSVal(prop, val);\n        } catch (e) {}\n      }\n\n      function parseCSSVal(prop, val) {\n        if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n) val += 'px';\n        return val;\n      }\n\n      function startNextAnimationInQ(animObj, removeFromQ) {\n        var index;\n        var nextAnim;\n        if (removeFromQ !== false) animObj.q.splice(0, 1);\n\n        if (animObj.q[LEXICON.l] > 0) {\n          nextAnim = animObj.q[0];\n\n          _animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\n        } else {\n          index = inArray(animObj, _animations);\n          if (index > -1) _animations.splice(index, 1);\n        }\n      }\n\n      function setAnimationValue(el, prop, value) {\n        if (prop === _strScrollLeft || prop === _strScrollTop) el[prop] = value;else setCSSVal(el, prop, value);\n      }\n\n      function _animate(el, props, options, easing, complete, guaranteedNext) {\n        var hasOptions = isPlainObject(options);\n        var from = {};\n        var to = {};\n        var i = 0;\n        var key;\n        var animObj;\n        var progress;\n        var step;\n        var specialEasing;\n        var duration;\n\n        if (hasOptions) {\n          easing = options.easing;\n          progress = options.progress;\n          step = options.step;\n          specialEasing = options.specialEasing;\n          complete = options.complete;\n          duration = options.duration;\n        } else duration = options;\n\n        specialEasing = specialEasing || {};\n        duration = duration || 400;\n        easing = easing || 'swing';\n        guaranteedNext = guaranteedNext || false;\n\n        for (; i < _animations[LEXICON.l]; i++) {\n          if (_animations[i].el === el) {\n            animObj = _animations[i];\n            break;\n          }\n        }\n\n        if (!animObj) {\n          animObj = {\n            el: el,\n            q: []\n          };\n\n          _animations.push(animObj);\n        }\n\n        for (key in props) {\n          if (key === _strScrollLeft || key === _strScrollTop) from[key] = el[key];else from[key] = FakejQuery(el).css(key);\n        }\n\n        for (key in from) {\n          if (from[key] !== props[key] && props[key] !== undefined$1) to[key] = props[key];\n        }\n\n        if (!isEmptyObject(to)) {\n          var timeNow;\n          var end;\n          var percent;\n          var fromVal;\n          var toVal;\n          var easedVal;\n          var timeStart;\n\n          var _frame;\n\n          var elapsed;\n          var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\n          var qObj = {\n            props: to,\n            duration: hasOptions ? options : duration,\n            easing: easing,\n            complete: complete\n          };\n\n          if (qPos === -1) {\n            qPos = animObj.q[LEXICON.l];\n            animObj.q.push(qObj);\n          }\n\n          if (qPos === 0) {\n            if (duration > 0) {\n              timeStart = COMPATIBILITY.now();\n\n              _frame = function frame() {\n                timeNow = COMPATIBILITY.now();\n                elapsed = timeNow - timeStart;\n                end = qObj.stop || elapsed >= duration;\n                percent = 1 - (MATH.max(0, timeStart + duration - timeNow) / duration || 0);\n\n                for (key in to) {\n                  fromVal = parseFloat(from[key]);\n                  toVal = parseFloat(to[key]);\n                  easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\n                  setAnimationValue(el, key, easedVal);\n\n                  if (isFunction(step)) {\n                    step(easedVal, {\n                      elem: el,\n                      prop: key,\n                      start: fromVal,\n                      now: easedVal,\n                      end: toVal,\n                      pos: percent,\n                      options: {\n                        easing: easing,\n                        speacialEasing: specialEasing,\n                        duration: duration,\n                        complete: complete,\n                        step: step\n                      },\n                      startTime: timeStart\n                    });\n                  }\n                }\n\n                if (isFunction(progress)) progress({}, percent, MATH.max(0, duration - elapsed));\n\n                if (end) {\n                  startNextAnimationInQ(animObj);\n                  if (isFunction(complete)) complete();\n                } else qObj.frame = COMPATIBILITY.rAF()(_frame);\n              };\n\n              qObj.frame = COMPATIBILITY.rAF()(_frame);\n            } else {\n              for (key in to) {\n                setAnimationValue(el, key, to[key]);\n              }\n\n              startNextAnimationInQ(animObj);\n            }\n          }\n        } else if (guaranteedNext) startNextAnimationInQ(animObj);\n      }\n\n      function _stop(el, clearQ, jumpToEnd) {\n        var animObj;\n        var qObj;\n        var key;\n        var i = 0;\n\n        for (; i < _animations[LEXICON.l]; i++) {\n          animObj = _animations[i];\n\n          if (animObj.el === el) {\n            if (animObj.q[LEXICON.l] > 0) {\n              qObj = animObj.q[0];\n              qObj.stop = true;\n              COMPATIBILITY.cAF()(qObj.frame);\n              animObj.q.splice(0, 1);\n              if (jumpToEnd) for (key in qObj.props) {\n                setAnimationValue(el, key, qObj.props[key]);\n              }\n              if (clearQ) animObj.q = [];else startNextAnimationInQ(animObj, false);\n            }\n\n            break;\n          }\n        }\n      }\n\n      function elementIsVisible(el) {\n        return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\n      }\n\n      function FakejQuery(selector) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var base = new FakejQuery();\n        var elements = selector;\n        var i = 0;\n        var elms;\n        var el;\n\n        if (_type(selector) == TYPES.s) {\n          elements = [];\n\n          if (selector.charAt(0) === '<') {\n            el = document.createElement('div');\n            el.innerHTML = selector;\n            elms = el.children;\n          } else {\n            elms = document.querySelectorAll(selector);\n          }\n\n          for (; i < elms[LEXICON.l]; i++) {\n            elements.push(elms[i]);\n          }\n        }\n\n        if (elements) {\n          if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self)) elements = [elements];\n\n          for (i = 0; i < elements[LEXICON.l]; i++) {\n            base[i] = elements[i];\n          }\n\n          base[LEXICON.l] = elements[LEXICON.l];\n        }\n\n        return base;\n      }\n\n      FakejQuery[LEXICON.p] = {\n        //EVENTS:\n        on: function on(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n\n            try {\n              if (el.addEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.addEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.attachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        off: function off(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n\n            try {\n              if (el.removeEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.removeEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.detachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        one: function one(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          return this.each(function () {\n            var el = FakejQuery(this);\n            FakejQuery.each(eventName, function (i, oneEventName) {\n              var oneHandler = function oneHandler(e) {\n                handler.call(this, e);\n                el.off(oneEventName, oneHandler);\n              };\n\n              el.on(oneEventName, oneHandler);\n            });\n          });\n        },\n        trigger: function trigger(eventName) {\n          var el;\n          var event;\n          return this.each(function () {\n            el = this;\n\n            if (document.createEvent) {\n              event = document.createEvent('HTMLEvents');\n              event.initEvent(eventName, true, false);\n              el.dispatchEvent(event);\n            } else {\n              el.fireEvent('on' + eventName);\n            }\n          });\n        },\n        //DOM NODE INSERTING / REMOVING:\n        append: function append(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforeend', child);\n          });\n        },\n        prepend: function prepend(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterbegin', child);\n          });\n        },\n        before: function before(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforebegin', child);\n          });\n        },\n        after: function after(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterend', child);\n          });\n        },\n        remove: function remove() {\n          return this.each(function () {\n            var el = this;\n            var parentNode = el.parentNode;\n            if (parentNode != null) parentNode.removeChild(el);\n          });\n        },\n        unwrap: function unwrap() {\n          var parents = [];\n          var i;\n          var el;\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (inArray(parent, parents) === -1) parents.push(parent);\n          });\n\n          for (i = 0; i < parents[LEXICON.l]; i++) {\n            el = parents[i];\n            parent = el.parentNode;\n\n            while (el.firstChild) {\n              parent.insertBefore(el.firstChild, el);\n            }\n\n            parent.removeChild(el);\n          }\n\n          return this;\n        },\n        wrapAll: function wrapAll(wrapperHTML) {\n          var i;\n          var nodes = this;\n          var wrapper = FakejQuery(wrapperHTML)[0];\n          var deepest = wrapper;\n          var parent = nodes[0].parentNode;\n          var previousSibling = nodes[0].previousSibling;\n\n          while (deepest.childNodes[LEXICON.l] > 0) {\n            deepest = deepest.childNodes[0];\n          }\n\n          for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++) {\n            deepest.appendChild(nodes[i]);\n          }\n\n          var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\n          parent.insertBefore(wrapper, nextSibling);\n          return this;\n        },\n        wrapInner: function wrapInner(wrapperHTML) {\n          return this.each(function () {\n            var el = FakejQuery(this);\n            var contents = el.contents();\n            if (contents[LEXICON.l]) contents.wrapAll(wrapperHTML);else el.append(wrapperHTML);\n          });\n        },\n        wrap: function wrap(wrapperHTML) {\n          return this.each(function () {\n            FakejQuery(this).wrapAll(wrapperHTML);\n          });\n        },\n        //DOM NODE MANIPULATION / INFORMATION:\n        css: function css(styles, val) {\n          var el;\n          var key;\n          var cptStyle;\n          var getCptStyle = window.getComputedStyle;\n\n          if (_type(styles) == TYPES.s) {\n            if (val === undefined$1) {\n              el = this[0];\n              cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles]; //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\n\n              return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\n            } else {\n              return this.each(function () {\n                setCSSVal(this, styles, val);\n              });\n            }\n          } else {\n            return this.each(function () {\n              for (key in styles) {\n                setCSSVal(this, key, styles[key]);\n              }\n            });\n          }\n        },\n        hasClass: function hasClass(className) {\n          var elem,\n              i = 0;\n          var classNamePrepared = _strSpace + className + _strSpace;\n          var classList;\n\n          while (elem = this[i++]) {\n            classList = elem.classList;\n            if (classList && classList.contains(className)) return true;else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1) return true;\n          }\n\n          return false;\n        },\n        addClass: function addClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.add(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    if (cur.indexOf(_strSpace + clazz + _strSpace) < 0) cur += clazz + _strSpace;\n                  }\n\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        removeClass: function removeClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.remove(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    while (cur.indexOf(_strSpace + clazz + _strSpace) > -1) {\n                      cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\n                    }\n                  }\n\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        hide: function hide() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'none';\n          });\n        },\n        show: function show() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'block';\n          });\n        },\n        attr: function attr(attrName, value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el.getAttribute(attrName);\n            el.setAttribute(attrName, value);\n          }\n\n          return this;\n        },\n        removeAttr: function removeAttr(attrName) {\n          return this.each(function () {\n            this.removeAttribute(attrName);\n          });\n        },\n        offset: function offset() {\n          var el = this[0];\n          var rect = el[LEXICON.bCR]();\n          var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\n          var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\n          return {\n            top: rect.top + scrollTop,\n            left: rect.left + scrollLeft\n          };\n        },\n        position: function position() {\n          var el = this[0];\n          return {\n            top: el.offsetTop,\n            left: el.offsetLeft\n          };\n        },\n        scrollLeft: function scrollLeft(value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollLeft];\n            el[_strScrollLeft] = value;\n          }\n\n          return this;\n        },\n        scrollTop: function scrollTop(value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollTop];\n            el[_strScrollTop] = value;\n          }\n\n          return this;\n        },\n        val: function val(value) {\n          var el = this[0];\n          if (!value) return el.value;\n          el.value = value;\n          return this;\n        },\n        //DOM TRAVERSAL / FILTERING:\n        first: function first() {\n          return this.eq(0);\n        },\n        last: function last() {\n          return this.eq(-1);\n        },\n        eq: function eq(index) {\n          return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\n        },\n        find: function find(selector) {\n          var children = [];\n          var i;\n          this.each(function () {\n            var el = this;\n            var ch = el.querySelectorAll(selector);\n\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              children.push(ch[i]);\n            }\n          });\n          return FakejQuery(children);\n        },\n        children: function children(selector) {\n          var children = [];\n          var el;\n          var ch;\n          var i;\n          this.each(function () {\n            ch = this.children;\n\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              el = ch[i];\n\n              if (selector) {\n                if (el.matches && el.matches(selector) || matches(el, selector)) children.push(el);\n              } else children.push(el);\n            }\n          });\n          return FakejQuery(children);\n        },\n        parent: function parent(selector) {\n          var parents = [];\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (selector ? FakejQuery(parent).is(selector) : true) parents.push(parent);\n          });\n          return FakejQuery(parents);\n        },\n        is: function is(selector) {\n          var el;\n          var i;\n\n          for (i = 0; i < this[LEXICON.l]; i++) {\n            el = this[i];\n            if (selector === ':visible') return elementIsVisible(el);\n            if (selector === ':hidden') return !elementIsVisible(el);\n            if (el.matches && el.matches(selector) || matches(el, selector)) return true;\n          }\n\n          return false;\n        },\n        contents: function contents() {\n          var contents = [];\n          var childs;\n          var i;\n          this.each(function () {\n            childs = this.childNodes;\n\n            for (i = 0; i < childs[LEXICON.l]; i++) {\n              contents.push(childs[i]);\n            }\n          });\n          return FakejQuery(contents);\n        },\n        each: function each(callback) {\n          return _each(this, callback);\n        },\n        //ANIMATION:\n        animate: function animate(props, duration, easing, complete) {\n          return this.each(function () {\n            _animate(this, props, duration, easing, complete);\n          });\n        },\n        stop: function stop(clearQ, jump) {\n          return this.each(function () {\n            _stop(this, clearQ, jump);\n          });\n        }\n      };\n      extend(FakejQuery, {\n        extend: extend,\n        inArray: inArray,\n        isEmptyObject: isEmptyObject,\n        isPlainObject: isPlainObject,\n        each: _each\n      });\n      return FakejQuery;\n    }();\n\n    var INSTANCES = function () {\n      var _targets = [];\n      var _instancePropertyString = '__overlayScrollbars__';\n      /**\r\n       * Register, unregister or get a certain (or all) instances.\r\n       * Register: Pass the target and the instance.\r\n       * Unregister: Pass the target and null.\r\n       * Get Instance: Pass the target from which the instance shall be got.\r\n       * Get Targets: Pass no arguments.\r\n       * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n       * @param instance The instance.\r\n       * @returns {*|void} Returns the instance from the given target.\r\n       */\n\n      return function (target, instance) {\n        var argLen = arguments[LEXICON.l];\n\n        if (argLen < 1) {\n          //return all targets\n          return _targets;\n        } else {\n          if (instance) {\n            //register instance\n            target[_instancePropertyString] = instance;\n\n            _targets.push(target);\n          } else {\n            var index = COMPATIBILITY.inA(target, _targets);\n\n            if (index > -1) {\n              if (argLen > 1) {\n                //unregister instance\n                delete target[_instancePropertyString];\n\n                _targets.splice(index, 1);\n              } else {\n                //get instance from target\n                return _targets[index][_instancePropertyString];\n              }\n            }\n          }\n        }\n      };\n    }();\n\n    var PLUGIN = function () {\n      var _plugin;\n\n      var _pluginsGlobals;\n\n      var _pluginsAutoUpdateLoop;\n\n      var _pluginsExtensions = [];\n\n      var _pluginsOptions = function () {\n        var type = COMPATIBILITY.type;\n        var possibleTemplateTypes = [TYPES.b, //boolean\n        TYPES.n, //number\n        TYPES.s, //string\n        TYPES.a, //array\n        TYPES.o, //object\n        TYPES.f, //function\n        TYPES.z //null\n        ];\n        var restrictedStringsSplit = ' ';\n        var restrictedStringsPossibilitiesSplit = ':';\n        var classNameAllowedValues = [TYPES.z, TYPES.s];\n        var numberAllowedValues = TYPES.n;\n        var booleanNullAllowedValues = [TYPES.z, TYPES.b];\n        var booleanTrueTemplate = [true, TYPES.b];\n        var booleanFalseTemplate = [false, TYPES.b];\n        var callbackTemplate = [null, [TYPES.z, TYPES.f]];\n        var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\n        var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\n        var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\n        var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\n        var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\n        var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\n        var optionsDefaultsAndTemplate = {\n          className: ['os-theme-dark', classNameAllowedValues],\n          //null || string\n          resize: ['none', resizeAllowedValues],\n          //none || both  || horizontal || vertical || n || b || h || v\n          sizeAutoCapable: booleanTrueTemplate,\n          //true || false\n          clipAlways: booleanTrueTemplate,\n          //true || false\n          normalizeRTL: booleanTrueTemplate,\n          //true || false\n          paddingAbsolute: booleanFalseTemplate,\n          //true || false\n          autoUpdate: [null, booleanNullAllowedValues],\n          //true || false || null\n          autoUpdateInterval: [33, numberAllowedValues],\n          //number\n          updateOnLoad: updateOnLoadTemplate,\n          //string || array || null\n          nativeScrollbarsOverlaid: {\n            showNativeScrollbars: booleanFalseTemplate,\n            //true || false\n            initialize: booleanTrueTemplate //true || false\n\n          },\n          overflowBehavior: {\n            x: ['scroll', overflowBehaviorAllowedValues],\n            //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n            y: ['scroll', overflowBehaviorAllowedValues] //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n\n          },\n          scrollbars: {\n            visibility: ['auto', scrollbarsVisibilityAllowedValues],\n            //visible || hidden || auto || v || h || a\n            autoHide: ['never', scrollbarsAutoHideAllowedValues],\n            //never || scroll || leave || move || n || s || l || m\n            autoHideDelay: [800, numberAllowedValues],\n            //number\n            dragScrolling: booleanTrueTemplate,\n            //true || false\n            clickScrolling: booleanFalseTemplate,\n            //true || false\n            touchSupport: booleanTrueTemplate,\n            //true || false\n            snapHandle: booleanFalseTemplate //true || false\n\n          },\n          textarea: {\n            dynWidth: booleanFalseTemplate,\n            //true || false\n            dynHeight: booleanFalseTemplate,\n            //true || false\n            inheritedAttrs: inheritedAttrsTemplate //string || array || null\n\n          },\n          callbacks: {\n            onInitialized: callbackTemplate,\n            //null || function\n            onInitializationWithdrawn: callbackTemplate,\n            //null || function\n            onDestroyed: callbackTemplate,\n            //null || function\n            onScrollStart: callbackTemplate,\n            //null || function\n            onScroll: callbackTemplate,\n            //null || function\n            onScrollStop: callbackTemplate,\n            //null || function\n            onOverflowChanged: callbackTemplate,\n            //null || function\n            onOverflowAmountChanged: callbackTemplate,\n            //null || function\n            onDirectionChanged: callbackTemplate,\n            //null || function\n            onContentSizeChanged: callbackTemplate,\n            //null || function\n            onHostSizeChanged: callbackTemplate,\n            //null || function\n            onUpdated: callbackTemplate //null || function\n\n          }\n        };\n\n        var convert = function convert(template) {\n          var recursive = function recursive(obj) {\n            var key;\n            var val;\n            var valType;\n\n            for (key in obj) {\n              if (!obj[LEXICON.hOP](key)) continue;\n              val = obj[key];\n              valType = type(val);\n              if (valType == TYPES.a) obj[key] = val[template ? 1 : 0];else if (valType == TYPES.o) obj[key] = recursive(val);\n            }\n\n            return obj;\n          };\n\n          return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\n        };\n\n        return {\n          _defaults: convert(),\n          _template: convert(true),\n\n          /**\r\n           * Validates the passed object by the passed template.\r\n           * @param obj The object which shall be validated.\r\n           * @param template The template which defines the allowed values and types.\r\n           * @param writeErrors True if errors shall be logged to the console.\r\n           * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n           * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n           */\n          _validate: function _validate(obj, template, writeErrors, diffObj) {\n            var validatedOptions = {};\n            var validatedOptionsPrepared = {};\n            var objectCopy = FRAMEWORK.extend(true, {}, obj);\n            var inArray = FRAMEWORK.inArray;\n            var isEmptyObj = FRAMEWORK.isEmptyObject;\n\n            var checkObjectProps = function checkObjectProps(data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\n              for (var prop in template) {\n                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\n                  var isValid = false;\n                  var isDiff = false;\n                  var templateValue = template[prop];\n                  var templateValueType = type(templateValue);\n                  var templateIsComplex = templateValueType == TYPES.o;\n                  var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\n                  var dataDiffValue = diffData[prop];\n                  var dataValue = data[prop];\n                  var dataValueType = type(dataValue);\n                  var propPrefix = prevPropName ? prevPropName + '.' : '';\n                  var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\n                  var errorPossibleTypes = [];\n                  var errorRestrictedStrings = [];\n                  var restrictedStringValuesSplit;\n                  var restrictedStringValuesPossibilitiesSplit;\n                  var isRestrictedValue;\n                  var mainPossibility;\n                  var currType;\n                  var i;\n                  var v;\n                  var j;\n                  dataDiffValue = dataDiffValue === undefined$1 ? {} : dataDiffValue; //if the template has a object as value, it means that the options are complex (verschachtelt)\n\n                  if (templateIsComplex && dataValueType == TYPES.o) {\n                    validatedOptions[prop] = {};\n                    validatedOptionsPrepared[prop] = {};\n                    checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\n                    FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\n                      if (isEmptyObj(value[prop])) {\n                        delete value[prop];\n                      }\n                    });\n                  } else if (!templateIsComplex) {\n                    for (i = 0; i < templateTypes[LEXICON.l]; i++) {\n                      currType = templateTypes[i];\n                      templateValueType = type(currType); //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\n\n                      isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\n\n                      if (isRestrictedValue) {\n                        errorPossibleTypes.push(TYPES.s); //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\n\n                        restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\n                        errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\n\n                        for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\n                          //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\n                          restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\n                          mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\n\n                          for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\n                            //if any possibility matches with the dataValue, its valid\n                            if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\n                              isValid = true;\n                              break;\n                            }\n                          }\n\n                          if (isValid) break;\n                        }\n                      } else {\n                        errorPossibleTypes.push(currType);\n\n                        if (dataValueType === currType) {\n                          isValid = true;\n                          break;\n                        }\n                      }\n                    }\n\n                    if (isValid) {\n                      isDiff = dataValue !== dataDiffValue;\n                      if (isDiff) validatedOptions[prop] = dataValue;\n                      if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff) validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\n                    } else if (writeErrors) {\n                      console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" + \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" + (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\n                    }\n\n                    delete data[prop];\n                  }\n                }\n              }\n            };\n\n            checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared); //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\n\n            /*\r\n            if(keepForeignProps) {\r\n                FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n            }\r\n            */\n\n            if (!isEmptyObj(objectCopy) && writeErrors) console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\n            return {\n              _default: validatedOptions,\n              _prepared: validatedOptionsPrepared\n            };\n          }\n        };\n      }();\n      /**\r\n       * Initializes the object which contains global information about the plugin and each instance of it.\r\n       */\n\n\n      function initOverlayScrollbarsStatics() {\n        if (!_pluginsGlobals) _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\n        if (!_pluginsAutoUpdateLoop) _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\n      }\n      /**\r\n       * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @param defaultOptions\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsGlobals(defaultOptions) {\n        var _base = this;\n\n        var strOverflow = 'overflow';\n        var strHidden = 'hidden';\n        var strScroll = 'scroll';\n        var bodyElement = FRAMEWORK('body');\n        var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\n        var scrollbarDummyElement0 = scrollbarDummyElement[0];\n        var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\n        bodyElement.append(scrollbarDummyElement);\n        scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\n\n        var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\n        var nativeScrollbarIsOverlaid = {\n          x: nativeScrollbarSize.x === 0,\n          y: nativeScrollbarSize.y === 0\n        };\n\n        var msie = function () {\n          var ua = window.navigator.userAgent;\n          var strIndexOf = 'indexOf';\n          var strSubString = 'substring';\n          var msie = ua[strIndexOf]('MSIE ');\n          var trident = ua[strIndexOf]('Trident/');\n          var edge = ua[strIndexOf]('Edge/');\n          var rv = ua[strIndexOf]('rv:');\n          var result;\n          var parseIntFunc = parseInt; // IE 10 or older => return version number\n\n          if (msie > 0) result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10); // IE 11 => return version number\n          else if (trident > 0) result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10); // Edge (IE 12+) => return version number\n          else if (edge > 0) result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10); // other browser\n\n          return result;\n        }();\n\n        FRAMEWORK.extend(_base, {\n          defaultOptions: defaultOptions,\n          msie: msie,\n          autoUpdateLoop: false,\n          autoUpdateRecommended: !COMPATIBILITY.mO(),\n          nativeScrollbarSize: nativeScrollbarSize,\n          nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\n          nativeScrollbarStyling: function () {\n            var result = false;\n            scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\n\n            try {\n              result = scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\n            } catch (ex) {} //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\n            //and set overflow to scroll\n            //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\n            //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\n\n\n            return result;\n          }(),\n          overlayScrollbarDummySize: {\n            x: 30,\n            y: 30\n          },\n          cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\n          restrictedMeasuring: function () {\n            //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\n            //since 1.11.0 always false -> fixed via CSS (hopefully)\n            scrollbarDummyElement.css(strOverflow, strHidden);\n            var scrollSize = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            scrollbarDummyElement.css(strOverflow, 'visible');\n            var scrollSize2 = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            return scrollSize.w - scrollSize2.w !== 0 || scrollSize.h - scrollSize2.h !== 0;\n          }(),\n          rtlScrollBehavior: function () {\n            scrollbarDummyElement.css({\n              'overflow-y': strHidden,\n              'overflow-x': strScroll,\n              'direction': 'rtl'\n            }).scrollLeft(0);\n            var dummyContainerOffset = scrollbarDummyElement.offset();\n            var dummyContainerChildOffset = dummyContainerChild.offset(); //https://github.com/KingSora/OverlayScrollbars/issues/187\n\n            scrollbarDummyElement.scrollLeft(-999);\n            var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\n            return {\n              //origin direction = determines if the zero scroll position is on the left or right side\n              //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\n              //true = on the left side\n              //false = on the right side\n              i: dummyContainerOffset.left === dummyContainerChildOffset.left,\n              //negative = determines if the maximum scroll is positive or negative\n              //'n' means 'negate' (n === true means that the axis must be negated to be correct)\n              //true = negative\n              //false = positive\n              n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\n            };\n          }(),\n          supportTransform: !!VENDORS._cssProperty('transform'),\n          supportTransition: !!VENDORS._cssProperty('transition'),\n          supportPassiveEvents: function () {\n            var supportsPassive = false;\n\n            try {\n              window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: function get() {\n                  supportsPassive = true;\n                }\n              }));\n            } catch (e) {}\n\n            return supportsPassive;\n          }(),\n          supportResizeObserver: !!COMPATIBILITY.rO(),\n          supportMutationObserver: !!COMPATIBILITY.mO()\n        });\n        scrollbarDummyElement.removeAttr(LEXICON.s).remove(); //Catch zoom event:\n\n        (function () {\n          if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y) return;\n          var abs = MATH.abs;\n          var windowWidth = COMPATIBILITY.wW();\n          var windowHeight = COMPATIBILITY.wH();\n          var windowDpr = getWindowDPR();\n\n          var onResize = function onResize() {\n            if (INSTANCES().length > 0) {\n              var newW = COMPATIBILITY.wW();\n              var newH = COMPATIBILITY.wH();\n              var deltaW = newW - windowWidth;\n              var deltaH = newH - windowHeight;\n              if (deltaW === 0 && deltaH === 0) return;\n              var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\n              var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\n              var absDeltaW = abs(deltaW);\n              var absDeltaH = abs(deltaH);\n              var absDeltaWRatio = abs(deltaWRatio);\n              var absDeltaHRatio = abs(deltaHRatio);\n              var newDPR = getWindowDPR();\n              var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\n              var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\n              var dprChanged = newDPR !== windowDpr && windowDpr > 0;\n              var isZoom = deltaIsBigger && difference && dprChanged;\n              var oldScrollbarSize = _base.nativeScrollbarSize;\n              var newScrollbarSize;\n\n              if (isZoom) {\n                bodyElement.append(scrollbarDummyElement);\n                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\n                scrollbarDummyElement.remove();\n\n                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\n                  FRAMEWORK.each(INSTANCES(), function () {\n                    if (INSTANCES(this)) INSTANCES(this).update('zoom');\n                  });\n                }\n              }\n\n              windowWidth = newW;\n              windowHeight = newH;\n              windowDpr = newDPR;\n            }\n          };\n\n          function differenceIsBiggerThanOne(valOne, valTwo) {\n            var absValOne = abs(valOne);\n            var absValTwo = abs(valTwo);\n            return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\n          }\n\n          function getWindowDPR() {\n            var dDPI = window.screen.deviceXDPI || 0;\n            var sDPI = window.screen.logicalXDPI || 1;\n            return window.devicePixelRatio || dDPI / sDPI;\n          }\n\n          FRAMEWORK(window).on('resize', onResize);\n        })();\n\n        function calcNativeScrollbarSize(measureElement) {\n          return {\n            x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\n            y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\n          };\n        }\n      }\n      /**\r\n       * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsAutoUpdateLoop(globals) {\n        var _base = this;\n\n        var _inArray = FRAMEWORK.inArray;\n        var _getNow = COMPATIBILITY.now;\n        var _strAutoUpdate = 'autoUpdate';\n\n        var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\n\n        var _strLength = LEXICON.l;\n        var _loopingInstances = [];\n        var _loopingInstancesIntervalCache = [];\n        var _loopIsActive = false;\n        var _loopIntervalDefault = 33;\n        var _loopInterval = _loopIntervalDefault;\n\n        var _loopTimeOld = _getNow();\n\n        var _loopID;\n        /**\r\n         * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n         */\n\n\n        var loop = function loop() {\n          if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\n            _loopID = COMPATIBILITY.rAF()(function () {\n              loop();\n            });\n\n            var timeNew = _getNow();\n\n            var timeDelta = timeNew - _loopTimeOld;\n            var lowestInterval;\n            var instance;\n            var instanceOptions;\n            var instanceAutoUpdateAllowed;\n            var instanceAutoUpdateInterval;\n            var now;\n\n            if (timeDelta > _loopInterval) {\n              _loopTimeOld = timeNew - timeDelta % _loopInterval;\n              lowestInterval = _loopIntervalDefault;\n\n              for (var i = 0; i < _loopingInstances[_strLength]; i++) {\n                instance = _loopingInstances[i];\n\n                if (instance !== undefined$1) {\n                  instanceOptions = instance.options();\n                  instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\n                  instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\n                  now = _getNow();\n\n                  if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && now - _loopingInstancesIntervalCache[i] > instanceAutoUpdateInterval) {\n                    instance.update('auto');\n                    _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\n                  }\n\n                  lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\n                }\n              }\n\n              _loopInterval = lowestInterval;\n            }\n          } else {\n            _loopInterval = _loopIntervalDefault;\n          }\n        };\n        /**\r\n         * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n\n        _base.add = function (instance) {\n          if (_inArray(instance, _loopingInstances) === -1) {\n            _loopingInstances.push(instance);\n\n            _loopingInstancesIntervalCache.push(_getNow());\n\n            if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\n              _loopIsActive = true;\n              globals.autoUpdateLoop = _loopIsActive;\n              loop();\n            }\n          }\n        };\n        /**\r\n         * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n\n        _base.remove = function (instance) {\n          var index = _inArray(instance, _loopingInstances);\n\n          if (index > -1) {\n            //remove from loopingInstances list\n            _loopingInstancesIntervalCache.splice(index, 1);\n\n            _loopingInstances.splice(index, 1); //correct update loop behavior\n\n\n            if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\n              _loopIsActive = false;\n              globals.autoUpdateLoop = _loopIsActive;\n\n              if (_loopID !== undefined$1) {\n                COMPATIBILITY.cAF()(_loopID);\n                _loopID = -1;\n              }\n            }\n          }\n        };\n      }\n      /**\r\n       * A object which manages the scrollbars visibility of the target element.\r\n       * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n       * @param options The custom options.\r\n       * @param extensions The custom extensions.\r\n       * @param globals\r\n       * @param autoUpdateLoop\r\n       * @returns {*}\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\n        //shortcuts\n        var type = COMPATIBILITY.type;\n        var inArray = FRAMEWORK.inArray;\n        var each = FRAMEWORK.each; //make correct instanceof\n\n        var _base = new _plugin();\n\n        var _frameworkProto = FRAMEWORK[LEXICON.p]; //if passed element is no HTML element: skip and return\n\n        if (!isHTMLElement(pluginTargetElement)) return; //if passed element is already initialized: set passed options if there are any and return its instance\n\n        if (INSTANCES(pluginTargetElement)) {\n          var inst = INSTANCES(pluginTargetElement);\n          inst.options(options);\n          return inst;\n        } //globals:\n\n\n        var _nativeScrollbarIsOverlaid;\n\n        var _overlayScrollbarDummySize;\n\n        var _rtlScrollBehavior;\n\n        var _autoUpdateRecommended;\n\n        var _msieVersion;\n\n        var _nativeScrollbarStyling;\n\n        var _cssCalc;\n\n        var _nativeScrollbarSize;\n\n        var _supportTransition;\n\n        var _supportTransform;\n\n        var _supportPassiveEvents;\n\n        var _supportResizeObserver;\n\n        var _supportMutationObserver;\n\n        var _initialized;\n\n        var _destroyed;\n\n        var _isTextarea;\n\n        var _isBody;\n\n        var _documentMixed;\n\n        var _domExists; //general:\n\n\n        var _isBorderBox;\n\n        var _sizeAutoObserverAdded;\n\n        var _paddingX;\n\n        var _paddingY;\n\n        var _borderX;\n\n        var _borderY;\n\n        var _marginX;\n\n        var _marginY;\n\n        var _isRTL;\n\n        var _sleeping;\n\n        var _contentBorderSize = {};\n        var _scrollHorizontalInfo = {};\n        var _scrollVerticalInfo = {};\n        var _viewportSize = {};\n        var _nativeScrollbarMinSize = {}; //naming:\t\n\n        var _strMinusHidden = '-hidden';\n        var _strMarginMinus = 'margin-';\n        var _strPaddingMinus = 'padding-';\n        var _strBorderMinus = 'border-';\n        var _strTop = 'top';\n        var _strRight = 'right';\n        var _strBottom = 'bottom';\n        var _strLeft = 'left';\n        var _strMinMinus = 'min-';\n        var _strMaxMinus = 'max-';\n        var _strWidth = 'width';\n        var _strHeight = 'height';\n        var _strFloat = 'float';\n        var _strEmpty = '';\n        var _strAuto = 'auto';\n        var _strSync = 'sync';\n        var _strScroll = 'scroll';\n        var _strHundredPercent = '100%';\n        var _strX = 'x';\n        var _strY = 'y';\n        var _strDot = '.';\n        var _strSpace = ' ';\n        var _strScrollbar = 'scrollbar';\n        var _strMinusHorizontal = '-horizontal';\n        var _strMinusVertical = '-vertical';\n\n        var _strScrollLeft = _strScroll + 'Left';\n\n        var _strScrollTop = _strScroll + 'Top';\n\n        var _strMouseTouchDownEvent = 'mousedown touchstart';\n        var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\n        var _strMouseTouchMoveEvent = 'mousemove touchmove';\n        var _strMouseEnter = 'mouseenter';\n        var _strMouseLeave = 'mouseleave';\n        var _strKeyDownEvent = 'keydown';\n        var _strKeyUpEvent = 'keyup';\n        var _strSelectStartEvent = 'selectstart';\n        var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\n        var _strResizeObserverProperty = '__overlayScrollbarsRO__'; //class names:\t\n\n        var _cassNamesPrefix = 'os-';\n\n        var _classNameHTMLElement = _cassNamesPrefix + 'html';\n\n        var _classNameHostElement = _cassNamesPrefix + 'host';\n\n        var _classNameHostElementForeign = _classNameHostElement + '-foreign';\n\n        var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\n\n        var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\n\n        var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\n\n        var _classNameHostTransition = _classNameHostElement + '-transition';\n\n        var _classNameHostRTL = _classNameHostElement + '-rtl';\n\n        var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\n\n        var _classNameHostScrolling = _classNameHostElement + '-scrolling';\n\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n        var _classNameHostOverflowX = _classNameHostOverflow + '-x';\n\n        var _classNameHostOverflowY = _classNameHostOverflow + '-y';\n\n        var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\n\n        var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\n\n        var _classNamePaddingElement = _cassNamesPrefix + 'padding';\n\n        var _classNameViewportElement = _cassNamesPrefix + 'viewport';\n\n        var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\n\n        var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\n\n        var _classNameContentElement = _cassNamesPrefix + 'content';\n\n        var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\n\n        var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\n\n        var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\n\n        var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\n\n        var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\n\n        var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\n\n        var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\n\n        var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\n\n        var _classNameScrollbarTrack = _classNameScrollbar + '-track';\n\n        var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\n\n        var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\n\n        var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\n\n        var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\n\n        var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\n\n        var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\n\n        var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\n\n        var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\n\n        var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\n\n        var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\n\n        var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\n\n        var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\n\n        var _classNameDragging = _cassNamesPrefix + 'dragging';\n\n        var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\n\n        var _classNamesDynamicDestroy = [_classNameViewportNativeScrollbarsInvisible, _classNameViewportNativeScrollbarsOverlaid, _classNameScrollbarTrackOff, _classNameScrollbarHandleOff, _classNameScrollbarUnusable, _classNameScrollbarAutoHidden, _classNameScrollbarCornerResize, _classNameScrollbarCornerResizeB, _classNameScrollbarCornerResizeH, _classNameScrollbarCornerResizeV, _classNameDragging].join(_strSpace); //callbacks:\t\n\n\n        var _callbacksInitQeueue = []; //attrs viewport shall inherit from target\t\n\n        var _viewportAttrsFromTarget = [LEXICON.ti]; //options:\t\n\n        var _defaultOptions;\n\n        var _currentOptions;\n\n        var _currentPreparedOptions; //extensions:\t\n\n\n        var _extensions = {};\n        var _extensionsPrivateMethods = 'added removed on contract'; //update\t\n\n        var _lastUpdateTime;\n\n        var _swallowedUpdateHints = {};\n\n        var _swallowedUpdateTimeout;\n\n        var _swallowUpdateLag = 42;\n        var _updateOnLoadEventName = 'load';\n        var _updateOnLoadElms = []; //DOM elements:\t\n\n        var _windowElement;\n\n        var _documentElement;\n\n        var _htmlElement;\n\n        var _bodyElement;\n\n        var _targetElement; //the target element of this OverlayScrollbars object\t\n\n\n        var _hostElement; //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\n\n\n        var _sizeAutoObserverElement; //observes size auto changes\t\n\n\n        var _sizeObserverElement; //observes size and padding changes\t\n\n\n        var _paddingElement; //manages the padding\t\n\n\n        var _viewportElement; //is the viewport of our scrollbar model\t\n\n\n        var _contentElement; //the element which holds the content\t\n\n\n        var _contentArrangeElement; //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\n\n\n        var _contentGlueElement; //has always the size of the content element\t\n\n\n        var _textareaCoverElement; //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\n\n\n        var _scrollbarCornerElement;\n\n        var _scrollbarHorizontalElement;\n\n        var _scrollbarHorizontalTrackElement;\n\n        var _scrollbarHorizontalHandleElement;\n\n        var _scrollbarVerticalElement;\n\n        var _scrollbarVerticalTrackElement;\n\n        var _scrollbarVerticalHandleElement;\n\n        var _windowElementNative;\n\n        var _documentElementNative;\n\n        var _targetElementNative;\n\n        var _hostElementNative;\n\n        var _sizeAutoObserverElementNative;\n\n        var _sizeObserverElementNative;\n\n        var _paddingElementNative;\n\n        var _viewportElementNative;\n\n        var _contentElementNative; //Cache:\t\n\n\n        var _hostSizeCache;\n\n        var _contentScrollSizeCache;\n\n        var _arrangeContentSizeCache;\n\n        var _hasOverflowCache;\n\n        var _hideOverflowCache;\n\n        var _widthAutoCache;\n\n        var _heightAutoCache;\n\n        var _cssBoxSizingCache;\n\n        var _cssPaddingCache;\n\n        var _cssBorderCache;\n\n        var _cssMarginCache;\n\n        var _cssDirectionCache;\n\n        var _cssDirectionDetectedCache;\n\n        var _paddingAbsoluteCache;\n\n        var _clipAlwaysCache;\n\n        var _contentGlueSizeCache;\n\n        var _overflowBehaviorCache;\n\n        var _overflowAmountCache;\n\n        var _ignoreOverlayScrollbarHidingCache;\n\n        var _autoUpdateCache;\n\n        var _sizeAutoCapableCache;\n\n        var _contentElementScrollSizeChangeDetectedCache;\n\n        var _hostElementSizeChangeDetectedCache;\n\n        var _scrollbarsVisibilityCache;\n\n        var _scrollbarsAutoHideCache;\n\n        var _scrollbarsClickScrollingCache;\n\n        var _scrollbarsDragScrollingCache;\n\n        var _resizeCache;\n\n        var _normalizeRTLCache;\n\n        var _classNameCache;\n\n        var _oldClassName;\n\n        var _textareaAutoWrappingCache;\n\n        var _textareaInfoCache;\n\n        var _textareaSizeCache;\n\n        var _textareaDynHeightCache;\n\n        var _textareaDynWidthCache;\n\n        var _bodyMinSizeCache;\n\n        var _updateAutoCache = {}; //MutationObserver:\t\n\n        var _mutationObserverHost;\n\n        var _mutationObserverContent;\n\n        var _mutationObserverHostCallback;\n\n        var _mutationObserverContentCallback;\n\n        var _mutationObserversConnected;\n\n        var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\n\n        var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget); //events:\t\n\n\n        var _destroyEvents = []; //textarea:\t\n\n        var _textareaHasFocus; //scrollbars:\t\n\n\n        var _scrollbarsAutoHideTimeoutId;\n\n        var _scrollbarsAutoHideMoveTimeoutId;\n\n        var _scrollbarsAutoHideDelay;\n\n        var _scrollbarsAutoHideNever;\n\n        var _scrollbarsAutoHideScroll;\n\n        var _scrollbarsAutoHideMove;\n\n        var _scrollbarsAutoHideLeave;\n\n        var _scrollbarsHandleHovered;\n\n        var _scrollbarsHandlesDefineScrollPos; //resize\t\n\n\n        var _resizeNone;\n\n        var _resizeBoth;\n\n        var _resizeHorizontal;\n\n        var _resizeVertical; //==== Event Listener ====//\t\n\n        /**\t\r\n         * Adds or removes a event listener from the given element. \t\r\n         * @param element The element to which the event listener shall be applied or removed.\t\r\n         * @param eventNames The name(s) of the events.\t\r\n         * @param listener The method which shall be called.\t\r\n         * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n         * @param passiveOrOptions The options for the event.\r\n         */\n\n\n        function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\n          var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\n          var method = remove ? 'removeEventListener' : 'addEventListener';\n          var onOff = remove ? 'off' : 'on';\n          var events = collected ? false : eventNames.split(_strSpace);\n          var i = 0;\n          var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\n          var passive = _supportPassiveEvents && (passiveOrOptionsIsObj ? passiveOrOptions._passive : passiveOrOptions) || false;\n          var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\n          var nativeParam = _supportPassiveEvents ? {\n            passive: passive,\n            capture: capture\n          } : capture;\n\n          if (collected) {\n            for (; i < eventNames[LEXICON.l]; i++) {\n              setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\n            }\n          } else {\n            for (; i < events[LEXICON.l]; i++) {\n              if (_supportPassiveEvents) {\n                element[0][method](events[i], listener, nativeParam);\n              } else {\n                element[onOff](events[i], listener);\n              }\n            }\n          }\n        }\n\n        function addDestroyEventListener(element, eventNames, listener, passive) {\n          setupResponsiveEventListener(element, eventNames, listener, false, passive);\n\n          _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\n        } //==== Resize Observer ====//\n\n        /**\r\n         * Adds or removes a resize observer from the given element.\r\n         * @param targetElement The element to which the resize observer shall be added or removed.\r\n         * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n         */\n\n\n        function setupResizeObserver(targetElement, onElementResizedCallback) {\n          if (targetElement) {\n            var resizeObserver = COMPATIBILITY.rO();\n            var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\n            var strChildNodes = 'childNodes';\n            var constScroll = 3333333;\n\n            var callback = function callback() {\n              targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\n\n              onElementResizedCallback();\n            }; //add resize observer:\n\n\n            if (onElementResizedCallback) {\n              if (_supportResizeObserver) {\n                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\n                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\n                observer.observe(element);\n              } else {\n                if (_msieVersion > 9 || !_autoUpdateRecommended) {\n                  targetElement.prepend(generateDiv(_classNameResizeObserverElement, generateDiv({\n                    c: _classNameResizeObserverItemElement,\n                    dir: 'ltr'\n                  }, generateDiv(_classNameResizeObserverItemElement, generateDiv(_classNameResizeObserverItemFinalElement)) + generateDiv(_classNameResizeObserverItemElement, generateDiv({\n                    c: _classNameResizeObserverItemFinalElement,\n                    style: 'width: 200%; height: 200%'\n                  })))));\n                  var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\n                  var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\n                  var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\n                  var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\n                  var widthCache = observerElement[LEXICON.oW];\n                  var heightCache = observerElement[LEXICON.oH];\n                  var isDirty;\n                  var rAFId;\n                  var currWidth;\n                  var currHeight;\n                  var factor = 2;\n                  var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\n\n                  var reset = function reset() {\n                    /*\r\n                     var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var expandChildCSS = {};\r\n                     expandChildCSS[_strWidth] = sizeResetWidth;\r\n                     expandChildCSS[_strHeight] = sizeResetHeight;\r\n                     expandElementChild.css(expandChildCSS);\r\n                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     */\n                    expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n\n                    shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n                  };\n\n                  var onResized = function onResized() {\n                    rAFId = 0;\n                    if (!isDirty) return;\n                    widthCache = currWidth;\n                    heightCache = currHeight;\n                    callback();\n                  };\n\n                  var onScroll = function onScroll(event) {\n                    currWidth = observerElement[LEXICON.oW];\n                    currHeight = observerElement[LEXICON.oH];\n                    isDirty = currWidth != widthCache || currHeight != heightCache;\n\n                    if (event && isDirty && !rAFId) {\n                      COMPATIBILITY.cAF()(rAFId);\n                      rAFId = COMPATIBILITY.rAF()(onResized);\n                    } else if (!event) onResized();\n\n                    reset();\n\n                    if (event) {\n                      COMPATIBILITY.prvD(event);\n                      COMPATIBILITY.stpP(event);\n                    }\n\n                    return false;\n                  };\n\n                  var expandChildCSS = {};\n                  var observerElementCSS = {};\n                  setTopRightBottomLeft(observerElementCSS, _strEmpty, [-((nativeScrollbarSize.y + 1) * factor), nativeScrollbarSize.x * -factor, nativeScrollbarSize.y * -factor, -((nativeScrollbarSize.x + 1) * factor)]);\n                  FRAMEWORK(observerElement).css(observerElementCSS);\n                  expandElement.on(_strScroll, onScroll);\n                  shrinkElement.on(_strScroll, onScroll);\n                  targetElement.on(strAnimationStartEvent, function () {\n                    onScroll(false);\n                  }); //lets assume that the divs will never be that large and a constant value is enough\n\n                  expandChildCSS[_strWidth] = constScroll;\n                  expandChildCSS[_strHeight] = constScroll;\n                  expandElementChild.css(expandChildCSS);\n                  reset();\n                } else {\n                  var attachEvent = _documentElementNative.attachEvent;\n                  var isIE = _msieVersion !== undefined$1;\n\n                  if (attachEvent) {\n                    targetElement.prepend(generateDiv(_classNameResizeObserverElement));\n                    findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\n                  } else {\n                    var obj = _documentElementNative.createElement(TYPES.o);\n\n                    obj.setAttribute(LEXICON.ti, '-1');\n                    obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\n\n                    obj.onload = function () {\n                      var wnd = this.contentDocument.defaultView;\n                      wnd.addEventListener('resize', callback);\n                      wnd.document.documentElement.style.display = 'none';\n                    };\n\n                    obj.type = 'text/html';\n                    if (isIE) targetElement.prepend(obj);\n                    obj.data = 'about:blank';\n                    if (!isIE) targetElement.prepend(obj);\n                    targetElement.on(strAnimationStartEvent, callback);\n                  }\n                }\n              }\n\n              if (targetElement[0] === _sizeObserverElementNative) {\n                var directionChanged = function directionChanged() {\n                  var dir = _hostElement.css('direction');\n\n                  var css = {};\n                  var scrollLeftValue = 0;\n                  var result = false;\n\n                  if (dir !== _cssDirectionDetectedCache) {\n                    if (dir === 'ltr') {\n                      css[_strLeft] = 0;\n                      css[_strRight] = _strAuto;\n                      scrollLeftValue = constScroll;\n                    } else {\n                      css[_strLeft] = _strAuto;\n                      css[_strRight] = 0;\n                      scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\n                    } //execution order is important for IE!!!\n\n\n                    _sizeObserverElement.children().eq(0).css(css);\n\n                    _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\n\n                    _cssDirectionDetectedCache = dir;\n                    result = true;\n                  }\n\n                  return result;\n                };\n\n                directionChanged();\n                addDestroyEventListener(targetElement, _strScroll, function (event) {\n                  if (directionChanged()) update();\n                  COMPATIBILITY.prvD(event);\n                  COMPATIBILITY.stpP(event);\n                  return false;\n                });\n              }\n            } //remove resize observer:\n            else {\n              if (_supportResizeObserver) {\n                var element = targetElement.contents()[0];\n                var resizeObserverObj = element[_strResizeObserverProperty];\n\n                if (resizeObserverObj) {\n                  resizeObserverObj.disconnect();\n                  delete element[_strResizeObserverProperty];\n                }\n              } else {\n                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\n              }\n            }\n          }\n        }\n        /**\r\n         * Freezes or unfreezes the given resize observer.\r\n         * @param targetElement The element to which the target resize observer is applied.\r\n         * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n         \r\n        function freezeResizeObserver(targetElement, freeze) {\r\n            if (targetElement !== undefined) {\r\n                if(freeze) {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].unobserve(element);\r\n                    }\r\n                    else {\r\n                        targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                        var w = targetElement.css(_strWidth);\r\n                        var h = targetElement.css(_strHeight);\r\n                        var css = {};\r\n                        css[_strWidth] = w;\r\n                        css[_strHeight] = h;\r\n                        targetElement.css(css);\r\n                    }\r\n                }\r\n                else {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].observe(element);\r\n                    }\r\n                    else {\r\n                        var css = { };\r\n                        css[_strHeight] = _strEmpty;\r\n                        css[_strWidth] = _strEmpty;\r\n                        targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        */\n        //==== Mutation Observers ====//\n\n        /**\r\n         * Creates MutationObservers for the host and content Element if they are supported.\r\n         */\n\n\n        function createMutationObservers() {\n          if (_supportMutationObserver) {\n            var mutationObserverContentLag = 11;\n            var mutationObserver = COMPATIBILITY.mO();\n            var contentLastUpdate = COMPATIBILITY.now();\n            var mutationTarget;\n            var mutationAttrName;\n            var mutationIsClass;\n            var oldMutationVal;\n            var newClassVal;\n            var hostClassNameRegex;\n            var contentTimeout;\n            var now;\n            var sizeAuto;\n            var action;\n\n            _mutationObserverHostCallback = function _mutationObserverHostCallback(mutations) {\n              var doUpdate = false;\n              var doUpdateForce = false;\n              var mutation;\n              var mutatedAttrs = [];\n\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  mutationTarget = mutation.target;\n                  mutationAttrName = mutation.attributeName;\n                  mutationIsClass = mutationAttrName === LEXICON.c;\n                  oldMutationVal = mutation.oldValue;\n                  newClassVal = mutationTarget.className;\n\n                  if (_domExists && mutationIsClass && !doUpdateForce) {\n                    // if old class value contains _classNameHostElementForeign and new class value doesn't\n                    if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\n                      hostClassNameRegex = createHostClassNameRegExp(true);\n                      _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\n                        return name.match(hostClassNameRegex);\n                      })).join(_strSpace);\n                      doUpdate = doUpdateForce = true;\n                    }\n                  }\n\n                  if (!doUpdate) {\n                    doUpdate = mutationIsClass ? hostClassNamesChanged(oldMutationVal, newClassVal) : mutationAttrName === LEXICON.s ? oldMutationVal !== mutationTarget[LEXICON.s].cssText : true;\n                  }\n\n                  mutatedAttrs.push(mutationAttrName);\n                });\n                updateViewportAttrsFromTarget(mutatedAttrs);\n                if (doUpdate) _base.update(doUpdateForce || _strAuto);\n              }\n\n              return doUpdate;\n            };\n\n            _mutationObserverContentCallback = function _mutationObserverContentCallback(mutations) {\n              var doUpdate = false;\n              var mutation;\n\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  doUpdate = isUnknownMutation(mutation);\n                  return !doUpdate;\n                });\n\n                if (doUpdate) {\n                  now = COMPATIBILITY.now();\n                  sizeAuto = _heightAutoCache || _widthAutoCache;\n\n                  action = function action() {\n                    if (!_destroyed) {\n                      contentLastUpdate = now; //if cols, rows or wrap attr was changed\n\n                      if (_isTextarea) textareaUpdate();\n                      if (sizeAuto) update();else _base.update(_strAuto);\n                    }\n                  };\n\n                  clearTimeout(contentTimeout);\n                  if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto) action();else contentTimeout = setTimeout(action, mutationObserverContentLag);\n                }\n              }\n\n              return doUpdate;\n            };\n\n            _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\n            _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\n          }\n        }\n        /**\r\n         * Connects the MutationObservers if they are supported.\r\n         */\n\n\n        function connectMutationObservers() {\n          if (_supportMutationObserver && !_mutationObserversConnected) {\n            _mutationObserverHost.observe(_hostElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              attributeFilter: _mutationObserverAttrsHost\n            });\n\n            _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              subtree: !_isTextarea,\n              childList: !_isTextarea,\n              characterData: !_isTextarea,\n              attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\n            });\n\n            _mutationObserversConnected = true;\n          }\n        }\n        /**\r\n         * Disconnects the MutationObservers if they are supported.\r\n         */\n\n\n        function disconnectMutationObservers() {\n          if (_supportMutationObserver && _mutationObserversConnected) {\n            _mutationObserverHost.disconnect();\n\n            _mutationObserverContent.disconnect();\n\n            _mutationObserversConnected = false;\n          }\n        } //==== Events of elements ====//\n\n        /**\r\n         * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n         * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n         * If there are any size changes, the update method gets called.\r\n         */\n\n\n        function hostOnResized() {\n          if (!_sleeping) {\n            var changed;\n            var hostSize = {\n              w: _sizeObserverElementNative[LEXICON.sW],\n              h: _sizeObserverElementNative[LEXICON.sH]\n            };\n            changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\n            _hostElementSizeChangeDetectedCache = hostSize;\n            if (changed) update({\n              _hostSizeChanged: true\n            });\n          }\n        }\n        /**\r\n         * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n\n        function hostOnMouseEnter() {\n          if (_scrollbarsAutoHideLeave) refreshScrollbarsAutoHide(true);\n        }\n        /**\r\n         * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n\n        function hostOnMouseLeave() {\n          if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging)) refreshScrollbarsAutoHide(false);\n        }\n        /**\r\n         * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n         */\n\n\n        function hostOnMouseMove() {\n          if (_scrollbarsAutoHideMove) {\n            refreshScrollbarsAutoHide(true);\n            clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\n            _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\n              if (_scrollbarsAutoHideMove && !_destroyed) refreshScrollbarsAutoHide(false);\n            }, 100);\n          }\n        }\n        /**\r\n         * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n         * @param event The select start event.\r\n         */\n\n\n        function documentOnSelectStart(event) {\n          COMPATIBILITY.prvD(event);\n          return false;\n        }\n        /**\t\r\n         * A callback which will be called after a element has loaded.\t\r\n         */\n\n\n        function updateOnLoadCallback(event) {\n          var elm = FRAMEWORK(event.target);\n          eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n            if (elm.is(updateOnLoadSelector)) {\n              update({\n                _contentSizeChanged: true\n              });\n            }\n          });\n        }\n        /**\r\n        * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n        * @param destroy Indicates whether the events shall be added or removed.\r\n        */\n\n\n        function setupHostMouseTouchEvents(destroy) {\n          if (!destroy) setupHostMouseTouchEvents(true);\n          setupResponsiveEventListener(_hostElement, _strMouseTouchMoveEvent.split(_strSpace)[0], hostOnMouseMove, !_scrollbarsAutoHideMove || destroy, true);\n          setupResponsiveEventListener(_hostElement, [_strMouseEnter, _strMouseLeave], [hostOnMouseEnter, hostOnMouseLeave], !_scrollbarsAutoHideLeave || destroy, true); //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\n\n          if (!_initialized && !destroy) _hostElement.one('mouseover', hostOnMouseEnter);\n        } //==== Update Detection ====//\n\n        /**\r\n         * Measures the min width and min height of the body element and refreshes the related cache.\r\n         * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n         */\n\n\n        function bodyMinSizeChanged() {\n          var bodyMinSize = {};\n\n          if (_isBody && _contentArrangeElement) {\n            bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\n            bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\n            bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\n            bodyMinSize.f = true; //flag for \"measured at least once\"\n          }\n\n          _bodyMinSizeCache = bodyMinSize;\n          return !!bodyMinSize.c;\n        }\n        /**\r\n         * Returns true if the class names really changed (new class without plugin host prefix)\r\n         * @param oldClassNames The old ClassName string or array.\r\n         * @param newClassNames The new ClassName string or array.\r\n         * @returns {boolean} True if the class names has really changed, false otherwise.\r\n         */\n\n\n        function hostClassNamesChanged(oldClassNames, newClassNames) {\n          var currClasses = _typeof(newClassNames) == TYPES.s ? newClassNames.split(_strSpace) : [];\n          var oldClasses = _typeof(oldClassNames) == TYPES.s ? oldClassNames.split(_strSpace) : [];\n          var diff = getArrayDifferences(oldClasses, currClasses); // remove none theme from diff list to prevent update\n\n          var idx = inArray(_classNameThemeNone, diff);\n          var i;\n          var regex;\n          if (idx > -1) diff.splice(idx, 1);\n\n          if (diff[LEXICON.l] > 0) {\n            regex = createHostClassNameRegExp(true, true);\n\n            for (i = 0; i < diff.length; i++) {\n              if (!diff[i].match(regex)) {\n                return true;\n              }\n            }\n          }\n\n          return false;\n        }\n        /**\r\n         * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n         * @param mutation The mutation which shall be checked.\r\n         * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n         */\n\n\n        function isUnknownMutation(mutation) {\n          var attributeName = mutation.attributeName;\n          var mutationTarget = mutation.target;\n          var mutationType = mutation.type;\n          var strClosest = 'closest';\n          if (mutationTarget === _contentElementNative) return attributeName === null;\n\n          if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\n            //ignore className changes by the plugin\t\n            if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement)) return hostClassNamesChanged(mutation.oldValue, mutationTarget.className); //only do it of browser support it natively\t\n\n            if (_typeof(mutationTarget[strClosest]) != TYPES.f) return true;\n            if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null) return false;\n          }\n\n          return true;\n        }\n        /**\r\n         * Returns true if the content size was changed since the last time this method was called.\r\n         * @returns {boolean} True if the content size was changed, false otherwise.\r\n         */\n\n\n        function updateAutoContentSizeChanged() {\n          if (_sleeping) return false;\n          var contentMeasureElement = getContentMeasureElement();\n          var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\n          var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\n          var css = {};\n          var float;\n          var bodyMinSizeC;\n          var changed;\n          var contentElementScrollSize;\n\n          if (setCSS) {\n            float = _contentElement.css(_strFloat);\n            css[_strFloat] = _isRTL ? _strRight : _strLeft;\n            css[_strWidth] = _strAuto;\n\n            _contentElement.css(css);\n          }\n\n          contentElementScrollSize = {\n            w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\n            h: contentMeasureElement[LEXICON.sH] + textareaValueLength\n          };\n\n          if (setCSS) {\n            css[_strFloat] = float;\n            css[_strWidth] = _strHundredPercent;\n\n            _contentElement.css(css);\n          }\n\n          bodyMinSizeC = bodyMinSizeChanged();\n          changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\n          _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\n          return changed || bodyMinSizeC;\n        }\n        /**\r\n         * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n         * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n         */\n\n\n        function meaningfulAttrsChanged() {\n          if (_sleeping || _mutationObserversConnected) return;\n          var elem;\n          var curr;\n          var cache;\n          var changedAttrs = [];\n          var checks = [{\n            _elem: _hostElement,\n            _attrs: _mutationObserverAttrsHost.concat(':visible')\n          }, {\n            _elem: _isTextarea ? _targetElement : undefined$1,\n            _attrs: _mutationObserverAttrsTextarea\n          }];\n          each(checks, function (index, check) {\n            elem = check._elem;\n\n            if (elem) {\n              each(check._attrs, function (index, attr) {\n                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\n                cache = _updateAutoCache[attr];\n\n                if (checkCache(curr, cache)) {\n                  changedAttrs.push(attr);\n                }\n\n                _updateAutoCache[attr] = curr;\n              });\n            }\n          });\n          updateViewportAttrsFromTarget(changedAttrs);\n          return changedAttrs[LEXICON.l] > 0;\n        }\n        /**\r\n         * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n         * @param propertyName The CSS property name.\r\n         * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n         */\n\n\n        function isSizeAffectingCSSProperty(propertyName) {\n          if (!_initialized) return true;\n          var flexGrow = 'flex-grow';\n          var flexShrink = 'flex-shrink';\n          var flexBasis = 'flex-basis';\n          var affectingPropsX = [_strWidth, _strMinMinus + _strWidth, _strMaxMinus + _strWidth, _strMarginMinus + _strLeft, _strMarginMinus + _strRight, _strLeft, _strRight, 'font-weight', 'word-spacing', flexGrow, flexShrink, flexBasis];\n          var affectingPropsXContentBox = [_strPaddingMinus + _strLeft, _strPaddingMinus + _strRight, _strBorderMinus + _strLeft + _strWidth, _strBorderMinus + _strRight + _strWidth];\n          var affectingPropsY = [_strHeight, _strMinMinus + _strHeight, _strMaxMinus + _strHeight, _strMarginMinus + _strTop, _strMarginMinus + _strBottom, _strTop, _strBottom, 'line-height', flexGrow, flexShrink, flexBasis];\n          var affectingPropsYContentBox = [_strPaddingMinus + _strTop, _strPaddingMinus + _strBottom, _strBorderMinus + _strTop + _strWidth, _strBorderMinus + _strBottom + _strWidth];\n          var _strS = 's';\n          var _strVS = 'v-s';\n          var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\n          var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\n          var sizeIsAffected = false;\n\n          var checkPropertyName = function checkPropertyName(arr, name) {\n            for (var i = 0; i < arr[LEXICON.l]; i++) {\n              if (arr[i] === name) return true;\n            }\n\n            return false;\n          };\n\n          if (checkY) {\n            sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\n          }\n\n          if (checkX && !sizeIsAffected) {\n            sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\n          }\n\n          return sizeIsAffected;\n        } //==== Update ====//\n\n        /**\r\n         * Sets the attribute values of the viewport element to the values from the target element.\r\n         * The value of a attribute is only set if the attribute is whitelisted.\r\n         * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n         */\n\n\n        function updateViewportAttrsFromTarget(attrs) {\n          attrs = attrs || _viewportAttrsFromTarget;\n          each(attrs, function (index, attr) {\n            if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\n              var targetAttr = _targetElement.attr(attr);\n\n              if (type(targetAttr) == TYPES.s) {\n                _viewportElement.attr(attr, targetAttr);\n              } else {\n                _viewportElement.removeAttr(attr);\n              }\n            }\n          });\n        }\n        /**\r\n         * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n         */\n\n\n        function textareaUpdate() {\n          if (!_sleeping) {\n            var wrapAttrOff = !_textareaAutoWrappingCache;\n            var minWidth = _viewportSize.w;\n            var minHeight = _viewportSize.h;\n            var css = {};\n            var doMeasure = _widthAutoCache || wrapAttrOff;\n            var origWidth;\n            var width;\n            var origHeight;\n            var height; //reset min size\n\n            css[_strMinMinus + _strWidth] = _strEmpty;\n            css[_strMinMinus + _strHeight] = _strEmpty; //set width auto\n\n            css[_strWidth] = _strAuto;\n\n            _targetElement.css(css); //measure width\n\n\n            origWidth = _targetElementNative[LEXICON.oW];\n            width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\n            /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\n            //set measured width\n\n            css[_strWidth] = _widthAutoCache ? _strAuto\n            /*width*/\n            : _strHundredPercent;\n            css[_strMinMinus + _strWidth] = _strHundredPercent; //set height auto\n\n            css[_strHeight] = _strAuto;\n\n            _targetElement.css(css); //measure height\n\n\n            origHeight = _targetElementNative[LEXICON.oH];\n            height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1); //append correct size values\n\n            css[_strWidth] = width;\n            css[_strHeight] = height;\n\n            _textareaCoverElement.css(css); //apply min width / min height to prevent textarea collapsing\n\n\n            css[_strMinMinus + _strWidth] = minWidth\n            /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/\n            ;\n            css[_strMinMinus + _strHeight] = minHeight\n            /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/\n            ;\n\n            _targetElement.css(css);\n\n            return {\n              _originalWidth: origWidth,\n              _originalHeight: origHeight,\n              _dynamicWidth: width,\n              _dynamicHeight: height\n            };\n          }\n        }\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param updateHints A objects which contains hints for this update:\r\n         * {\r\n         *   _hostSizeChanged : boolean,\r\n         *   _contentSizeChanged : boolean,\r\n         *   _force : boolean,                             == preventSwallowing\r\n         *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n        *  }\r\n         */\n\n\n        function update(updateHints) {\n          clearTimeout(_swallowedUpdateTimeout);\n          updateHints = updateHints || {};\n          _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\n          _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\n          _swallowedUpdateHints._force |= updateHints._force;\n          var now = COMPATIBILITY.now();\n          var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\n          var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\n          var force = !!_swallowedUpdateHints._force;\n          var changedOptions = updateHints._changedOptions;\n          var swallow = _initialized && !_destroyed && !force && !changedOptions && now - _lastUpdateTime < _swallowUpdateLag && !_heightAutoCache && !_widthAutoCache;\n          var displayIsHidden;\n          if (swallow) _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag); //abort update due to:\n          //destroyed\n          //swallowing\n          //sleeping\n          //host is hidden or has false display\n\n          if (_destroyed || swallow || _sleeping && !changedOptions || _initialized && !force && (displayIsHidden = _hostElement.is(':hidden')) || _hostElement.css('display') === 'inline') return;\n          _lastUpdateTime = now;\n          _swallowedUpdateHints = {}; //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\n\n          if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n            //native scrollbars are hidden, so change the values to zero\n            _nativeScrollbarSize.x = 0;\n            _nativeScrollbarSize.y = 0;\n          } else {\n            //refresh native scrollbar size (in case of zoom)\n            _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          } // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\n          // The calculation: [scrollbar size +3 *3]\n          // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\n          // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\n\n\n          _nativeScrollbarMinSize = {\n            x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\n            y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\n          };\n          changedOptions = changedOptions || {}; //freezeResizeObserver(_sizeObserverElement, true);\n          //freezeResizeObserver(_sizeAutoObserverElement, true);\n\n          var checkCacheAutoForce = function checkCacheAutoForce() {\n            return checkCache.apply(this, [].slice.call(arguments).concat([force]));\n          }; //save current scroll offset\n\n\n          var currScroll = {\n            x: _viewportElement[_strScrollLeft](),\n            y: _viewportElement[_strScrollTop]()\n          };\n          var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\n          var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea; //scrollbars visibility:\n\n          var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\n          var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache); //scrollbars autoHide:\n\n          var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\n          var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache); //scrollbars click scrolling\n\n          var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\n          var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache); //scrollbars drag scrolling\n\n          var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\n          var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache); //className\n\n          var className = _currentPreparedOptions.className;\n          var classNameChanged = checkCacheAutoForce(className, _classNameCache); //resize\n\n          var resize = _currentPreparedOptions.resize;\n          var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\n          //paddingAbsolute\n\n          var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\n          var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache); //clipAlways\n\n          var clipAlways = _currentPreparedOptions.clipAlways;\n          var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache); //sizeAutoCapable\n\n          var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\n\n          var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache); //showNativeScrollbars\n\n          var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\n          var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache); //autoUpdate\n\n          var autoUpdate = _currentPreparedOptions.autoUpdate;\n          var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache); //overflowBehavior\n\n          var overflowBehavior = _currentPreparedOptions.overflowBehavior;\n          var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force); //dynWidth:\n\n          var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\n          var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth); //dynHeight:\n\n          var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\n          var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight); //scrollbars visibility\n\n          _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\n          _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\n          _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\n          _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l'; //scrollbars autoHideDelay\n\n          _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay; //old className\n\n          _oldClassName = _classNameCache; //resize\n\n          _resizeNone = resize === 'n';\n          _resizeBoth = resize === 'b';\n          _resizeHorizontal = resize === 'h';\n          _resizeVertical = resize === 'v'; //normalizeRTL\n\n          _normalizeRTLCache = _currentPreparedOptions.normalizeRTL; //ignore overlay scrollbar hiding\n\n          ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y; //refresh options cache\n\n          _scrollbarsVisibilityCache = scrollbarsVisibility;\n          _scrollbarsAutoHideCache = scrollbarsAutoHide;\n          _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\n          _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\n          _classNameCache = className;\n          _resizeCache = resize;\n          _paddingAbsoluteCache = paddingAbsolute;\n          _clipAlwaysCache = clipAlways;\n          _sizeAutoCapableCache = sizeAutoCapable;\n          _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\n          _autoUpdateCache = autoUpdate;\n          _overflowBehaviorCache = extendDeep({}, overflowBehavior);\n          _textareaDynWidthCache = textareaDynWidth;\n          _textareaDynHeightCache = textareaDynHeight;\n          _hasOverflowCache = _hasOverflowCache || {\n            x: false,\n            y: false\n          }; //set correct class name to the host element\n\n          if (classNameChanged) {\n            removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\n            addClass(_hostElement, className !== undefined$1 && className !== null && className.length > 0 ? className : _classNameThemeNone);\n          } //set correct auto Update\n\n\n          if (autoUpdateChanged) {\n            if (autoUpdate === true || autoUpdate === null && _autoUpdateRecommended) {\n              disconnectMutationObservers();\n              autoUpdateLoop.add(_base);\n            } else {\n              autoUpdateLoop.remove(_base);\n              connectMutationObservers();\n            }\n          } //activate or deactivate size auto capability\n\n\n          if (sizeAutoCapableChanged) {\n            if (sizeAutoCapable) {\n              if (_contentGlueElement) {\n                _contentGlueElement.show();\n              } else {\n                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\n\n                _paddingElement.before(_contentGlueElement);\n              }\n\n              if (_sizeAutoObserverAdded) {\n                _sizeAutoObserverElement.show();\n              } else {\n                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\n                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\n\n                _contentGlueElement.before(_sizeAutoObserverElement);\n\n                var oldSize = {\n                  w: -1,\n                  h: -1\n                };\n                setupResizeObserver(_sizeAutoObserverElement, function () {\n                  var newSize = {\n                    w: _sizeAutoObserverElementNative[LEXICON.oW],\n                    h: _sizeAutoObserverElementNative[LEXICON.oH]\n                  };\n\n                  if (checkCache(newSize, oldSize)) {\n                    if (_initialized && _heightAutoCache && newSize.h > 0 || _widthAutoCache && newSize.w > 0) {\n                      update();\n                    } else if (_initialized && !_heightAutoCache && newSize.h === 0 || !_widthAutoCache && newSize.w === 0) {\n                      update();\n                    }\n                  }\n\n                  oldSize = newSize;\n                });\n                _sizeAutoObserverAdded = true; //fix heightAuto detector bug if height is fixed but contentHeight is 0.\n                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\n\n                if (_cssCalc !== null) _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\n              }\n            } else {\n              if (_sizeAutoObserverAdded) _sizeAutoObserverElement.hide();\n              if (_contentGlueElement) _contentGlueElement.hide();\n            }\n          } //if force, update all resizeObservers too\n\n\n          if (force) {\n            _sizeObserverElement.find('*').trigger(_strScroll);\n\n            if (_sizeAutoObserverAdded) _sizeAutoObserverElement.find('*').trigger(_strScroll);\n          } //display hidden:\n\n\n          displayIsHidden = displayIsHidden === undefined$1 ? _hostElement.is(':hidden') : displayIsHidden; //textarea AutoWrapping:\n\n          var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\n          var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache); //detect direction:\n\n          var cssDirection = _hostElement.css('direction');\n\n          var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache); //detect box-sizing:\n\n          var boxSizing = _hostElement.css('box-sizing');\n\n          var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache); //detect padding:\n\n          var padding = getTopRightBottomLeftHost(_strPaddingMinus); //width + height auto detecting var:\n\n          var sizeAutoObserverElementBCRect; //exception occurs in IE8 sometimes (unknown exception)\n\n          try {\n            sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\n          } catch (ex) {\n            return;\n          }\n\n          _isRTL = cssDirection === 'rtl';\n          _isBorderBox = boxSizing === 'border-box';\n          var isRTLLeft = _isRTL ? _strLeft : _strRight;\n          var isRTLRight = _isRTL ? _strRight : _strLeft; //detect width auto:\n\n          var widthAutoResizeDetection = false;\n          var widthAutoObserverDetection = _sizeAutoObserverAdded && _hostElement.css(_strFloat) !== 'none'\n          /*|| _isTextarea */\n          ? MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0 && (!paddingAbsolute ? _hostElementNative[LEXICON.cW] - _paddingX > 0 : true) : false;\n\n          if (sizeAutoCapable && !widthAutoObserverDetection) {\n            var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\n\n            var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\n\n            _contentGlueElement.css(_strWidth, _strAuto);\n\n            var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n\n            if (!widthAutoResizeDetection) {\n              _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\n\n              tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n              _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n              widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n            }\n          }\n\n          var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\n          var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\n          var wasWidthAuto = !widthAuto && _widthAutoCache; //detect height auto:\n\n          var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0\n          /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */\n          : false;\n          var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\n          var wasHeightAuto = !heightAuto && _heightAutoCache; //detect border:\n          //we need the border only if border box and auto size\n\n          var updateBorderX = widthAuto && _isBorderBox || !_isBorderBox;\n          var updateBorderY = heightAuto && _isBorderBox || !_isBorderBox;\n          var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY); //detect margin:\n\n          var margin = getTopRightBottomLeftHost(_strMarginMinus); //vars to apply correct css\n\n          var contentElementCSS = {};\n          var contentGlueElementCSS = {}; //funcs\n\n          var getHostSize = function getHostSize() {\n            //has to be clientSize because offsetSize respect borders\n            return {\n              w: _hostElementNative[LEXICON.cW],\n              h: _hostElementNative[LEXICON.cH]\n            };\n          };\n\n          var getViewportSize = function getViewportSize() {\n            //viewport size is padding container because it never has padding, margin and a border\n            //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\n            //if this happens add the difference to the viewportSize to compensate the rounding error\n            return {\n              w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\n              h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\n            };\n          }; //set info for padding\n\n\n          var paddingAbsoluteX = _paddingX = padding.l + padding.r;\n          var paddingAbsoluteY = _paddingY = padding.t + padding.b;\n          paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\n          paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\n          padding.c = checkCacheAutoForce(padding, _cssPaddingCache); //set info for border\n\n          _borderX = border.l + border.r;\n          _borderY = border.t + border.b;\n          border.c = checkCacheAutoForce(border, _cssBorderCache); //set info for margin\n\n          _marginX = margin.l + margin.r;\n          _marginY = margin.t + margin.b;\n          margin.c = checkCacheAutoForce(margin, _cssMarginCache); //refresh cache\n\n          _textareaAutoWrappingCache = textareaAutoWrapping;\n          _cssDirectionCache = cssDirection;\n          _cssBoxSizingCache = boxSizing;\n          _widthAutoCache = widthAuto;\n          _heightAutoCache = heightAuto;\n          _cssPaddingCache = padding;\n          _cssBorderCache = border;\n          _cssMarginCache = margin; //IEFix direction changed\n\n          if (cssDirectionChanged && _sizeAutoObserverAdded) _sizeAutoObserverElement.css(_strFloat, isRTLRight); //apply padding:\n\n          if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\n            var paddingElementCSS = {};\n            var textareaCSS = {};\n            var paddingValues = [padding.t, padding.r, padding.b, padding.l];\n            setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\n\n            if (paddingAbsolute) {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\n            } else {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\n            }\n\n            _paddingElement.css(paddingElementCSS);\n\n            _targetElement.css(textareaCSS);\n          } //viewport size is padding container because it never has padding, margin and a border.\n\n\n          _viewportSize = getViewportSize(); //update Textarea\n\n          var textareaSize = _isTextarea ? textareaUpdate() : false;\n\n          var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\n\n          var textareaDynOrigSize = _isTextarea && textareaSize ? {\n            w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\n            h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\n          } : {};\n          _textareaSizeCache = textareaSize; //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\n\n          if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\n            contentElementCSS[_strHeight] = _strAuto;\n          } else if (heightAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strHeight] = _strHundredPercent;\n          }\n\n          if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\n            contentElementCSS[_strWidth] = _strAuto;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\n          } else if (widthAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strWidth] = _strHundredPercent;\n            contentElementCSS[_strFloat] = _strEmpty;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\n          }\n\n          if (widthAuto) {\n            //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\n            contentGlueElementCSS[_strWidth] = _strAuto;\n            contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\n            contentElementCSS[_strFloat] = isRTLRight;\n          } else {\n            contentGlueElementCSS[_strWidth] = _strEmpty;\n          }\n\n          if (heightAuto) {\n            //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\n            contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\n          } else {\n            contentGlueElementCSS[_strHeight] = _strEmpty;\n          }\n\n          if (sizeAutoCapable) _contentGlueElement.css(contentGlueElementCSS);\n\n          _contentElement.css(contentElementCSS); //CHECKPOINT HERE ~\n\n\n          contentElementCSS = {};\n          contentGlueElementCSS = {}; //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\n\n          if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\n            var strOverflow = 'overflow';\n            var strOverflowX = strOverflow + '-x';\n            var strOverflowY = strOverflow + '-y';\n            var strHidden = 'hidden';\n            var strVisible = 'visible'; //Reset the viewport (very important for natively overlaid scrollbars and zoom change\n            //don't change the overflow prop as it is very expensive and affects performance !A LOT!\n\n            if (!_nativeScrollbarStyling) {\n              var viewportElementResetCSS = {};\n              var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y : 0;\n              var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x : 0;\n              setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\n\n              _viewportElement.css(viewportElementResetCSS);\n            } //measure several sizes:\n\n\n            var contentMeasureElement = getContentMeasureElement(); //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\n\n            var contentSize = {\n              //use clientSize because natively overlaidScrollbars add borders\n              w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\n              h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\n            };\n            var scrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            }; //apply the correct viewport style and measure viewport size\n\n            if (!_nativeScrollbarStyling) {\n              viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\n              viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\n\n              _viewportElement.css(viewportElementResetCSS);\n            }\n\n            _viewportSize = getViewportSize(); //measure and correct several sizes\n\n            var hostSize = getHostSize();\n            var hostAbsoluteRectSize = {\n              w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\n              h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\n            };\n            var contentGlueSize = {\n              //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\n              //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\n              w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\n              h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\n            };\n            contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\n            _contentGlueSizeCache = contentGlueSize; //apply correct contentGlue size\n\n            if (sizeAutoCapable) {\n              //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\n              if (contentGlueSize.c || heightAuto || widthAuto) {\n                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\n                contentGlueElementCSS[_strHeight] = contentGlueSize.h; //textarea-sizes are already calculated correctly at this point\n\n                if (!_isTextarea) {\n                  contentSize = {\n                    //use clientSize because natively overlaidScrollbars add borders\n                    w: contentMeasureElement[LEXICON.cW],\n                    h: contentMeasureElement[LEXICON.cH]\n                  };\n                }\n              }\n\n              var textareaCoverCSS = {};\n\n              var setContentGlueElementCSSfunction = function setContentGlueElementCSSfunction(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var wh = scrollbarVars._w_h;\n                var strWH = scrollbarVars._width_height;\n                var autoSize = horizontal ? widthAuto : heightAuto;\n                var borderSize = horizontal ? _borderX : _borderY;\n                var paddingSize = horizontal ? _paddingX : _paddingY;\n                var marginSize = horizontal ? _marginX : _marginY;\n                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize); //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\n\n                if (!autoSize || !autoSize && border.c) contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1; //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\n\n                if (autoSize && contentSize[wh] < viewportSize && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\n                  if (_isTextarea) textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\n                  contentGlueElementCSS[strWH] -= 1;\n                } //make sure content glue size is at least 1\n\n\n                if (contentSize[wh] > 0) contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\n              };\n\n              setContentGlueElementCSSfunction(true);\n              setContentGlueElementCSSfunction(false);\n              if (_isTextarea) _textareaCoverElement.css(textareaCoverCSS);\n\n              _contentGlueElement.css(contentGlueElementCSS);\n            }\n\n            if (widthAuto) contentElementCSS[_strWidth] = _strHundredPercent;\n            if (widthAuto && !_isBorderBox && !_mutationObserversConnected) contentElementCSS[_strFloat] = 'none'; //apply and reset content style\n\n            _contentElement.css(contentElementCSS);\n\n            contentElementCSS = {}; //measure again, but this time all correct sizes:\n\n            var contentScrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            };\n            contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\n            _contentScrollSizeCache = contentScrollSize; //refresh viewport size after correct measuring\n\n            _viewportSize = getViewportSize();\n            hostSize = getHostSize();\n            hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\n            _hostSizeCache = hostSize;\n            var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\n            var previousOverflowAmount = _overflowAmountCache;\n            var overflowBehaviorIsVS = {};\n            var overflowBehaviorIsVH = {};\n            var overflowBehaviorIsS = {};\n            var overflowAmount = {};\n            var hasOverflow = {};\n            var hideOverflow = {};\n            var canScroll = {};\n\n            var viewportRect = _paddingElementNative[LEXICON.bCR]();\n\n            var setOverflowVariables = function setOverflowVariables(horizontal) {\n              var scrollbarVars = getScrollbarVars(horizontal);\n              var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n              var xyI = scrollbarVarsInverted._x_y;\n              var xy = scrollbarVars._x_y;\n              var wh = scrollbarVars._w_h;\n              var widthHeight = scrollbarVars._width_height;\n              var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\n              var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\n              var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\n              overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\n              overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\n              overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\n              overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\n              overflowAmount[xy] *= hideOverflowForceTextarea || checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1 ? 0 : 1;\n              hasOverflow[xy] = overflowAmount[xy] > 0; //hideOverflow:\n              //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\n              //xs || ys : true === overflow is hidden by \"overflow: scroll\"\n\n              hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI] : hasOverflow[xy];\n              hideOverflow[xy + 's'] = hideOverflow[xy] ? overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy] : false;\n              canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\n            };\n\n            setOverflowVariables(true);\n            setOverflowVariables(false);\n            overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\n            _overflowAmountCache = overflowAmount;\n            hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\n            _hasOverflowCache = hasOverflow;\n            hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\n            _hideOverflowCache = hideOverflow; //if native scrollbar is overlay at x OR y axis, prepare DOM\n\n            if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\n              var borderDesign = 'px solid transparent';\n              var contentArrangeElementCSS = {};\n              var arrangeContent = {};\n              var arrangeChanged = force;\n              var setContentElementCSS;\n\n              if (hasOverflow.x || hasOverflow.y) {\n                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\n                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\n                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\n                _arrangeContentSizeCache = arrangeContent;\n              }\n\n              if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\n                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\n\n                setContentElementCSS = function setContentElementCSS(horizontal) {\n                  var scrollbarVars = getScrollbarVars(horizontal);\n                  var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                  var xy = scrollbarVars._x_y;\n                  var strDirection = horizontal ? _strBottom : isRTLLeft;\n                  var invertedAutoSize = horizontal ? heightAuto : widthAuto;\n\n                  if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\n                    contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy] : _strEmpty;\n                    contentElementCSS[_strBorderMinus + strDirection] = (horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding ? _overlayScrollbarDummySize[xy] + borderDesign : _strEmpty;\n                  } else {\n                    arrangeContent[scrollbarVarsInverted._w_h] = contentElementCSS[_strMarginMinus + strDirection] = contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\n                    arrangeChanged = true;\n                  }\n                };\n\n                if (_nativeScrollbarStyling) {\n                  addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding);\n                } else {\n                  setContentElementCSS(true);\n                  setContentElementCSS(false);\n                }\n              }\n\n              if (ignoreOverlayScrollbarHiding) {\n                arrangeContent.w = arrangeContent.h = _strEmpty;\n                arrangeChanged = true;\n              }\n\n              if (arrangeChanged && !_nativeScrollbarStyling) {\n                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\n                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\n\n                if (!_contentArrangeElement) {\n                  _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\n\n                  _viewportElement.prepend(_contentArrangeElement);\n                }\n\n                _contentArrangeElement.css(contentArrangeElementCSS);\n              }\n\n              _contentElement.css(contentElementCSS);\n            }\n\n            var viewportElementCSS = {};\n            var paddingElementCSS = {};\n            var setViewportCSS;\n\n            if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\n              viewportElementCSS[isRTLRight] = _strEmpty;\n\n              setViewportCSS = function setViewportCSS(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                var xy = scrollbarVars._x_y;\n                var XY = scrollbarVars._X_Y;\n                var strDirection = horizontal ? _strBottom : isRTLLeft;\n\n                var reset = function reset() {\n                  viewportElementCSS[strDirection] = _strEmpty;\n                  _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\n                };\n\n                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\n                  viewportElementCSS[strOverflow + XY] = _strScroll;\n\n                  if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\n                    reset();\n                  } else {\n                    viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\n                    _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\n                  }\n                } else {\n                  viewportElementCSS[strOverflow + XY] = _strEmpty;\n                  reset();\n                }\n              };\n\n              setViewportCSS(true);\n              setViewportCSS(false); // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \n              // make viewport element greater in size (Firefox hide Scrollbars fix)\n              // because firefox starts hiding scrollbars on too small elements\n              // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\n              // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\n\n              if (!_nativeScrollbarStyling && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y) && (hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x || hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y)) {\n                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\n                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\n                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\n                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\n              } else {\n                viewportElementCSS[_strPaddingMinus + _strTop] = viewportElementCSS[_strMarginMinus + _strTop] = viewportElementCSS[_strPaddingMinus + isRTLRight] = viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\n              }\n\n              viewportElementCSS[_strPaddingMinus + isRTLLeft] = viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty; //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\n\n              if (hasOverflow.x && hideOverflow.x || hasOverflow.y && hideOverflow.y || hideOverflowForceTextarea) {\n                //only hide if is Textarea\n                if (_isTextarea && hideOverflowForceTextarea) {\n                  paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = strHidden;\n                }\n              } else {\n                if (!clipAlways || overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y) {\n                  //only un-hide if Textarea\n                  if (_isTextarea) {\n                    paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = _strEmpty;\n                  }\n\n                  viewportElementCSS[strOverflowX] = viewportElementCSS[strOverflowY] = strVisible;\n                }\n              }\n\n              _paddingElement.css(paddingElementCSS);\n\n              _viewportElement.css(viewportElementCSS);\n\n              viewportElementCSS = {}; //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\n\n              if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n                var elementStyle = _contentElementNative[LEXICON.s];\n                elementStyle.webkitTransform = 'scale(1)';\n                elementStyle.display = 'run-in';\n                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\n\n                elementStyle.webkitTransform = _strEmpty;\n              }\n              /*\r\n              //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n              if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                  _hostElement.hide();\r\n                  var dump = _hostElementNative[LEXICON.oH];\r\n                  _hostElement.show();\r\n              }\r\n              */\n\n            } //change to direction RTL and width auto Bugfix in Webkit\n            //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\n\n\n            contentElementCSS = {};\n\n            if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\n              if (_isRTL && widthAuto) {\n                var floatTmp = _contentElement.css(_strFloat);\n\n                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\n\n                _contentElement.css(_strFloat, floatTmp);\n\n                var posLeftWithFloat = MATH.round(_contentElement.position().left);\n                if (posLeftWithoutFloat !== posLeftWithFloat) contentElementCSS[_strLeft] = posLeftWithoutFloat;\n              } else {\n                contentElementCSS[_strLeft] = _strEmpty;\n              }\n            }\n\n            _contentElement.css(contentElementCSS); //handle scroll position\n\n\n            if (_isTextarea && contentSizeChanged) {\n              var textareaInfo = getTextareaInfo();\n\n              if (textareaInfo) {\n                var textareaRowsChanged = _textareaInfoCache === undefined$1 ? true : textareaInfo._rows !== _textareaInfoCache._rows;\n                var cursorRow = textareaInfo._cursorRow;\n                var cursorCol = textareaInfo._cursorColumn;\n                var widestRow = textareaInfo._widestRow;\n                var lastRow = textareaInfo._rows;\n                var lastCol = textareaInfo._columns;\n                var cursorPos = textareaInfo._cursorPosition;\n                var cursorMax = textareaInfo._cursorMax;\n                var cursorIsLastPosition = cursorPos >= cursorMax && _textareaHasFocus;\n                var textareaScrollAmount = {\n                  x: !textareaAutoWrapping && cursorCol === lastCol && cursorRow === widestRow ? _overflowAmountCache.x : -1,\n                  y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? currScroll.y === previousOverflowAmount.y : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\n                };\n                currScroll.x = textareaScrollAmount.x > -1 ? _isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\n\n                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\n              }\n\n              _textareaInfoCache = textareaInfo;\n            }\n\n            if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache) currScroll.x += _contentBorderSize.w || 0;\n            if (widthAuto) _hostElement[_strScrollLeft](0);\n            if (heightAuto) _hostElement[_strScrollTop](0);\n\n            _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y); //scrollbars management:\n\n\n            var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\n            var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\n            var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\n\n            var refreshScrollbarsVisibility = function refreshScrollbarsVisibility(showX, showY) {\n              showY = showY === undefined$1 ? showX : showY;\n              refreshScrollbarAppearance(true, showX, canScroll.x);\n              refreshScrollbarAppearance(false, showY, canScroll.y);\n            }; //manage class name which indicates scrollable overflow\n\n\n            addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\n            addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\n            addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y); //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\n\n            if (cssDirectionChanged && !_isBody) {\n              addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\n            } //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\n\n\n            if (_isBody) addClass(_hostElement, _classNameHostResizeDisabled);\n\n            if (resizeChanged) {\n              addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\n            } //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\n\n\n            if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\n              if (ignoreOverlayScrollbarHiding) {\n                if (ignoreOverlayScrollbarHidingChanged) {\n                  removeClass(_hostElement, _classNameHostScrolling);\n\n                  if (ignoreOverlayScrollbarHiding) {\n                    refreshScrollbarsVisibility(false);\n                  }\n                }\n              } else if (scrollbarsVisibilityAuto) {\n                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\n              } else if (scrollbarsVisibilityVisible) {\n                refreshScrollbarsVisibility(true);\n              } else if (scrollbarsVisibilityHidden) {\n                refreshScrollbarsVisibility(false);\n              }\n            } //manage the scrollbars auto hide feature (auto hide them after specific actions)\n\n\n            if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\n              setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\n              refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\n            } //manage scrollbars handle length & offset - don't remove!\n\n\n            if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\n              refreshScrollbarHandleLength(true);\n              refreshScrollbarHandleOffset(true);\n              refreshScrollbarHandleLength(false);\n              refreshScrollbarHandleOffset(false);\n            } //manage interactivity\n\n\n            if (scrollbarsClickScrollingChanged) refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\n            if (scrollbarsDragScrollingChanged) refreshScrollbarsInteractive(false, scrollbarsDragScrolling); //callbacks:\n\n            dispatchCallback('onDirectionChanged', {\n              isRTL: _isRTL,\n              dir: cssDirection\n            }, cssDirectionChanged);\n            dispatchCallback('onHostSizeChanged', {\n              width: _hostSizeCache.w,\n              height: _hostSizeCache.h\n            }, hostSizeChanged);\n            dispatchCallback('onContentSizeChanged', {\n              width: _contentScrollSizeCache.w,\n              height: _contentScrollSizeCache.h\n            }, contentSizeChanged);\n            dispatchCallback('onOverflowChanged', {\n              x: hasOverflow.x,\n              y: hasOverflow.y,\n              xScrollable: hideOverflow.xs,\n              yScrollable: hideOverflow.ys,\n              clipped: hideOverflow.x || hideOverflow.y\n            }, hasOverflow.c || hideOverflow.c);\n            dispatchCallback('onOverflowAmountChanged', {\n              x: overflowAmount.x,\n              y: overflowAmount.y\n            }, overflowAmount.c);\n          } //fix body min size\n\n\n          if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\n            //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\n            if (!_bodyMinSizeCache.f) bodyMinSizeChanged();\n            if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x) _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\n            if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y) _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\n            _bodyMinSizeCache.c = false;\n          }\n\n          if (_initialized && changedOptions.updateOnLoad) {\n            updateElementsOnLoad();\n          } //freezeResizeObserver(_sizeObserverElement, false);\n          //freezeResizeObserver(_sizeAutoObserverElement, false);\n\n\n          dispatchCallback('onUpdated', {\n            forced: force\n          });\n        }\n        /**\r\n         * Updates the found elements of which the load event shall be handled.\r\n         */\n\n\n        function updateElementsOnLoad() {\n          if (!_isTextarea) {\n            eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n              _contentElement.find(updateOnLoadSelector).each(function (i, el) {\n                // if element doesn't have a updateOnLoadCallback applied\n                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\n                  _updateOnLoadElms.push(el);\n\n                  FRAMEWORK(el).off(_updateOnLoadEventName, updateOnLoadCallback).on(_updateOnLoadEventName, updateOnLoadCallback);\n                }\n              });\n            });\n          }\n        } //==== Options ====//\n\n        /**\r\n         * Sets new options but doesn't call the update method.\r\n         * @param newOptions The object which contains the new options.\r\n         * @returns {*} A object which contains the changed options.\r\n         */\n\n\n        function setOptions(newOptions) {\n          var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions);\n\n          _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\n          _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\n          return validatedOpts._prepared;\n        } //==== Structure ====//\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupStructureDOM(destroy) {\n          var strParent = 'parent';\n          var classNameResizeObserverHost = 'os-resize-observer-host';\n          var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\n          var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\n          var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\n          var adoptAttrsMap = {};\n\n          var applyAdoptedAttrs = function applyAdoptedAttrs() {\n            var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\n            each(adoptAttrsMap, function (key, value) {\n              if (type(value) == TYPES.s) {\n                if (key == LEXICON.c) applyAdoptedAttrsElm.addClass(value);else applyAdoptedAttrsElm.attr(key, value);\n              }\n            });\n          };\n\n          var hostElementClassNames = [_classNameHostElement, _classNameHostElementForeign, _classNameHostTextareaElement, _classNameHostResizeDisabled, _classNameHostRTL, _classNameHostScrollbarHorizontalHidden, _classNameHostScrollbarVerticalHidden, _classNameHostTransition, _classNameHostScrolling, _classNameHostOverflow, _classNameHostOverflowX, _classNameHostOverflowY, _classNameThemeNone, _classNameTextareaElement, _classNameTextInherit, _classNameCache].join(_strSpace);\n          var hostElementCSS = {}; //get host element as first element, because that's the most upper element and required for the other elements\n\n          _hostElement = _hostElement || (_isTextarea ? _domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement)) : _targetElement);\n          _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\n          _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\n          _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\n          _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\n          _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined$1); //add this class to workaround class changing issues with UI frameworks especially Vue\n\n          if (_domExists) addClass(_hostElement, _classNameHostElementForeign); //on destroy, remove all generated class names from the host element before collecting the adopted attributes \n          //to prevent adopting generated class names\n\n          if (destroy) removeClass(_hostElement, hostElementClassNames); //collect all adopted attributes\n\n          adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\n\n          if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\n            each(adoptAttrs, function (i, v) {\n              if (type(v) == TYPES.s) {\n                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\n              }\n            });\n          }\n\n          if (!destroy) {\n            if (_isTextarea) {\n              if (!_currentPreparedOptions.sizeAutoCapable) {\n                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\n                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\n              }\n\n              if (!_domExists) _targetElement.addClass(_classNameTextInherit).wrap(_hostElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n              _hostElement = _targetElement[strParent]().css(hostElementCSS);\n            }\n\n            if (!_domExists) {\n              //add the correct class to the target element\n              addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement); //wrap the content into the generated elements to create the required DOM\n\n              _hostElement.wrapInner(_contentElement).wrapInner(_viewportElement).wrapInner(_paddingElement).prepend(_sizeObserverElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n\n              _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\n              _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\n              _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\n\n              if (_isTextarea) {\n                _contentElement.prepend(_textareaCoverElement);\n\n                applyAdoptedAttrs();\n              }\n            }\n\n            if (_nativeScrollbarStyling) addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\n            if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y) addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\n            if (_isBody) addClass(_htmlElement, _classNameHTMLElement);\n            _sizeObserverElementNative = _sizeObserverElement[0];\n            _hostElementNative = _hostElement[0];\n            _paddingElementNative = _paddingElement[0];\n            _viewportElementNative = _viewportElement[0];\n            _contentElementNative = _contentElement[0];\n            updateViewportAttrsFromTarget();\n          } else {\n            if (_domExists && _initialized) {\n              //clear size observer\n              _sizeObserverElement.children().remove(); //remove the style property and classes from already generated elements\n\n\n              each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\n                if (elm) {\n                  removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n                }\n              }); //add classes to the host element which was removed previously to match the expected DOM\n\n              addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\n            } else {\n              //remove size observer\n              remove(_sizeObserverElement); //unwrap the content to restore DOM\n\n              _contentElement.contents().unwrap().unwrap().unwrap();\n\n              if (_isTextarea) {\n                _targetElement.unwrap();\n\n                remove(_hostElement);\n                remove(_textareaCoverElement);\n                applyAdoptedAttrs();\n              }\n            }\n\n            if (_isTextarea) _targetElement.removeAttr(LEXICON.s);\n            if (_isBody) removeClass(_htmlElement, _classNameHTMLElement);\n          }\n        }\n        /**\r\n         * Adds or removes all wrapper elements interactivity events.\r\n         * @param destroy Indicates whether the Events shall be added or removed.\r\n         */\n\n\n        function setupStructureEvents() {\n          var textareaKeyDownRestrictedKeyCodes = [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, //F1 to F12\n          33, 34, //page up, page down\n          37, 38, 39, 40, //left, up, right, down arrows\n          16, 17, 18, 19, 20, 144 //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\n          ];\n          var textareaKeyDownKeyCodesList = [];\n          var textareaUpdateIntervalID;\n          var scrollStopTimeoutId;\n          var scrollStopDelay = 175;\n          var strFocus = 'focus';\n\n          function updateTextarea(doClearInterval) {\n            textareaUpdate();\n\n            _base.update(_strAuto);\n\n            if (doClearInterval && _autoUpdateRecommended) clearInterval(textareaUpdateIntervalID);\n          }\n\n          function textareaOnScroll(event) {\n            _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\n\n            _targetElement[_strScrollTop](0);\n\n            COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n            return false;\n          }\n\n          function textareaOnDrop(event) {\n            setTimeout(function () {\n              if (!_destroyed) updateTextarea();\n            }, 50);\n          }\n\n          function textareaOnFocus() {\n            _textareaHasFocus = true;\n            addClass(_hostElement, strFocus);\n          }\n\n          function textareaOnFocusout() {\n            _textareaHasFocus = false;\n            textareaKeyDownKeyCodesList = [];\n            removeClass(_hostElement, strFocus);\n            updateTextarea(true);\n          }\n\n          function textareaOnKeyDown(event) {\n            var keyCode = event.keyCode;\n\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\n                updateTextarea();\n                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\n              }\n\n              if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0) textareaKeyDownKeyCodesList.push(keyCode);\n            }\n          }\n\n          function textareaOnKeyUp(event) {\n            var keyCode = event.keyCode;\n            var index = inArray(keyCode, textareaKeyDownKeyCodesList);\n\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (index > -1) textareaKeyDownKeyCodesList.splice(index, 1);\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) updateTextarea(true);\n            }\n          }\n\n          function contentOnTransitionEnd(event) {\n            if (_autoUpdateCache === true) return;\n            event = event.originalEvent || event;\n            if (isSizeAffectingCSSProperty(event.propertyName)) _base.update(_strAuto);\n          }\n\n          function viewportOnScroll(event) {\n            if (!_sleeping) {\n              if (scrollStopTimeoutId !== undefined$1) clearTimeout(scrollStopTimeoutId);else {\n                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n                if (!nativeOverlayScrollbarsAreActive()) addClass(_hostElement, _classNameHostScrolling);\n                dispatchCallback('onScrollStart', event);\n              } //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\n              //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\n              //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\n\n              if (!_scrollbarsHandlesDefineScrollPos) {\n                refreshScrollbarHandleOffset(true);\n                refreshScrollbarHandleOffset(false);\n              }\n\n              dispatchCallback('onScroll', event);\n              scrollStopTimeoutId = setTimeout(function () {\n                if (!_destroyed) {\n                  //OnScrollStop:\n                  clearTimeout(scrollStopTimeoutId);\n                  scrollStopTimeoutId = undefined$1;\n                  if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n                  if (!nativeOverlayScrollbarsAreActive()) removeClass(_hostElement, _classNameHostScrolling);\n                  dispatchCallback('onScrollStop', event);\n                }\n              }, scrollStopDelay);\n            }\n          }\n\n          if (_isTextarea) {\n            if (_msieVersion > 9 || !_autoUpdateRecommended) {\n              addDestroyEventListener(_targetElement, 'input', updateTextarea);\n            } else {\n              addDestroyEventListener(_targetElement, [_strKeyDownEvent, _strKeyUpEvent], [textareaOnKeyDown, textareaOnKeyUp]);\n            }\n\n            addDestroyEventListener(_targetElement, [_strScroll, 'drop', strFocus, strFocus + 'out'], [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\n          } else {\n            addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\n          }\n\n          addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\n        } //==== Scrollbars ====//\n\n        /**\r\n         * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupScrollbarsDOM(destroy) {\n          var selectOrGenerateScrollbarDOM = function selectOrGenerateScrollbarDOM(isHorizontal) {\n            var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\n            var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\n            var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\n            var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\n\n            if (!_domExists && !destroy) {\n              scrollbar.append(track);\n              track.append(handle);\n            }\n\n            return {\n              _scrollbar: scrollbar,\n              _track: track,\n              _handle: handle\n            };\n          };\n\n          function resetScrollbarDOM(isHorizontal) {\n            var scrollbarVars = getScrollbarVars(isHorizontal);\n            var scrollbar = scrollbarVars._scrollbar;\n            var track = scrollbarVars._track;\n            var handle = scrollbarVars._handle;\n\n            if (_domExists && _initialized) {\n              each([scrollbar, track, handle], function (i, elm) {\n                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n              });\n            } else {\n              remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\n            }\n          }\n\n          var horizontalElements;\n          var verticalElements;\n\n          if (!destroy) {\n            horizontalElements = selectOrGenerateScrollbarDOM(true);\n            verticalElements = selectOrGenerateScrollbarDOM();\n            _scrollbarHorizontalElement = horizontalElements._scrollbar;\n            _scrollbarHorizontalTrackElement = horizontalElements._track;\n            _scrollbarHorizontalHandleElement = horizontalElements._handle;\n            _scrollbarVerticalElement = verticalElements._scrollbar;\n            _scrollbarVerticalTrackElement = verticalElements._track;\n            _scrollbarVerticalHandleElement = verticalElements._handle;\n\n            if (!_domExists) {\n              _paddingElement.after(_scrollbarVerticalElement);\n\n              _paddingElement.after(_scrollbarHorizontalElement);\n            }\n          } else {\n            resetScrollbarDOM(true);\n            resetScrollbarDOM();\n          }\n        }\n        /**\r\n         * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n         * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n         */\n\n\n        function setupScrollbarEvents(isHorizontal) {\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var xy = scrollbarVars._x_y;\n          var XY = scrollbarVars._X_Y;\n          var scroll = _strScroll + scrollbarVars._Left_Top;\n          var strActive = 'active';\n          var strSnapHandle = 'snapHandle';\n          var strClickEvent = 'click';\n          var scrollDurationFactor = 1;\n          var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\n\n          var trackTimeout;\n          var mouseDownScroll;\n          var mouseDownOffset;\n          var mouseDownInvertedScale;\n\n          function getPointerPosition(event) {\n            return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\n          }\n\n          function getPreparedScrollbarsOption(name) {\n            return _currentPreparedOptions.scrollbars[name];\n          }\n\n          function increaseTrackScrollAmount() {\n            scrollDurationFactor = 0.5;\n          }\n\n          function decreaseTrackScrollAmount() {\n            scrollDurationFactor = 1;\n          }\n\n          function stopClickEventPropagation(event) {\n            COMPATIBILITY.stpP(event);\n          }\n\n          function documentKeyDown(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) increaseTrackScrollAmount();\n          }\n\n          function documentKeyUp(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) decreaseTrackScrollAmount();\n          }\n\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || isTouchEvent && !getPreparedScrollbarsOption('touchSupport') ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var trackLength = scrollbarVarsInfo._trackLength;\n              var handleLength = scrollbarVarsInfo._handleLength;\n              var scrollRange = scrollbarVarsInfo._maxScroll;\n              var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\n              var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\n              var scrollDelta = scrollRange * scrollDeltaPercent;\n              scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\n              if (_isRTL && isHorizontal && !_rtlScrollBehavior.i) scrollDelta *= -1;\n\n              _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\n\n              if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\n              if (!_supportPassiveEvents) COMPATIBILITY.prvD(event);\n            } else documentMouseTouchUp(event);\n          }\n\n          function documentMouseTouchUp(event) {\n            event = event || event.originalEvent;\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart], true);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, {\n                _capture: true\n              });\n            });\n            if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, true);\n            _scrollbarsHandlesDefineScrollPos = false;\n            removeClass(_bodyElement, _classNameDragging);\n            removeClass(scrollbarVars._handle, strActive);\n            removeClass(scrollbarVars._track, strActive);\n            removeClass(scrollbarVars._scrollbar, strActive);\n            mouseDownScroll = undefined$1;\n            mouseDownOffset = undefined$1;\n            mouseDownInvertedScale = 1;\n            decreaseTrackScrollAmount();\n\n            if (trackTimeout !== undefined$1) {\n              _base.scrollStop();\n\n              clearTimeout(trackTimeout);\n              trackTimeout = undefined$1;\n            }\n\n            if (event) {\n              var rect = _hostElementNative[LEXICON.bCR]();\n\n              var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom; //if mouse is outside host element\n\n              if (!mouseInsideHost) hostOnMouseLeave();\n              if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n            }\n          }\n\n          function onHandleMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) onHandleMouseTouchDownAction(event);\n          }\n\n          function onHandleMouseTouchDownAction(event) {\n            mouseDownScroll = _viewportElement[scroll]();\n            mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\n            if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL) mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\n            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n            mouseDownOffset = getPointerPosition(event);\n            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n            addClass(_bodyElement, _classNameDragging);\n            addClass(scrollbarVars._handle, strActive);\n            addClass(scrollbarVars._scrollbar, strActive);\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, {\n                _capture: true\n              });\n            });\n            if (_msieVersion || !_documentMixed) COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n          }\n\n          function onTrackMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\n              var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\n              var scrollBaseDuration = 270 * handleToViewportRatio;\n              var scrollFirstIterationDelay = 400 * handleToViewportRatio;\n\n              var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\n\n              var ctrlKey = event.ctrlKey;\n              var instantScroll = event.shiftKey;\n              var instantScrollTransition = instantScroll && ctrlKey;\n              var isFirstIteration = true;\n              var easing = 'linear';\n              var decreaseScroll;\n              var finishedCondition;\n\n              var scrollActionFinsished = function scrollActionFinsished(transition) {\n                if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, transition);\n              };\n\n              var scrollActionInstantFinished = function scrollActionInstantFinished() {\n                scrollActionFinsished();\n                onHandleMouseTouchDownAction(event);\n              };\n\n              var scrollAction = function scrollAction() {\n                if (!_destroyed) {\n                  var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\n                  var handleOffset = scrollbarVarsInfo._handleOffset;\n                  var trackLength = scrollbarVarsInfo._trackLength;\n                  var handleLength = scrollbarVarsInfo._handleLength;\n                  var scrollRange = scrollbarVarsInfo._maxScroll;\n                  var currScroll = scrollbarVarsInfo._currentScroll;\n                  var scrollDuration = scrollBaseDuration * scrollDurationFactor;\n                  var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\n                  var instantScrollPosition = scrollRange * ((mouseOffset - handleLength / 2) / (trackLength - handleLength)); // 100% * positionPercent\n\n                  var rtlIsNormal = _isRTL && isHorizontal && (!_rtlScrollBehavior.i && !_rtlScrollBehavior.n || _normalizeRTLCache);\n                  var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\n                  var scrollObj = {};\n                  var animationObj = {\n                    easing: easing,\n                    step: function step(now) {\n                      if (_scrollbarsHandlesDefineScrollPos) {\n                        _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\n\n\n                        refreshScrollbarHandleOffset(isHorizontal, now);\n                      }\n                    }\n                  };\n                  instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\n                  instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition; //_base.scrollStop();\n\n                  if (instantScroll) {\n                    _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\n\n\n                    if (instantScrollTransition) {\n                      //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\n                      //and the animation stops at the correct point\n                      instantScrollPosition = _viewportElement[scroll](); //scroll back to the position before instant scrolling so animation can be performed\n\n                      _viewportElement[scroll](currScroll);\n\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition;\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\n                      scrollObj[xy] = instantScrollPosition;\n\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: 130,\n                        complete: scrollActionInstantFinished\n                      }));\n                    } else scrollActionInstantFinished();\n                  } else {\n                    decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\n                    finishedCondition = rtlIsNormal ? decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset : decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset;\n\n                    if (finishedCondition) {\n                      clearTimeout(trackTimeout);\n\n                      _base.scrollStop();\n\n                      trackTimeout = undefined$1;\n                      scrollActionFinsished(true);\n                    } else {\n                      trackTimeout = setTimeout(scrollAction, timeoutDelay);\n                      scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\n\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: scrollDuration\n                      }));\n                    }\n\n                    isFirstIteration = false;\n                  }\n                }\n              };\n\n              if (ctrlKey) increaseTrackScrollAmount();\n              mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n              mouseDownOffset = COMPATIBILITY.page(event)[xy];\n              _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n              addClass(_bodyElement, _classNameDragging);\n              addClass(scrollbarVars._track, strActive);\n              addClass(scrollbarVars._scrollbar, strActive);\n              setupResponsiveEventListener(_documentElement, [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\n              scrollAction();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          }\n\n          function onTrackMouseTouchEnter(event) {\n            //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\n            _scrollbarsHandleHovered = true;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n          }\n\n          function onTrackMouseTouchLeave(event) {\n            _scrollbarsHandleHovered = false;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n          }\n\n          function onScrollbarMouseTouchDown(event) {\n            COMPATIBILITY.stpP(event);\n          }\n\n          addDestroyEventListener(scrollbarVars._handle, _strMouseTouchDownEvent, onHandleMouseTouchDown);\n          addDestroyEventListener(scrollbarVars._track, [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave], [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\n          addDestroyEventListener(scrollbarVars._scrollbar, _strMouseTouchDownEvent, onScrollbarMouseTouchDown);\n\n          if (_supportTransition) {\n            addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\n              if (event.target !== scrollbarVars._scrollbar[0]) return;\n              refreshScrollbarHandleLength(isHorizontal);\n              refreshScrollbarHandleOffset(isHorizontal);\n            });\n          }\n        }\n        /**\r\n         * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n         * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n         * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n         * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n         */\n\n\n        function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\n          var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\n          var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\n          addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\n          addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\n        }\n        /**\r\n         * Autoshows / autohides both scrollbars with.\r\n         * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n         * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n         */\n\n\n        function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\n          clearTimeout(_scrollbarsAutoHideTimeoutId);\n\n          if (shallBeVisible) {\n            //if(_hasOverflowCache.x && _hideOverflowCache.xs)\n            removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden); //if(_hasOverflowCache.y && _hideOverflowCache.ys)\n\n            removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n          } else {\n            var anyActive;\n            var strActive = 'active';\n\n            var hide = function hide() {\n              if (!_scrollbarsHandleHovered && !_destroyed) {\n                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n              }\n            };\n\n            if (_scrollbarsAutoHideDelay > 0 && delayfree !== true) _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);else hide();\n          }\n        }\n        /**\r\n         * Refreshes the handle length of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         */\n\n\n        function refreshScrollbarHandleLength(isHorizontal) {\n          var handleCSS = {};\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var digit = 1000000; //get and apply intended handle length\n\n          var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\n          handleCSS[scrollbarVars._width_height] = MATH.floor(handleRatio * 100 * digit) / digit + '%'; //the last * digit / digit is for flooring to the 4th digit\n\n          if (!nativeOverlayScrollbarsAreActive()) scrollbarVars._handle.css(handleCSS); //measure the handle length to respect min & max length\n\n          scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\n          scrollbarVarsInfo._handleLengthRatio = handleRatio;\n        }\n        /**\r\n         * Refreshes the handle offset of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n         */\n\n\n        function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\n          var transition = type(scrollOrTransition) == TYPES.b;\n          var transitionDuration = 250;\n          var isRTLisHorizontal = _isRTL && isHorizontal;\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var strTranslateBrace = 'translate(';\n\n          var strTransform = VENDORS._cssProperty('transform');\n\n          var strTransition = VENDORS._cssProperty('transition');\n\n          var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\n          var currentScroll = scrollOrTransition === undefined$1 || transition ? nativeScroll : scrollOrTransition; //measure the handle length to respect min & max length\n\n          var handleLength = scrollbarVarsInfo._handleLength;\n          var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\n          var handleTrackDiff = trackLength - handleLength;\n          var handleCSS = {};\n          var transformOffset;\n          var translateValue; //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\n          // because its a bit behind during the small delay when content size updates\n          //(delay = mutationObserverContentLag, if its 0 then this var could be used)\n\n          var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\n\n          var getScrollRatio = function getScrollRatio(base) {\n            return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\n          };\n\n          var getHandleOffset = function getHandleOffset(scrollRatio) {\n            var offset = handleTrackDiff * scrollRatio;\n            offset = isNaN(offset) ? 0 : offset;\n            offset = isRTLisHorizontal && !_rtlScrollBehavior.i ? trackLength - handleLength - offset : offset;\n            offset = MATH.max(0, offset);\n            return offset;\n          };\n\n          var scrollRatio = getScrollRatio(nativeScroll);\n          var unsnappedScrollRatio = getScrollRatio(currentScroll);\n          var handleOffset = getHandleOffset(unsnappedScrollRatio);\n          var snappedHandleOffset = getHandleOffset(scrollRatio);\n          scrollbarVarsInfo._maxScroll = maxScroll;\n          scrollbarVarsInfo._currentScroll = nativeScroll;\n          scrollbarVarsInfo._currentScrollRatio = scrollRatio;\n\n          if (_supportTransform) {\n            transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\n            //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\n\n            translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\n            handleCSS[strTransform] = translateValue; //apply or clear up transition\n\n            if (_supportTransition) handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\n          } else handleCSS[scrollbarVars._left_top] = handleOffset; //only apply css if offset has changed and overflow exists.\n\n\n          if (!nativeOverlayScrollbarsAreActive()) {\n            scrollbarVars._handle.css(handleCSS); //clear up transition\n\n\n            if (_supportTransform && _supportTransition && transition) {\n              scrollbarVars._handle.one(_strTransitionEndEvent, function () {\n                if (!_destroyed) scrollbarVars._handle.css(strTransition, _strEmpty);\n              });\n            }\n          }\n\n          scrollbarVarsInfo._handleOffset = handleOffset;\n          scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\n          scrollbarVarsInfo._trackLength = trackLength;\n        }\n        /**\r\n         * Refreshes the interactivity of the given scrollbar element.\r\n         * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n         * @param value True for interactivity false for no interactivity.\r\n         */\n\n\n        function refreshScrollbarsInteractive(isTrack, value) {\n          var action = value ? 'removeClass' : 'addClass';\n          var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\n          var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\n          var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\n          element1[action](className);\n          element2[action](className);\n        }\n        /**\r\n         * Returns a object which is used for fast access for specific variables.\r\n         * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n         * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n         */\n\n\n        function getScrollbarVars(isHorizontal) {\n          return {\n            _width_height: isHorizontal ? _strWidth : _strHeight,\n            _Width_Height: isHorizontal ? 'Width' : 'Height',\n            _left_top: isHorizontal ? _strLeft : _strTop,\n            _Left_Top: isHorizontal ? 'Left' : 'Top',\n            _x_y: isHorizontal ? _strX : _strY,\n            _X_Y: isHorizontal ? 'X' : 'Y',\n            _w_h: isHorizontal ? 'w' : 'h',\n            _l_t: isHorizontal ? 'l' : 't',\n            _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\n            _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\n            _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\n            _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\n          };\n        } //==== Scrollbar Corner ====//\n\n        /**\r\n         * Builds or destroys the scrollbar corner DOM element.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupScrollbarCornerDOM(destroy) {\n          _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\n\n          if (!destroy) {\n            if (!_domExists) {\n              _hostElement.append(_scrollbarCornerElement);\n            }\n          } else {\n            if (_domExists && _initialized) {\n              removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n            } else {\n              remove(_scrollbarCornerElement);\n            }\n          }\n        }\n        /**\r\n         * Initializes all scrollbar corner interactivity events.\r\n         */\n\n\n        function setupScrollbarCornerEvents() {\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var mouseDownPosition = {};\n          var mouseDownSize = {};\n          var mouseDownInvertedScale = {};\n          var reconnectMutationObserver;\n\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var pageOffset = getCoordinates(event);\n              var hostElementCSS = {};\n              if (_resizeHorizontal || _resizeBoth) hostElementCSS[_strWidth] = mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x;\n              if (_resizeVertical || _resizeBoth) hostElementCSS[_strHeight] = mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y;\n\n              _hostElement.css(hostElementCSS);\n\n              COMPATIBILITY.stpP(event);\n            } else {\n              documentMouseTouchUp(event);\n            }\n          }\n\n          function documentMouseTouchUp(event) {\n            var eventIsTrusted = event !== undefined$1;\n            setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp], true);\n            removeClass(_bodyElement, _classNameDragging);\n            if (_scrollbarCornerElement.releaseCapture) _scrollbarCornerElement.releaseCapture();\n\n            if (eventIsTrusted) {\n              if (reconnectMutationObserver) connectMutationObservers();\n\n              _base.update(_strAuto);\n            }\n\n            reconnectMutationObserver = false;\n          }\n\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n\n          function getCoordinates(event) {\n            return _msieVersion && insideIFrame ? {\n              x: event.screenX,\n              y: event.screenY\n            } : COMPATIBILITY.page(event);\n          }\n\n          addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\n            if (onMouseTouchDownContinue(event) && !_resizeNone) {\n              if (_mutationObserversConnected) {\n                reconnectMutationObserver = true;\n                disconnectMutationObservers();\n              }\n\n              mouseDownPosition = getCoordinates(event);\n              mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\n              mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\n              mouseDownInvertedScale = getHostElementInvertedScale();\n              setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\n              addClass(_bodyElement, _classNameDragging);\n              if (_scrollbarCornerElement.setCapture) _scrollbarCornerElement.setCapture();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          });\n        } //==== Utils ====//\n\n        /**\r\n         * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n         * @param name The name of the target which shall be called.\r\n         * @param args The args with which the callback shall be called.\r\n         * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n         */\n\n\n        function dispatchCallback(name, args, dependent) {\n          if (dependent === false) return;\n\n          if (_initialized) {\n            var callback = _currentPreparedOptions.callbacks[name];\n            var extensionOnName = name;\n            var ext;\n            if (extensionOnName.substr(0, 2) === 'on') extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\n            if (type(callback) == TYPES.f) callback.call(_base, args);\n            each(_extensions, function () {\n              ext = this;\n              if (type(ext.on) == TYPES.f) ext.on(extensionOnName, args);\n            });\n          } else if (!_destroyed) _callbacksInitQeueue.push({\n            n: name,\n            a: args\n          });\n        }\n        /**\r\n         * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n         * @param targetCSSObject The css object to which the values shall be applied.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n         * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n         */\n\n\n        function setTopRightBottomLeft(targetCSSObject, prefix, values) {\n          prefix = prefix || _strEmpty;\n          values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\n          targetCSSObject[prefix + _strTop] = values[0];\n          targetCSSObject[prefix + _strRight] = values[1];\n          targetCSSObject[prefix + _strBottom] = values[2];\n          targetCSSObject[prefix + _strLeft] = values[3];\n        }\n        /**\r\n         * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n         * @param zeroX True if the x axis shall be 0.\r\n         * @param zeroY True if the y axis shall be 0.\r\n         * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n         */\n\n\n        function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\n          suffix = suffix || _strEmpty;\n          prefix = prefix || _strEmpty;\n          return {\n            t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\n            r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\n            b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\n            l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\n          };\n        }\n        /**\r\n         * Returns the computed CSS transition string from the given element.\r\n         * @param element The element from which the transition string shall be returned.\r\n         * @returns {string} The CSS transition string from the given element.\r\n         */\n\n\n        function getCSSTransitionString(element) {\n          var transitionStr = VENDORS._cssProperty('transition');\n\n          var assembledValue = element.css(transitionStr);\n          if (assembledValue) return assembledValue;\n          var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\n          var regExpMain = new RegExp(regExpString);\n          var regExpValidate = new RegExp('^(' + regExpString + ')+$');\n          var properties = 'property duration timing-function delay'.split(' ');\n          var result = [];\n          var strResult;\n          var valueArray;\n          var i = 0;\n          var j;\n\n          var splitCssStyleByComma = function splitCssStyleByComma(str) {\n            strResult = [];\n            if (!str.match(regExpValidate)) return str;\n\n            while (str.match(regExpMain)) {\n              strResult.push(RegExp.$1);\n              str = str.replace(regExpMain, _strEmpty);\n            }\n\n            return strResult;\n          };\n\n          for (; i < properties[LEXICON.l]; i++) {\n            valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\n\n            for (j = 0; j < valueArray[LEXICON.l]; j++) {\n              result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\n            }\n          }\n\n          return result.join(', ');\n        }\n        /**\r\n         * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n         * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n         * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n         */\n\n\n        function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\n          var i;\n          var split;\n          var appendix;\n\n          var appendClasses = function appendClasses(classes, condition) {\n            appendix = '';\n\n            if (condition && _typeof(classes) == TYPES.s) {\n              split = classes.split(_strSpace);\n\n              for (i = 0; i < split[LEXICON.l]; i++) {\n                appendix += '|' + split[i] + '$';\n              } // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\n\n            }\n\n            return appendix;\n          };\n\n          return new RegExp('(^' + _classNameHostElement + '([-_].+|)$)' + appendClasses(_classNameCache, withCurrClassNameOption) + appendClasses(_oldClassName, withOldClassNameOption), 'g');\n        }\n        /**\r\n         * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n         * @returns {{x: number, y: number}} The scale of the host-element.\r\n         */\n\n\n        function getHostElementInvertedScale() {\n          var rect = _paddingElementNative[LEXICON.bCR]();\n\n          return {\n            x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\n            y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\n          };\n        }\n        /**\r\n         * Checks whether the given object is a HTMLElement.\r\n         * @param o The object which shall be checked.\r\n         * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n         */\n\n\n        function isHTMLElement(o) {\n          var strOwnerDocument = 'ownerDocument';\n          var strHTMLElement = 'HTMLElement';\n          var wnd = o && o[strOwnerDocument] ? o[strOwnerDocument].parentWindow || window : window;\n          return _typeof(wnd[strHTMLElement]) == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\n          o && _typeof(o) == TYPES.o && o !== null && o.nodeType === 1 && _typeof(o.nodeName) == TYPES.s;\n        }\n        /**\r\n         * Compares 2 arrays and returns the differences between them as a array.\r\n         * @param a1 The first array which shall be compared.\r\n         * @param a2 The second array which shall be compared.\r\n         * @returns {Array} The differences between the two arrays.\r\n         */\n\n\n        function getArrayDifferences(a1, a2) {\n          var a = [];\n          var diff = [];\n          var i;\n          var k;\n\n          for (i = 0; i < a1.length; i++) {\n            a[a1[i]] = true;\n          }\n\n          for (i = 0; i < a2.length; i++) {\n            if (a[a2[i]]) delete a[a2[i]];else a[a2[i]] = true;\n          }\n\n          for (k in a) {\n            diff.push(k);\n          }\n\n          return diff;\n        }\n        /**\r\n         * Returns Zero or the number to which the value can be parsed.\r\n         * @param value The value which shall be parsed.\r\n         * @param toFloat Indicates whether the number shall be parsed to a float.\r\n         */\n\n\n        function parseToZeroOrNumber(value, toFloat) {\n          var num = toFloat ? parseFloat(value) : parseInt(value, 10);\n          return isNaN(num) ? 0 : num;\n        }\n        /**\r\n         * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n         * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n         */\n\n\n        function getTextareaInfo() {\n          //read needed values\n          var textareaCursorPosition = _targetElementNative.selectionStart;\n          if (textareaCursorPosition === undefined$1) return;\n\n          var textareaValue = _targetElement.val();\n\n          var textareaLength = textareaValue[LEXICON.l];\n          var textareaRowSplit = textareaValue.split('\\n');\n          var textareaLastRow = textareaRowSplit[LEXICON.l];\n          var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\n          var widestRow = 0;\n          var textareaLastCol = 0;\n          var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\n          var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\n          var rowCols;\n          var i; //get widest Row and the last column of the textarea\n\n          for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\n            rowCols = textareaRowSplit[i][LEXICON.l];\n\n            if (rowCols > textareaLastCol) {\n              widestRow = i + 1;\n              textareaLastCol = rowCols;\n            }\n          }\n\n          return {\n            _cursorRow: cursorRow,\n            //cursorRow\n            _cursorColumn: cursorCol,\n            //cursorCol\n            _rows: textareaLastRow,\n            //rows\n            _columns: textareaLastCol,\n            //cols\n            _widestRow: widestRow,\n            //wRow\n            _cursorPosition: textareaCursorPosition,\n            //pos\n            _cursorMax: textareaLength //max\n\n          };\n        }\n        /**\r\n         * Determines whether native overlay scrollbars are active.\r\n         * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n         */\n\n\n        function nativeOverlayScrollbarsAreActive() {\n          return _ignoreOverlayScrollbarHidingCache && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y;\n        }\n        /**\r\n         * Gets the element which is used to measure the content size.\r\n         * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n         */\n\n\n        function getContentMeasureElement() {\n          return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\n        }\n        /**\r\n         * Generates a string which represents a HTML div with the given classes or attributes.\r\n         * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n         * @param content The content of the div as string.\r\n         * @returns {string} The concated string which represents a HTML div and its content.\r\n         */\n\n\n        function generateDiv(classesOrAttrs, content) {\n          return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ? 'class=\"' + classesOrAttrs + '\"' : function () {\n            var key;\n            var attrs = _strEmpty;\n\n            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\n              for (key in classesOrAttrs) {\n                attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\n              }\n            }\n\n            return attrs;\n          }() : _strEmpty) + '>' + (content || _strEmpty) + '</div>';\n        }\n        /**\r\n         * Selects or generates a div with the given class attribute.\r\n         * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n         * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n         * If its a boolean it decides whether only the children of the host element shall be selected.\r\n         * @returns {*} The generated or selected element.\r\n         */\n\n\n        function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\n          var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\n          var selectParent = onlyChildren ? _hostElement : selectParentOrOnlyChildren || _hostElement;\n          return _domExists && !selectParent[LEXICON.l] ? null : _domExists ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0) : FRAMEWORK(generateDiv(className));\n        }\n        /**\r\n         * Gets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be got.\r\n         * @param path The property of which the value shall be got.\r\n         * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n         */\n\n\n        function getObjectPropVal(obj, path) {\n          var splits = path.split(_strDot);\n          var i = 0;\n          var val;\n\n          for (; i < splits.length; i++) {\n            if (!obj[LEXICON.hOP](splits[i])) return;\n            val = obj[splits[i]];\n            if (i < splits.length && type(val) == TYPES.o) obj = val;\n          }\n\n          return val;\n        }\n        /**\r\n         * Sets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be set.\r\n         * @param path The property of which the value shall be set.\r\n         * @param val The value of the property which shall be set.\r\n         */\n\n\n        function setObjectPropVal(obj, path, val) {\n          var splits = path.split(_strDot);\n          var splitsLength = splits.length;\n          var i = 0;\n          var extendObj = {};\n          var extendObjRoot = extendObj;\n\n          for (; i < splitsLength; i++) {\n            extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\n          }\n\n          FRAMEWORK.extend(obj, extendObjRoot, true);\n        }\n        /**\t\r\n         * Runs a action for each selector inside the updateOnLoad option.\t\r\n         * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n         */\n\n\n        function eachUpdateOnLoad(action) {\n          var updateOnLoad = _currentPreparedOptions.updateOnLoad;\n          updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\n\n          if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\n            each(updateOnLoad, action);\n          }\n        } //==== Utils Cache ====//\n\n        /**\r\n         * Compares two values or objects and returns true if they aren't equal.\r\n         * @param current The first value or object which shall be compared.\r\n         * @param cache The second value or object which shall be compared.\r\n         * @param force If true the returned value is always true.\r\n         * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n         */\n\n\n        function checkCache(current, cache, force) {\n          if (force) return force;\n\n          if (type(current) == TYPES.o && type(cache) == TYPES.o) {\n            for (var prop in current) {\n              if (prop !== 'c') {\n                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\n                  if (checkCache(current[prop], cache[prop])) return true;\n                } else {\n                  return true;\n                }\n              }\n            }\n          } else {\n            return current !== cache;\n          }\n\n          return false;\n        } //==== Shortcuts ====//\n\n        /**\r\n         * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n         */\n\n\n        function extendDeep() {\n          return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\n        }\n        /**\r\n         * jQuery addClass method shortcut.\r\n         */\n\n\n        function addClass(el, classes) {\n          return _frameworkProto.addClass.call(el, classes);\n        }\n        /**\r\n         * jQuery removeClass method shortcut.\r\n         */\n\n\n        function removeClass(el, classes) {\n          return _frameworkProto.removeClass.call(el, classes);\n        }\n        /**\r\n         * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n         */\n\n\n        function addRemoveClass(el, classes, doAdd) {\n          return doAdd ? addClass(el, classes) : removeClass(el, classes);\n        }\n        /**\r\n         * jQuery remove method shortcut.\r\n         */\n\n\n        function remove(el) {\n          return _frameworkProto.remove.call(el);\n        }\n        /**\r\n         * Finds the first child element with the given selector of the given element.\r\n         * @param el The root element from which the selector shall be valid.\r\n         * @param selector The selector of the searched element.\r\n         * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n         */\n\n\n        function findFirst(el, selector) {\n          return _frameworkProto.find.call(el, selector).eq(0);\n        } //==== API ====//\n\n        /**\r\n         * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n         * This behavior can be reset by calling the update method.\r\n         */\n\n\n        _base.sleep = function () {\n          _sleeping = true;\n        };\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param force True if every property shall be updated and the cache shall be ignored.\r\n         * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n         * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n         * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n         * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n         * @returns {boolean|undefined} \r\n         * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n         * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n         * undefined otherwise.\r\n         */\n\n\n        _base.update = function (force) {\n          if (_destroyed) return;\n          var attrsChanged;\n          var contentSizeC;\n          var isString = type(force) == TYPES.s;\n          var doUpdateAuto;\n          var mutHost;\n          var mutContent;\n\n          if (isString) {\n            if (force === _strAuto) {\n              attrsChanged = meaningfulAttrsChanged();\n              contentSizeC = updateAutoContentSizeChanged();\n              doUpdateAuto = attrsChanged || contentSizeC;\n\n              if (doUpdateAuto) {\n                update({\n                  _contentSizeChanged: contentSizeC,\n                  _changedOptions: _initialized ? undefined$1 : _currentPreparedOptions\n                });\n              }\n            } else if (force === _strSync) {\n              if (_mutationObserversConnected) {\n                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\n                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\n              } else {\n                mutHost = _base.update(_strAuto);\n              }\n            } else if (force === 'zoom') {\n              update({\n                _hostSizeChanged: true,\n                _contentSizeChanged: true\n              });\n            }\n          } else {\n            force = _sleeping || force;\n            _sleeping = false;\n            if (!_base.update(_strSync) || force) update({\n              _force: force\n            });\n          }\n\n          updateElementsOnLoad();\n          return doUpdateAuto || mutHost || mutContent;\n        };\n        /**\r\n         Gets or sets the current options. The update method will be called automatically if new options were set.\r\n         * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n         * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n         * @returns {*}\r\n         */\n\n\n        _base.options = function (newOptions, value) {\n          var option = {};\n          var changedOps; //return current options if newOptions are undefined or empty\n\n          if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\n            if (type(newOptions) == TYPES.s) {\n              if (arguments.length > 1) {\n                setObjectPropVal(option, newOptions, value);\n                changedOps = setOptions(option);\n              } else return getObjectPropVal(_currentOptions, newOptions);\n            } else return _currentOptions;\n          } else {\n            changedOps = setOptions(newOptions);\n          }\n\n          if (!FRAMEWORK.isEmptyObject(changedOps)) {\n            update({\n              _changedOptions: changedOps\n            });\n          }\n        };\n        /**\r\n         * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n         */\n\n\n        _base.destroy = function () {\n          if (_destroyed) return; //remove this instance from auto update loop\n\n          autoUpdateLoop.remove(_base); //disconnect all mutation observers\n\n          disconnectMutationObservers(); //remove all resize observers\n\n          setupResizeObserver(_sizeObserverElement);\n          setupResizeObserver(_sizeAutoObserverElement); //remove all extensions\n\n          for (var extName in _extensions) {\n            _base.removeExt(extName);\n          } //remove all 'destroy' events\n\n\n          while (_destroyEvents[LEXICON.l] > 0) {\n            _destroyEvents.pop()();\n          } //remove all events from host element\n\n\n          setupHostMouseTouchEvents(true); //remove all helper / detection elements\n\n          if (_contentGlueElement) remove(_contentGlueElement);\n          if (_contentArrangeElement) remove(_contentArrangeElement);\n          if (_sizeAutoObserverAdded) remove(_sizeAutoObserverElement); //remove all generated DOM\n\n          setupScrollbarsDOM(true);\n          setupScrollbarCornerDOM(true);\n          setupStructureDOM(true); //remove all generated image load events\n\n          for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++) {\n            FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\n          }\n\n          _updateOnLoadElms = undefined$1;\n          _destroyed = true;\n          _sleeping = true; //remove this instance from the instances list\n\n          INSTANCES(pluginTargetElement, 0);\n          dispatchCallback('onDestroyed'); //remove all properties and methods\n          //for (var property in _base)\n          //    delete _base[property];\n          //_base = undefined;\n        };\n        /**\r\n         * Scrolls to a given position or element.\r\n         * @param coordinates\r\n         * 1. Can be \"coordinates\" which looks like:\r\n         *    { x : ?, y : ? } OR          Object with x and y properties\r\n         *    { left : ?, top : ? } OR     Object with left and top properties\r\n         *    { l : ?, t : ? } OR          Object with l and t properties\r\n         *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n         *    ?                            A single value which stays for both axis\r\n         *    A value can be a number, a string or a calculation.\r\n         *\r\n         *    Operators:\r\n         *    [NONE]  The current scroll will be overwritten by the value.\r\n         *    '+='    The value will be added to the current scroll offset\r\n         *    '-='    The value will be subtracted from the current scroll offset\r\n         *    '*='    The current scroll wil be multiplicated by the value.\r\n         *    '/='    The current scroll wil be divided by the value.\r\n         *\r\n         *    Units:\r\n         *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n         *    'px'    Same as none\r\n         *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n         *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n         *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n         *\r\n         *    example final values:\r\n         *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n         *\r\n         * 2. Can be a HTML or jQuery element:\r\n         *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n         *\r\n         * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n         *    {\r\n         *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n         *      scroll : [string, array, object],               Default value is 'always'.\r\n         *      block : [string, array, object],                Default value is 'begin'.\r\n         *      margin : [number, boolean, array, object]       Default value is false.\r\n         *    }\r\n         *\r\n         *    Possible scroll settings are:\r\n         *    'always'      Scrolls always.\r\n         *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n         *    'never'       Scrolls never.\r\n         *\r\n         *    Possible block settings are:\r\n         *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n         *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n         *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n         *    'nearest' The element will be docked to the nearest edge(s).\r\n         *\r\n         *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n         *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n         *    [NUMBER]                                          The margin will be used for all edges.\r\n         *\r\n         * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n         * @param easing The animation easing.\r\n         * @param complete The animation complete callback.\r\n         * @returns {{\r\n         *   position: {x: number, y: number},\r\n         *   ratio: {x: number, y: number},\r\n         *   max: {x: number, y: number},\r\n         *   handleOffset: {x: number, y: number},\r\n         *   handleLength: {x: number, y: number},\r\n         *   handleLengthRatio: {x: number, y: number}, t\r\n         *   rackLength: {x: number, y: number},\r\n         *   isRTL: boolean,\r\n         *   isRTLNormalized: boolean\r\n         *  }}\r\n         */\n\n\n        _base.scroll = function (coordinates, duration, easing, complete) {\n          if (arguments.length === 0 || coordinates === undefined$1) {\n            var infoX = _scrollHorizontalInfo;\n            var infoY = _scrollVerticalInfo;\n            var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\n            var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\n            var scrollX = infoX._currentScroll;\n            var scrollXRatio = infoX._currentScrollRatio;\n            var maxScrollX = infoX._maxScroll;\n            scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\n            scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\n            scrollX *= normalizeNegate ? -1 : 1;\n            maxScrollX *= normalizeNegate ? -1 : 1;\n            return {\n              position: {\n                x: scrollX,\n                y: infoY._currentScroll\n              },\n              ratio: {\n                x: scrollXRatio,\n                y: infoY._currentScrollRatio\n              },\n              max: {\n                x: maxScrollX,\n                y: infoY._maxScroll\n              },\n              handleOffset: {\n                x: infoX._handleOffset,\n                y: infoY._handleOffset\n              },\n              handleLength: {\n                x: infoX._handleLength,\n                y: infoY._handleLength\n              },\n              handleLengthRatio: {\n                x: infoX._handleLengthRatio,\n                y: infoY._handleLengthRatio\n              },\n              trackLength: {\n                x: infoX._trackLength,\n                y: infoY._trackLength\n              },\n              snappedHandleOffset: {\n                x: infoX._snappedHandleOffset,\n                y: infoY._snappedHandleOffset\n              },\n              isRTL: _isRTL,\n              isRTLNormalized: _normalizeRTLCache\n            };\n          }\n\n          _base.update(_strSync);\n\n          var normalizeRTL = _normalizeRTLCache;\n          var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\n          var coordinatesYAxisProps = [_strY, _strTop, 't'];\n          var coordinatesOperators = ['+=', '-=', '*=', '/='];\n          var durationIsObject = type(duration) == TYPES.o;\n          var completeCallback = durationIsObject ? duration.complete : complete;\n          var i;\n          var finalScroll = {};\n          var specialEasing = {};\n          var doScrollLeft;\n          var doScrollTop;\n          var animationOptions;\n          var strEnd = 'end';\n          var strBegin = 'begin';\n          var strCenter = 'center';\n          var strNearest = 'nearest';\n          var strAlways = 'always';\n          var strNever = 'never';\n          var strIfNeeded = 'ifneeded';\n          var strLength = LEXICON.l;\n          var settingsAxis;\n          var settingsScroll;\n          var settingsBlock;\n          var settingsMargin;\n          var finalElement;\n          var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\n          var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\n          var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\n          var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\n          var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\n          var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\n          var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\n\n          var updateScrollbarInfos = function updateScrollbarInfos() {\n            if (doScrollLeft) refreshScrollbarHandleOffset(true);\n            if (doScrollTop) refreshScrollbarHandleOffset(false);\n          };\n\n          var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined$1 : function () {\n            updateScrollbarInfos();\n            completeCallback();\n          };\n\n          function checkSettingsStringValue(currValue, allowedValues) {\n            for (i = 0; i < allowedValues[strLength]; i++) {\n              if (currValue === allowedValues[i]) return true;\n            }\n\n            return false;\n          }\n\n          function getRawScroll(isX, coordinates) {\n            var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\n            coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\n            if (COMPATIBILITY.isA(coordinates)) return isX ? coordinates[0] : coordinates[1];else if (type(coordinates) == TYPES.o) {\n              //decides RTL normalization \"hack\" with .n\n              //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \n              for (i = 0; i < coordinateProps[strLength]; i++) {\n                if (coordinateProps[i] in coordinates) return coordinates[coordinateProps[i]];\n              }\n            }\n          }\n\n          function getFinalScroll(isX, rawScroll) {\n            var isString = type(rawScroll) == TYPES.s;\n            var operator;\n            var amount;\n            var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\n            var currScroll = scrollInfo._currentScroll;\n            var maxScroll = scrollInfo._maxScroll;\n            var mult = ' * ';\n            var finalValue;\n            var isRTLisX = _isRTL && isX;\n            var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\n            var strReplace = 'replace';\n            var evalFunc = eval;\n            var possibleOperator;\n\n            if (isString) {\n              //check operator\n              if (rawScroll[strLength] > 2) {\n                possibleOperator = rawScroll.substr(0, 2);\n                if (inArray(possibleOperator, coordinatesOperators) > -1) operator = possibleOperator;\n              } //calculate units and shortcuts\n\n\n              rawScroll = operator ? rawScroll.substr(2) : rawScroll;\n              rawScroll = rawScroll[strReplace](/min/g, 0) //'min' = 0%\n              [strReplace](/</g, 0) //'<'   = 0%\n              [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'max' = 100%\n              [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'>'   = 100%\n              [strReplace](/px/g, _strEmpty)[strReplace](/%/g, mult + maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0)[strReplace](/vw/g, mult + _viewportSize.w)[strReplace](/vh/g, mult + _viewportSize.h);\n              amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\n            } else {\n              amount = rawScroll;\n            }\n\n            if (amount !== undefined$1 && !isNaN(amount) && type(amount) == TYPES.n) {\n              var normalizeIsRTLisX = normalizeRTL && isRTLisX;\n              var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\n              var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\n              var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\n              operatorCurrScroll = invert ? maxScroll - operatorCurrScroll : operatorCurrScroll;\n\n              switch (operator) {\n                case '+=':\n                  finalValue = operatorCurrScroll + amount;\n                  break;\n\n                case '-=':\n                  finalValue = operatorCurrScroll - amount;\n                  break;\n\n                case '*=':\n                  finalValue = operatorCurrScroll * amount;\n                  break;\n\n                case '/=':\n                  finalValue = operatorCurrScroll / amount;\n                  break;\n\n                default:\n                  finalValue = amount;\n                  break;\n              }\n\n              finalValue = invert ? maxScroll - finalValue : finalValue;\n              finalValue *= negate ? -1 : 1;\n              finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\n            }\n\n            return finalValue === currScroll ? undefined$1 : finalValue;\n          }\n\n          function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\n            var resultDefault = [defaultValue, defaultValue];\n            var valueType = type(value);\n            var valueArrLength;\n            var valueArrItem; //value can be [ string, or array of two strings ]\n\n            if (valueType == valueInternalType) {\n              value = [value, value];\n            } else if (valueType == TYPES.a) {\n              valueArrLength = value[strLength];\n              if (valueArrLength > 2 || valueArrLength < 1) value = resultDefault;else {\n                if (valueArrLength === 1) value[1] = defaultValue;\n\n                for (i = 0; i < valueArrLength; i++) {\n                  valueArrItem = value[i];\n\n                  if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\n                    value = resultDefault;\n                    break;\n                  }\n                }\n              }\n            } else if (valueType == TYPES.o) value = [value[_strX] || defaultValue, value[_strY] || defaultValue];else value = resultDefault;\n\n            return {\n              x: value[0],\n              y: value[1]\n            };\n          }\n\n          function generateMargin(marginTopRightBottomLeftArray) {\n            var result = [];\n            var currValue;\n            var currValueType;\n            var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\n\n            for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\n              if (i === valueDirections[strLength]) break;\n              currValue = marginTopRightBottomLeftArray[i];\n              currValueType = type(currValue);\n              if (currValueType == TYPES.b) result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);else result.push(currValueType == TYPES.n ? currValue : 0);\n            }\n\n            return result;\n          }\n\n          if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\n            //get settings\n            var margin = coordinatesIsElementObj ? coordinates.margin : 0;\n            var axis = coordinatesIsElementObj ? coordinates.axis : 0;\n            var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\n            var block = coordinatesIsElementObj ? coordinates.block : 0;\n            var marginDefault = [0, 0, 0, 0];\n            var marginType = type(margin);\n            var marginLength;\n            finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\n\n            if (finalElement[strLength] > 0) {\n              //margin can be [ boolean, number, array of 2, array of 4, object ]\n              if (marginType == TYPES.n || marginType == TYPES.b) margin = generateMargin([margin, margin, margin, margin]);else if (marginType == TYPES.a) {\n                marginLength = margin[strLength];\n                if (marginLength === 2) margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);else if (marginLength >= 4) margin = generateMargin(margin);else margin = marginDefault;\n              } else if (marginType == TYPES.o) margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);else margin = marginDefault; //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\n\n              settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\n              settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\n              settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\n              settingsMargin = margin;\n              var viewportScroll = {\n                l: _scrollHorizontalInfo._currentScroll,\n                t: _scrollVerticalInfo._currentScroll\n              }; // use padding element instead of viewport element because padding element has never padding, margin or position applied.\n\n              var viewportOffset = _paddingElement.offset(); //get coordinates\n\n\n              var elementOffset = finalElement.offset();\n              var doNotScroll = {\n                x: settingsScroll.x == strNever || settingsAxis == _strY,\n                y: settingsScroll.y == strNever || settingsAxis == _strX\n              };\n              elementOffset[_strTop] -= settingsMargin[0];\n              elementOffset[_strLeft] -= settingsMargin[3];\n              var elementScrollCoordinates = {\n                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\n                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\n              };\n\n              if (_isRTL) {\n                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\n                if (_rtlScrollBehavior.n && normalizeRTL) elementScrollCoordinates.x *= -1;\n                if (_rtlScrollBehavior.i && normalizeRTL) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\n              } //measuring is required\n\n\n              if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\n                var measuringElm = finalElement[0];\n                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\n                  width: measuringElm[LEXICON.oW],\n                  height: measuringElm[LEXICON.oH]\n                };\n                var elementSize = {\n                  w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\n                  h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\n                };\n\n                var finalizeBlock = function finalizeBlock(isX) {\n                  var vars = getScrollbarVars(isX);\n                  var wh = vars._w_h;\n                  var lt = vars._left_top;\n                  var xy = vars._x_y;\n                  var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\n                  var blockIsCenter = settingsBlock[xy] == strCenter;\n                  var blockIsNearest = settingsBlock[xy] == strNearest;\n                  var scrollNever = settingsScroll[xy] == strNever;\n                  var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\n                  var vpSize = _viewportSize[wh];\n                  var vpOffset = viewportOffset[lt];\n                  var elSize = elementSize[wh];\n                  var elOffset = elementOffset[lt];\n                  var divide = blockIsCenter ? 2 : 1;\n                  var elementCenterOffset = elOffset + elSize / 2;\n                  var viewportCenterOffset = vpOffset + vpSize / 2;\n                  var isInView = elSize <= vpSize && elOffset >= vpOffset && elOffset + elSize <= vpOffset + vpSize;\n                  if (scrollNever) doNotScroll[xy] = true;else if (!doNotScroll[xy]) {\n                    if (blockIsNearest || scrollIfNeeded) {\n                      doNotScroll[xy] = scrollIfNeeded ? isInView : false;\n                      blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\n                    }\n\n                    elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? (vpSize / divide - elSize / divide) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\n                  }\n                };\n\n                finalizeBlock(true);\n                finalizeBlock(false);\n              }\n\n              if (doNotScroll.y) delete elementScrollCoordinates.y;\n              if (doNotScroll.x) delete elementScrollCoordinates.x;\n              coordinates = elementScrollCoordinates;\n            }\n          }\n\n          finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\n          finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\n          doScrollLeft = finalScroll[_strScrollLeft] !== undefined$1;\n          doScrollTop = finalScroll[_strScrollTop] !== undefined$1;\n\n          if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\n            if (durationIsObject) {\n              duration.complete = proxyCompleteCallback;\n\n              _viewportElement.animate(finalScroll, duration);\n            } else {\n              animationOptions = {\n                duration: duration,\n                complete: proxyCompleteCallback\n              };\n\n              if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\n                specialEasing[_strScrollLeft] = easing[0] || easing.x;\n                specialEasing[_strScrollTop] = easing[1] || easing.y;\n                animationOptions.specialEasing = specialEasing;\n              } else {\n                animationOptions.easing = easing;\n              }\n\n              _viewportElement.animate(finalScroll, animationOptions);\n            }\n          } else {\n            if (doScrollLeft) _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\n            if (doScrollTop) _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\n            updateScrollbarInfos();\n          }\n        };\n        /**\r\n         * Stops all scroll animations.\r\n         * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n         */\n\n\n        _base.scrollStop = function (param1, param2, param3) {\n          _viewportElement.stop(param1, param2, param3);\n\n          return _base;\n        };\n        /**\r\n         * Returns all relevant elements.\r\n         * @param elementName The name of the element which shall be returned.\r\n         * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n         */\n\n\n        _base.getElements = function (elementName) {\n          var obj = {\n            target: _targetElementNative,\n            host: _hostElementNative,\n            padding: _paddingElementNative,\n            viewport: _viewportElementNative,\n            content: _contentElementNative,\n            scrollbarHorizontal: {\n              scrollbar: _scrollbarHorizontalElement[0],\n              track: _scrollbarHorizontalTrackElement[0],\n              handle: _scrollbarHorizontalHandleElement[0]\n            },\n            scrollbarVertical: {\n              scrollbar: _scrollbarVerticalElement[0],\n              track: _scrollbarVerticalTrackElement[0],\n              handle: _scrollbarVerticalHandleElement[0]\n            },\n            scrollbarCorner: _scrollbarCornerElement[0]\n          };\n          return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\n        };\n        /**\r\n         * Returns a object which describes the current state of this instance.\r\n         * @param stateProperty A specific property from the state object which shall be returned.\r\n         * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n         */\n\n\n        _base.getState = function (stateProperty) {\n          function prepare(obj) {\n            if (!FRAMEWORK.isPlainObject(obj)) return obj;\n            var extended = extendDeep({}, obj);\n\n            var changePropertyName = function changePropertyName(from, to) {\n              if (extended[LEXICON.hOP](from)) {\n                extended[to] = extended[from];\n                delete extended[from];\n              }\n            };\n\n            changePropertyName('w', _strWidth); //change w to width\n\n            changePropertyName('h', _strHeight); //change h to height\n\n            delete extended.c; //delete c (the 'changed' prop)\n\n            return extended;\n          }\n\n          var obj = {\n            destroyed: !!prepare(_destroyed),\n            sleeping: !!prepare(_sleeping),\n            autoUpdate: prepare(!_mutationObserversConnected),\n            widthAuto: prepare(_widthAutoCache),\n            heightAuto: prepare(_heightAutoCache),\n            padding: prepare(_cssPaddingCache),\n            overflowAmount: prepare(_overflowAmountCache),\n            hideOverflow: prepare(_hideOverflowCache),\n            hasOverflow: prepare(_hasOverflowCache),\n            contentScrollSize: prepare(_contentScrollSizeCache),\n            viewportSize: prepare(_viewportSize),\n            hostSize: prepare(_hostSizeCache),\n            documentMixed: prepare(_documentMixed)\n          };\n          return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\n        };\n        /**\r\n         * Gets all or specific extension instance.\r\n         * @param extName The name of the extension from which the instance shall be got.\r\n         * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n         */\n\n\n        _base.ext = function (extName) {\n          var result;\n\n          var privateMethods = _extensionsPrivateMethods.split(' ');\n\n          var i = 0;\n\n          if (type(extName) == TYPES.s) {\n            if (_extensions[LEXICON.hOP](extName)) {\n              result = extendDeep({}, _extensions[extName]);\n\n              for (; i < privateMethods.length; i++) {\n                delete result[privateMethods[i]];\n              }\n            }\n          } else {\n            result = {};\n\n            for (i in _extensions) {\n              result[i] = extendDeep({}, _base.ext(i));\n            }\n          }\n\n          return result;\n        };\n        /**\r\n         * Adds a extension to this instance.\r\n         * @param extName The name of the extension which shall be added.\r\n         * @param extensionOptions The extension options which shall be used.\r\n         * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n         */\n\n\n        _base.addExt = function (extName, extensionOptions) {\n          var registeredExtensionObj = _plugin.extension(extName);\n\n          var instance;\n          var instanceAdded;\n          var instanceContract;\n          var contractResult;\n          var contractFulfilled = true;\n\n          if (registeredExtensionObj) {\n            if (!_extensions[LEXICON.hOP](extName)) {\n              instance = registeredExtensionObj.extensionFactory.call(_base, extendDeep({}, registeredExtensionObj.defaultOptions), FRAMEWORK, COMPATIBILITY);\n\n              if (instance) {\n                instanceContract = instance.contract;\n\n                if (type(instanceContract) == TYPES.f) {\n                  contractResult = instanceContract(window);\n                  contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\n                }\n\n                if (contractFulfilled) {\n                  _extensions[extName] = instance;\n                  instanceAdded = instance.added;\n                  if (type(instanceAdded) == TYPES.f) instanceAdded(extensionOptions);\n                  return _base.ext(extName);\n                }\n              }\n            } else return _base.ext(extName);\n          } else console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\n        };\n        /**\r\n         * Removes a extension from this instance.\r\n         * @param extName The name of the extension which shall be removed.\r\n         * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n         */\n\n\n        _base.removeExt = function (extName) {\n          var instance = _extensions[extName];\n          var instanceRemoved;\n\n          if (instance) {\n            delete _extensions[extName];\n            instanceRemoved = instance.removed;\n            if (type(instanceRemoved) == TYPES.f) instanceRemoved();\n            return true;\n          }\n\n          return false;\n        };\n        /**\r\n         * Constructs the plugin.\r\n         * @param targetElement The element to which the plugin shall be applied.\r\n         * @param options The initial options of the plugin.\r\n         * @param extensions The extension(s) which shall be added right after the initialization.\r\n         * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n         */\n\n\n        function construct(targetElement, options, extensions) {\n          _defaultOptions = globals.defaultOptions;\n          _nativeScrollbarStyling = globals.nativeScrollbarStyling;\n          _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\n          _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\n          _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior); //parse & set options but don't update\n\n          setOptions(extendDeep({}, _defaultOptions, options));\n          _cssCalc = globals.cssCalc;\n          _msieVersion = globals.msie;\n          _autoUpdateRecommended = globals.autoUpdateRecommended;\n          _supportTransition = globals.supportTransition;\n          _supportTransform = globals.supportTransform;\n          _supportPassiveEvents = globals.supportPassiveEvents;\n          _supportResizeObserver = globals.supportResizeObserver;\n          _supportMutationObserver = globals.supportMutationObserver;\n          _documentElement = FRAMEWORK(targetElement.ownerDocument);\n          _documentElementNative = _documentElement[0];\n          _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\n          _windowElementNative = _windowElement[0];\n          _htmlElement = findFirst(_documentElement, 'html');\n          _bodyElement = findFirst(_htmlElement, 'body');\n          _targetElement = FRAMEWORK(targetElement);\n          _targetElementNative = _targetElement[0];\n          _isTextarea = _targetElement.is('textarea');\n          _isBody = _targetElement.is('body');\n          _documentMixed = _documentElementNative !== document;\n          /* On a div Element The if checks only whether:\r\n           * - the targetElement has the class \"os-host\"\r\n           * - the targetElement has a a child with the class \"os-padding\"\r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-host\" element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding\">\r\n           *          <div class=\"os-viewport\">\r\n           *              <div class=\"os-content\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           *\r\n           * =====================================================================================\r\n           * \r\n           * On a Textarea Element The if checks only whether:\r\n           * - the targetElement has the class \"os-textarea\" \r\n           * - the targetElement is inside a element with the class \"os-content\" \r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-textarea\" (textarea) element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host-textarea\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding os-text-inherit\">\r\n           *          <div class=\"os-viewport os-text-inherit\">\r\n           *              <div class=\"os-content os-text-inherit\">\r\n           *                  <div class=\"os-textarea-cover\"></div>\r\n           *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n           *              </div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           */\n\n          _domExists = _isTextarea ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement) : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\n          var initBodyScroll;\n\n          var _bodyMouseTouchDownListener; //check if the plugin hasn't to be initialized\n\n\n          if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\n            dispatchCallback('onInitializationWithdrawn');\n\n            if (_domExists) {\n              setupStructureDOM(true);\n              setupScrollbarsDOM(true);\n              setupScrollbarCornerDOM(true);\n            }\n\n            _destroyed = true;\n            _sleeping = true;\n            return _base;\n          }\n\n          if (_isBody) {\n            initBodyScroll = {};\n            initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\n            initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\n\n            _bodyMouseTouchDownListener = function bodyMouseTouchDownListener() {\n              _viewportElement.removeAttr(LEXICON.ti);\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, true, true);\n            };\n          } //build OverlayScrollbars DOM\n\n\n          setupStructureDOM();\n          setupScrollbarsDOM();\n          setupScrollbarCornerDOM(); //create OverlayScrollbars events\n\n          setupStructureEvents();\n          setupScrollbarEvents(true);\n          setupScrollbarEvents(false);\n          setupScrollbarCornerEvents(); //create mutation observers\n\n          createMutationObservers(); //build resize observer for the host element\n\n          setupResizeObserver(_sizeObserverElement, hostOnResized);\n\n          if (_isBody) {\n            //apply the body scroll to handle it right in the update method\n            _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t); //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\n\n\n            if (document.activeElement == targetElement && _viewportElementNative.focus) {\n              //set a tabindex to make the viewportElement focusable\n              _viewportElement.attr(LEXICON.ti, '-1');\n\n              _viewportElementNative.focus();\n              /* the tabindex has to be removed due to;\r\n               * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n               * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n               */\n\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, false, true);\n            }\n          } //update for the first time & initialize cache\n\n\n          _base.update(_strAuto); //the plugin is initialized now!\n\n\n          _initialized = true;\n          dispatchCallback('onInitialized'); //call all callbacks which would fire before the initialized was complete\n\n          each(_callbacksInitQeueue, function (index, value) {\n            dispatchCallback(value.n, value.a);\n          });\n          _callbacksInitQeueue = []; //add extensions\n\n          if (type(extensions) == TYPES.s) extensions = [extensions];\n          if (COMPATIBILITY.isA(extensions)) each(extensions, function (index, value) {\n            _base.addExt(value);\n          });else if (FRAMEWORK.isPlainObject(extensions)) each(extensions, function (key, value) {\n            _base.addExt(key, value);\n          }); //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\n\n          setTimeout(function () {\n            if (_supportTransition && !_destroyed) addClass(_hostElement, _classNameHostTransition);\n          }, 333);\n          return _base;\n        }\n\n        if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\n          INSTANCES(pluginTargetElement, _base);\n        }\n\n        return _base;\n      }\n      /**\r\n       * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n       * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n       * @param options The custom options with which the plugin shall be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*}\r\n       */\n\n\n      _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var arr = [];\n        var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\n        var inst;\n        var result; //pluginTargetElements is null or undefined\n\n        if (!pluginTargetElements) return optsIsPlainObj || !options ? result : arr;\n        /*\r\n           pluginTargetElements will be converted to:\r\n           1. A jQueryElement Array\r\n           2. A HTMLElement Array\r\n           3. A Array with a single HTML Element\r\n           so pluginTargetElements is always a array.\r\n        */\n\n        pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined$1 ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\n        initOverlayScrollbarsStatics();\n\n        if (pluginTargetElements[LEXICON.l] > 0) {\n          if (optsIsPlainObj) {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = v;\n              if (inst !== undefined$1) arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\n            });\n          } else {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = INSTANCES(v);\n              if (options === '!' && _plugin.valid(inst) || COMPATIBILITY.type(options) == TYPES.f && options(v, inst)) arr.push(inst);else if (options === undefined$1) arr.push(inst);\n            });\n          }\n\n          result = arr[LEXICON.l] === 1 ? arr[0] : arr;\n        }\n\n        return result;\n      };\n      /**\r\n       * Returns a object which contains global information about the plugin and each instance of it.\r\n       * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n       */\n\n\n      _plugin.globals = function () {\n        initOverlayScrollbarsStatics();\n        var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\n        delete globals['msie'];\n        return globals;\n      };\n      /**\r\n       * Gets or Sets the default options for each new plugin initialization.\r\n       * @param newDefaultOptions The object with which the default options shall be extended.\r\n       */\n\n\n      _plugin.defaultOptions = function (newDefaultOptions) {\n        initOverlayScrollbarsStatics();\n        var currDefaultOptions = _pluginsGlobals.defaultOptions;\n        if (newDefaultOptions === undefined$1) return FRAMEWORK.extend(true, {}, currDefaultOptions); //set the new default options\n\n        _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\n      };\n      /**\r\n       * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n       * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n       * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n       */\n\n\n      _plugin.valid = function (osInstance) {\n        return osInstance instanceof _plugin && !osInstance.getState().destroyed;\n      };\n      /**\r\n       * Registers, Unregisters or returns a extension.\r\n       * Register: Pass the name and the extension. (defaultOptions is optional)\r\n       * Unregister: Pass the name and anything except a function as extension parameter.\r\n       * Get extension: Pass the name of the extension which shall be got.\r\n       * Get all extensions: Pass no arguments.\r\n       * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n       * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n       * @param defaultOptions The default options which shall be used for the registered extension.\r\n       */\n\n\n      _plugin.extension = function (extensionName, extension, defaultOptions) {\n        var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\n        var argLen = arguments[LEXICON.l];\n        var i = 0;\n\n        if (argLen < 1 || !extNameTypeString) {\n          //return a copy of all extension objects\n          return FRAMEWORK.extend(true, {\n            length: _pluginsExtensions[LEXICON.l]\n          }, _pluginsExtensions);\n        } else if (extNameTypeString) {\n          if (COMPATIBILITY.type(extension) == TYPES.f) {\n            //register extension\n            _pluginsExtensions.push({\n              name: extensionName,\n              extensionFactory: extension,\n              defaultOptions: defaultOptions\n            });\n          } else {\n            for (; i < _pluginsExtensions[LEXICON.l]; i++) {\n              if (_pluginsExtensions[i].name === extensionName) {\n                if (argLen > 1) _pluginsExtensions.splice(i, 1); //remove extension\n                else return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\n              }\n            }\n          }\n        }\n      };\n\n      return _plugin;\n    }();\n\n    if (JQUERY && JQUERY.fn) {\n      /**\r\n       * The jQuery initialization interface.\r\n       * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n       */\n      JQUERY.fn.overlayScrollbars = function (options, extensions) {\n        var _elements = this;\n\n        if (JQUERY.isPlainObject(options)) {\n          JQUERY.each(_elements, function () {\n            PLUGIN(this, options, extensions);\n          });\n          return _elements;\n        } else return PLUGIN(_elements, options);\n      };\n    }\n\n    return PLUGIN;\n  });\n})(OverlayScrollbars$1);\n\nvar OverlayScrollbars = OverlayScrollbars$1.exports;\n/**\n * Using overlayscrollbars-react component results use the esm modules\n * which doesn't go through babel leading to IE 11 uncompatibility\n * A PR is submitted that may fix this:\n * https://github.com/KingSora/OverlayScrollbars/pull/218\n * */\n\nvar OverlayScrollbarsComponent = function OverlayScrollbarsComponent(_a) {\n  var _a$options = _a.options,\n      options = _a$options === void 0 ? {} : _a$options,\n      extensions = _a.extensions,\n      className = _a.className,\n      children = _a.children,\n      rest = __rest(_a, [\"options\", \"extensions\", \"className\", \"children\"]);\n\n  var osTargetRef = useRef();\n  var osInstance = useRef();\n  useEffect(function () {\n    osInstance.current = OverlayScrollbars(osTargetRef.current, options, extensions);\n    mergeHostClassNames(osInstance.current, className);\n    return function () {\n      if (OverlayScrollbars.valid(osInstance.current)) {\n        osInstance.current.destroy();\n        osInstance.current = null;\n      }\n    };\n  }, []);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      osInstance.current.options(options);\n    }\n  }, [options]);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      mergeHostClassNames(osInstance.current, className);\n    }\n  }, [className]);\n  return React__default.createElement(\"div\", Object.assign({\n    className: \"os-host\"\n  }, rest, {\n    ref: osTargetRef\n  }), React__default.createElement(\"div\", {\n    className: \"os-resize-observer-host\"\n  }), React__default.createElement(\"div\", {\n    className: \"os-padding\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-viewport\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-content\"\n  }, children))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-horizontal \"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-vertical\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar-corner\"\n  }));\n};\n\nfunction mergeHostClassNames(osInstance, className) {\n  if (OverlayScrollbars.valid(osInstance)) {\n    var _osInstance$getElemen = osInstance.getElements(),\n        host = _osInstance$getElemen.host;\n\n    var regex = new RegExp(\"(^os-host([-_].+|)$)|\".concat(osInstance.options().className.replace(/\\s/g, '$|'), \"$\"), 'g');\n    var osClassNames = host.className.split(' ').filter(function (name) {\n      return name.match(regex);\n    }).join(' ');\n    host.className = \"\".concat(osClassNames, \" \").concat(className || '');\n  }\n}\n\nexport { OverlayScrollbarsComponent, OverlayScrollbarsComponent as default };\n"],"names":["_typeof","obj","__name","OverlayScrollbars$1","module","global","factory","commonjsGlobal","window","document","undefined$1","PLUGINNAME","TYPES","LEXICON","VENDORS","jsCache","cssCache","cssPrefixes","jsPrefixes","firstLetterToUpper","str","name","result","uppercasedName","elmStyle","resultPossibilities","i","v","currVendorWithoutDashes","property","values","suffix","dummyStyle","possbleValues","preparedSuffix","prop","isInterface","fallback","COMPATIBILITY","windowSize","x","bind","func","thisObj","proto","aArgs","fNOP","fBound","id","event","strPage","strClient","strX","strY","target","eventDoc","doc","body","touch","button","item","arr","def","MATH","JQUERY","EASING","_easingsMath","t","b","c","d","s","p","a","o","FRAMEWORK","_rnothtmlwhite","_strSpace","_strEmpty","_strScrollLeft","_strScrollTop","_animations","_type","_cssNumber","extend","src","copyIsArray","copy","options","clone","length","deep","FakejQuery","isPlainObject","inArray","fromIndex","isFunction","isEmptyObject","key","hasOwnProperty","hasOwnConstructor","hasIsPrototypeOf","_each","callback","isArrayLike","stripAndCollapse","value","tokens","matches","elem","selector","nodeList","insertAdjacentElement","el","strategy","child","setCSSVal","val","parseCSSVal","startNextAnimationInQ","animObj","removeFromQ","index","nextAnim","_animate","setAnimationValue","props","easing","complete","guaranteedNext","hasOptions","from","to","progress","step","specialEasing","duration","timeNow","end","percent","fromVal","toVal","easedVal","timeStart","_frame","elapsed","qPos","qObj","_stop","clearQ","jumpToEnd","elementIsVisible","base","elements","elms","eventName","handler","eventNameLength","oneEventName","oneHandler","e","parentNode","parents","parent","wrapperHTML","nodes","wrapper","deepest","previousSibling","nextSibling","contents","styles","cptStyle","getCptStyle","className","classNamePrepared","classList","classes","cur","curValue","clazz","finalValue","supportClassList","elmClassList","attrName","rect","scrollLeft","scrollTop","children","ch","childs","jump","INSTANCES","_targets","_instancePropertyString","instance","argLen","PLUGIN","_plugin","_pluginsGlobals","_pluginsAutoUpdateLoop","_pluginsExtensions","_pluginsOptions","type","possibleTemplateTypes","restrictedStringsSplit","restrictedStringsPossibilitiesSplit","classNameAllowedValues","numberAllowedValues","booleanNullAllowedValues","booleanTrueTemplate","booleanFalseTemplate","callbackTemplate","updateOnLoadTemplate","inheritedAttrsTemplate","resizeAllowedValues","overflowBehaviorAllowedValues","scrollbarsVisibilityAllowedValues","scrollbarsAutoHideAllowedValues","optionsDefaultsAndTemplate","convert","template","recursive","valType","writeErrors","diffObj","validatedOptions","validatedOptionsPrepared","objectCopy","isEmptyObj","checkObjectProps","data","diffData","prevPropName","isValid","isDiff","templateValue","templateValueType","templateIsComplex","templateTypes","dataDiffValue","dataValue","dataValueType","propPrefix","error","errorPossibleTypes","errorRestrictedStrings","restrictedStringValuesSplit","restrictedStringValuesPossibilitiesSplit","isRestrictedValue","mainPossibility","currType","j","initOverlayScrollbarsStatics","OverlayScrollbarsGlobals","OverlayScrollbarsAutoUpdateLoop","defaultOptions","_base","strOverflow","strHidden","strScroll","bodyElement","scrollbarDummyElement","scrollbarDummyElement0","dummyContainerChild","nativeScrollbarSize","calcNativeScrollbarSize","nativeScrollbarIsOverlaid","msie","ua","strIndexOf","strSubString","trident","edge","rv","parseIntFunc","scrollSize","scrollSize2","dummyContainerOffset","dummyContainerChildOffset","dummyContainerChildOffsetAfterScroll","supportsPassive","abs","windowWidth","windowHeight","windowDpr","getWindowDPR","onResize","newW","newH","deltaW","deltaH","deltaWRatio","deltaHRatio","absDeltaW","absDeltaH","absDeltaWRatio","absDeltaHRatio","newDPR","deltaIsBigger","difference","differenceIsBiggerThanOne","dprChanged","isZoom","oldScrollbarSize","newScrollbarSize","valOne","valTwo","absValOne","absValTwo","dDPI","sDPI","measureElement","globals","_inArray","_getNow","_strAutoUpdate","_strAutoUpdateInterval","_strLength","_loopingInstances","_loopingInstancesIntervalCache","_loopIsActive","_loopIntervalDefault","_loopInterval","_loopTimeOld","_loopID","loop","timeNew","timeDelta","lowestInterval","instanceOptions","instanceAutoUpdateAllowed","instanceAutoUpdateInterval","now","OverlayScrollbarsInstance","pluginTargetElement","extensions","autoUpdateLoop","each","_frameworkProto","isHTMLElement","inst","_nativeScrollbarIsOverlaid","_overlayScrollbarDummySize","_rtlScrollBehavior","_autoUpdateRecommended","_msieVersion","_nativeScrollbarStyling","_cssCalc","_nativeScrollbarSize","_supportTransition","_supportTransform","_supportPassiveEvents","_supportResizeObserver","_supportMutationObserver","_initialized","_destroyed","_isTextarea","_isBody","_documentMixed","_domExists","_isBorderBox","_sizeAutoObserverAdded","_paddingX","_paddingY","_borderX","_borderY","_marginX","_marginY","_isRTL","_sleeping","_contentBorderSize","_scrollHorizontalInfo","_scrollVerticalInfo","_viewportSize","_nativeScrollbarMinSize","_strMinusHidden","_strMarginMinus","_strPaddingMinus","_strBorderMinus","_strTop","_strRight","_strBottom","_strLeft","_strMinMinus","_strMaxMinus","_strWidth","_strHeight","_strFloat","_strAuto","_strSync","_strScroll","_strHundredPercent","_strX","_strY","_strDot","_strScrollbar","_strMinusHorizontal","_strMinusVertical","_strMouseTouchDownEvent","_strMouseTouchUpEvent","_strMouseTouchMoveEvent","_strMouseEnter","_strMouseLeave","_strKeyDownEvent","_strKeyUpEvent","_strSelectStartEvent","_strTransitionEndEvent","_strResizeObserverProperty","_cassNamesPrefix","_classNameHTMLElement","_classNameHostElement","_classNameHostElementForeign","_classNameHostTextareaElement","_classNameHostScrollbarHorizontalHidden","_classNameHostScrollbarVerticalHidden","_classNameHostTransition","_classNameHostRTL","_classNameHostResizeDisabled","_classNameHostScrolling","_classNameHostOverflow","_classNameHostOverflowX","_classNameHostOverflowY","_classNameTextareaElement","_classNameTextareaCoverElement","_classNamePaddingElement","_classNameViewportElement","_classNameViewportNativeScrollbarsInvisible","_classNameViewportNativeScrollbarsOverlaid","_classNameContentElement","_classNameContentArrangeElement","_classNameContentGlueElement","_classNameSizeAutoObserverElement","_classNameResizeObserverElement","_classNameResizeObserverItemElement","_classNameResizeObserverItemFinalElement","_classNameTextInherit","_classNameScrollbar","_classNameScrollbarTrack","_classNameScrollbarTrackOff","_classNameScrollbarHandle","_classNameScrollbarHandleOff","_classNameScrollbarUnusable","_classNameScrollbarAutoHidden","_classNameScrollbarCorner","_classNameScrollbarCornerResize","_classNameScrollbarCornerResizeB","_classNameScrollbarCornerResizeH","_classNameScrollbarCornerResizeV","_classNameScrollbarHorizontal","_classNameScrollbarVertical","_classNameDragging","_classNameThemeNone","_classNamesDynamicDestroy","_callbacksInitQeueue","_viewportAttrsFromTarget","_defaultOptions","_currentOptions","_currentPreparedOptions","_extensions","_extensionsPrivateMethods","_lastUpdateTime","_swallowedUpdateHints","_swallowedUpdateTimeout","_swallowUpdateLag","_updateOnLoadEventName","_updateOnLoadElms","_windowElement","_documentElement","_htmlElement","_bodyElement","_targetElement","_hostElement","_sizeAutoObserverElement","_sizeObserverElement","_paddingElement","_viewportElement","_contentElement","_contentArrangeElement","_contentGlueElement","_textareaCoverElement","_scrollbarCornerElement","_scrollbarHorizontalElement","_scrollbarHorizontalTrackElement","_scrollbarHorizontalHandleElement","_scrollbarVerticalElement","_scrollbarVerticalTrackElement","_scrollbarVerticalHandleElement","_windowElementNative","_documentElementNative","_targetElementNative","_hostElementNative","_sizeAutoObserverElementNative","_sizeObserverElementNative","_paddingElementNative","_viewportElementNative","_contentElementNative","_hostSizeCache","_contentScrollSizeCache","_arrangeContentSizeCache","_hasOverflowCache","_hideOverflowCache","_widthAutoCache","_heightAutoCache","_cssBoxSizingCache","_cssPaddingCache","_cssBorderCache","_cssMarginCache","_cssDirectionCache","_cssDirectionDetectedCache","_paddingAbsoluteCache","_clipAlwaysCache","_contentGlueSizeCache","_overflowBehaviorCache","_overflowAmountCache","_ignoreOverlayScrollbarHidingCache","_autoUpdateCache","_sizeAutoCapableCache","_contentElementScrollSizeChangeDetectedCache","_hostElementSizeChangeDetectedCache","_scrollbarsVisibilityCache","_scrollbarsAutoHideCache","_scrollbarsClickScrollingCache","_scrollbarsDragScrollingCache","_resizeCache","_normalizeRTLCache","_classNameCache","_oldClassName","_textareaAutoWrappingCache","_textareaInfoCache","_textareaSizeCache","_textareaDynHeightCache","_textareaDynWidthCache","_bodyMinSizeCache","_updateAutoCache","_mutationObserverHost","_mutationObserverContent","_mutationObserverHostCallback","_mutationObserverContentCallback","_mutationObserversConnected","_mutationObserverAttrsTextarea","_mutationObserverAttrsHost","_destroyEvents","_textareaHasFocus","_scrollbarsAutoHideTimeoutId","_scrollbarsAutoHideMoveTimeoutId","_scrollbarsAutoHideDelay","_scrollbarsAutoHideNever","_scrollbarsAutoHideScroll","_scrollbarsAutoHideMove","_scrollbarsAutoHideLeave","_scrollbarsHandleHovered","_scrollbarsHandlesDefineScrollPos","_resizeNone","_resizeBoth","_resizeHorizontal","_resizeVertical","setupResponsiveEventListener","element","eventNames","listener","remove","passiveOrOptions","collected","method","onOff","events","passiveOrOptionsIsObj","passive","capture","nativeParam","addDestroyEventListener","setupResizeObserver","targetElement","onElementResizedCallback","resizeObserver","strAnimationStartEvent","strChildNodes","constScroll","generateDiv","observer","observerElement","shrinkElement","expandElement","expandElementChild","widthCache","heightCache","isDirty","rAFId","currWidth","currHeight","factor","reset","onResized","onScroll","expandChildCSS","observerElementCSS","setTopRightBottomLeft","attachEvent","isIE","findFirst","wnd","directionChanged","dir","css","scrollLeftValue","update","resizeObserverObj","createMutationObservers","mutationObserverContentLag","mutationObserver","contentLastUpdate","mutationTarget","mutationAttrName","mutationIsClass","oldMutationVal","newClassVal","hostClassNameRegex","contentTimeout","sizeAuto","action","mutations","doUpdate","doUpdateForce","mutation","mutatedAttrs","createHostClassNameRegExp","hostClassNamesChanged","updateViewportAttrsFromTarget","isUnknownMutation","textareaUpdate","connectMutationObservers","disconnectMutationObservers","hostOnResized","changed","hostSize","checkCache","hostOnMouseEnter","refreshScrollbarsAutoHide","hostOnMouseLeave","hostOnMouseMove","documentOnSelectStart","updateOnLoadCallback","elm","eachUpdateOnLoad","updateOnLoadSelector","setupHostMouseTouchEvents","destroy","bodyMinSizeChanged","bodyMinSize","parseToZeroOrNumber","oldClassNames","newClassNames","currClasses","oldClasses","diff","getArrayDifferences","idx","regex","attributeName","mutationType","strClosest","updateAutoContentSizeChanged","contentMeasureElement","getContentMeasureElement","textareaValueLength","setCSS","float","bodyMinSizeC","contentElementScrollSize","meaningfulAttrsChanged","curr","cache","changedAttrs","checks","check","attr","isSizeAffectingCSSProperty","propertyName","flexGrow","flexShrink","flexBasis","affectingPropsX","affectingPropsXContentBox","affectingPropsY","affectingPropsYContentBox","_strS","_strVS","checkX","checkY","sizeIsAffected","checkPropertyName","attrs","targetAttr","wrapAttrOff","minWidth","minHeight","doMeasure","origWidth","width","origHeight","height","updateHints","hostSizeChanged","contentSizeChanged","force","changedOptions","swallow","displayIsHidden","extendDeep","checkCacheAutoForce","currScroll","currentPreparedOptionsScrollbars","currentPreparedOptionsTextarea","scrollbarsVisibility","scrollbarsVisibilityChanged","scrollbarsAutoHide","scrollbarsAutoHideChanged","scrollbarsClickScrolling","scrollbarsClickScrollingChanged","scrollbarsDragScrolling","scrollbarsDragScrollingChanged","classNameChanged","resize","resizeChanged","paddingAbsolute","paddingAbsoluteChanged","clipAlways","clipAlwaysChanged","sizeAutoCapable","sizeAutoCapableChanged","ignoreOverlayScrollbarHiding","ignoreOverlayScrollbarHidingChanged","autoUpdate","autoUpdateChanged","overflowBehavior","overflowBehaviorChanged","textareaDynWidth","textareaDynWidthChanged","textareaDynHeight","textareaDynHeightChanged","removeClass","addClass","oldSize","newSize","textareaAutoWrapping","textareaAutoWrappingChanged","cssDirection","cssDirectionChanged","boxSizing","boxSizingChanged","padding","getTopRightBottomLeftHost","sizeAutoObserverElementBCRect","isRTLLeft","isRTLRight","widthAutoResizeDetection","widthAutoObserverDetection","tmpCurrHostWidth","tmpCurrContentGlueWidth","tmpNewHostWidth","widthAuto","widthAutoChanged","wasWidthAuto","heightAuto","heightAutoChanged","wasHeightAuto","updateBorderX","updateBorderY","border","margin","contentElementCSS","contentGlueElementCSS","getHostSize","getViewportSize","paddingAbsoluteX","paddingAbsoluteY","paddingElementCSS","textareaCSS","paddingValues","textareaSize","textareaSizeChanged","textareaDynOrigSize","strOverflowX","strOverflowY","strVisible","viewportElementResetCSS","resetXTmp","resetBottomTmp","contentSize","hostAbsoluteRectSize","contentGlueSize","textareaCoverCSS","setContentGlueElementCSSfunction","horizontal","scrollbarVars","getScrollbarVars","wh","strWH","autoSize","borderSize","paddingSize","marginSize","viewportSize","contentScrollSize","hideOverflowForceTextarea","previousOverflowAmount","overflowBehaviorIsVS","overflowBehaviorIsVH","overflowBehaviorIsS","overflowAmount","hasOverflow","hideOverflow","canScroll","viewportRect","setOverflowVariables","scrollbarVarsInverted","xyI","xy","widthHeight","scrollMax","fractionalOverflowAmount","checkFractionalOverflowAmount","borderDesign","contentArrangeElementCSS","arrangeContent","arrangeChanged","setContentElementCSS","strDirection","invertedAutoSize","addRemoveClass","viewportElementCSS","setViewportCSS","XY","elementStyle","floatTmp","posLeftWithoutFloat","posLeftWithFloat","textareaInfo","getTextareaInfo","textareaRowsChanged","cursorRow","cursorCol","widestRow","lastRow","lastCol","cursorPos","cursorMax","cursorIsLastPosition","textareaScrollAmount","scrollbarsVisibilityVisible","scrollbarsVisibilityHidden","scrollbarsVisibilityAuto","refreshScrollbarsVisibility","showX","showY","refreshScrollbarAppearance","refreshScrollbarHandleLength","refreshScrollbarHandleOffset","refreshScrollbarsInteractive","dispatchCallback","updateElementsOnLoad","setOptions","newOptions","validatedOpts","setupStructureDOM","strParent","classNameResizeObserverHost","classNameTextareaElementFull","textareaClass","adoptAttrs","adoptAttrsMap","applyAdoptedAttrs","applyAdoptedAttrsElm","hostElementClassNames","hostElementCSS","selectOrGenerateDivByClass","setupStructureEvents","textareaKeyDownRestrictedKeyCodes","textareaKeyDownKeyCodesList","textareaUpdateIntervalID","scrollStopTimeoutId","scrollStopDelay","strFocus","updateTextarea","doClearInterval","textareaOnScroll","textareaOnDrop","textareaOnFocus","textareaOnFocusout","textareaOnKeyDown","keyCode","textareaOnKeyUp","contentOnTransitionEnd","viewportOnScroll","nativeOverlayScrollbarsAreActive","setupScrollbarsDOM","selectOrGenerateScrollbarDOM","isHorizontal","scrollbarClassName","scrollbar","track","handle","resetScrollbarDOM","horizontalElements","verticalElements","setupScrollbarEvents","scrollbarVarsInfo","insideIFrame","scroll","strActive","strSnapHandle","strClickEvent","scrollDurationFactor","increaseDecreaseScrollAmountKeyCodes","trackTimeout","mouseDownScroll","mouseDownOffset","mouseDownInvertedScale","getPointerPosition","getPreparedScrollbarsOption","increaseTrackScrollAmount","decreaseTrackScrollAmount","stopClickEventPropagation","documentKeyDown","documentKeyUp","onMouseTouchDownContinue","originalEvent","isTouchEvent","documentDragMove","trackLength","handleLength","scrollRange","scrollRaw","scrollDeltaPercent","scrollDelta","documentMouseTouchUp","mouseInsideHost","onHandleMouseTouchDown","onHandleMouseTouchDownAction","getHostElementInvertedScale","onTrackMouseTouchDown","handleToViewportRatio","scrollDistance","scrollBaseDuration","scrollFirstIterationDelay","trackOffset","ctrlKey","instantScroll","instantScrollTransition","isFirstIteration","decreaseScroll","finishedCondition","scrollActionFinsished","transition","scrollActionInstantFinished","scrollAction","mouseOffset","handleOffset","scrollDuration","timeoutDelay","instantScrollPosition","rtlIsNormal","decreaseScrollCondition","scrollObj","animationObj","onTrackMouseTouchEnter","onTrackMouseTouchLeave","onScrollbarMouseTouchDown","shallBeVisible","scrollbarHiddenClassName","scrollbarElement","delayfree","anyActive","hide","handleCSS","digit","handleRatio","scrollOrTransition","transitionDuration","isRTLisHorizontal","strTranslateBrace","strTransform","strTransition","nativeScroll","currentScroll","handleTrackDiff","transformOffset","translateValue","maxScroll","getScrollRatio","getHandleOffset","scrollRatio","offset","unsnappedScrollRatio","snappedHandleOffset","getCSSTransitionString","isTrack","element1","element2","setupScrollbarCornerDOM","setupScrollbarCornerEvents","mouseDownPosition","mouseDownSize","reconnectMutationObserver","pageOffset","getCoordinates","eventIsTrusted","args","dependent","extensionOnName","ext","targetCSSObject","prefix","zeroX","zeroY","transitionStr","assembledValue","regExpString","regExpMain","regExpValidate","properties","strResult","valueArray","splitCssStyleByComma","withCurrClassNameOption","withOldClassNameOption","split","appendix","appendClasses","condition","strOwnerDocument","strHTMLElement","a1","a2","k","toFloat","num","textareaCursorPosition","textareaValue","textareaLength","textareaRowSplit","textareaLastRow","textareaCurrentCursorRowSplit","textareaLastCol","rowCols","classesOrAttrs","content","selectParentOrOnlyChildren","onlyChildren","selectParent","getObjectPropVal","path","splits","setObjectPropVal","splitsLength","extendObj","extendObjRoot","updateOnLoad","current","doAdd","attrsChanged","contentSizeC","isString","doUpdateAuto","mutHost","mutContent","option","changedOps","extName","coordinates","infoX","infoY","normalizeInvert","normalizeNegate","scrollX","scrollXRatio","maxScrollX","normalizeRTL","coordinatesXAxisProps","coordinatesYAxisProps","coordinatesOperators","durationIsObject","completeCallback","finalScroll","doScrollLeft","doScrollTop","animationOptions","strEnd","strBegin","strCenter","strNearest","strAlways","strNever","strIfNeeded","strLength","settingsAxis","settingsScroll","settingsBlock","settingsMargin","finalElement","elementObjSettingsAxisValues","elementObjSettingsBlockValues","elementObjSettingsScrollValues","coordinatesIsElementObj","possibleElement","possibleElementIsJQuery","possibleElementIsHTMLElement","updateScrollbarInfos","proxyCompleteCallback","checkSettingsStringValue","currValue","allowedValues","getRawScroll","isX","coordinateProps","getFinalScroll","rawScroll","operator","amount","scrollInfo","mult","isRTLisX","normalizeShortcuts","strReplace","evalFunc","possibleOperator","normalizeIsRTLisX","operatorCurrScroll","invert","negate","getPerAxisValue","valueInternalType","defaultValue","resultDefault","valueType","valueArrLength","valueArrItem","generateMargin","marginTopRightBottomLeftArray","currValueType","valueDirections","axis","block","marginDefault","marginType","marginLength","viewportScroll","viewportOffset","elementOffset","doNotScroll","elementScrollCoordinates","measuringElm","rawElementSize","elementSize","finalizeBlock","vars","lt","blockIsEnd","blockIsCenter","blockIsNearest","scrollNever","scrollIfNeeded","vpSize","vpOffset","elSize","elOffset","divide","elementCenterOffset","viewportCenterOffset","isInView","param1","param2","param3","elementName","stateProperty","prepare","extended","changePropertyName","privateMethods","extensionOptions","registeredExtensionObj","instanceAdded","instanceContract","contractResult","contractFulfilled","instanceRemoved","construct","initBodyScroll","_bodyMouseTouchDownListener","pluginTargetElements","optsIsPlainObj","newDefaultOptions","currDefaultOptions","osInstance","extensionName","extension","extNameTypeString","_elements","OverlayScrollbars","OverlayScrollbarsComponent","_a","_a$options","rest","__rest","osTargetRef","useRef","useEffect","mergeHostClassNames","React__default","_osInstance$getElemen","host","osClassNames"],"mappings":"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","x_google_ignoreList":[0]}